!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct A { A(const A&) = delete; };$/;"	s	file:
A	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct A { A(const A&) = delete; };$/;"	s	file:
A	deplib/ntl-main/src/mat_lzz_p.cpp	/^   const mat_zz_p &A;$/;"	m	struct:const_mat_window_zz_p	file:
A	deplib/ntl-main/src/mat_lzz_p.cpp	/^   mat_zz_p &A;$/;"	m	struct:mat_window_zz_p	file:
AA	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct AA { A a; };$/;"	s	file:
AA	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct AA { A a; };$/;"	s	file:
ABS	deplib/ntl-main/src/lip.cpp	/^ABS(long x)$/;"	f	file:
ADD_VEC_32	deplib/ntl-main/src/ZZ.cpp	2985;"	d	file:
ADD_VEC_32	deplib/ntl-main/src/ZZ.cpp	3037;"	d	file:
ADD_VEC_64	deplib/ntl-main/src/ZZ.cpp	2986;"	d	file:
ADD_VEC_64	deplib/ntl-main/src/ZZ.cpp	3038;"	d	file:
AES128_CFB_TEST_CIPHER	Makefile	/^AES128_CFB_TEST_CIPHER = 3b3fd92eb72dad20333449f8e83cfb4ac8a64537a0b3a93fcde3cdad9f1ce58b26751f67a3cbb140b1808cf187a4f4dfc04b05357c5d1c0eeac4c66f9ff7f2e6$/;"	m
AES128_CFB_TEST_IV	Makefile	/^AES128_CFB_TEST_IV     = 000102030405060708090a0b0c0d0e0f$/;"	m
AES128_CTR_TEST_CIPHER	Makefile	/^AES128_CTR_TEST_CIPHER = 874d6191b620e3261bef6864990db6ce9806f66b7970fdff8617187bb9fffdff5ae4df3edbd5d35e5b4f09020db03eab1e031dda2fbe03d1792170a0f3009cee$/;"	m
AES128_CTR_TEST_NONCE	Makefile	/^AES128_CTR_TEST_NONCE  = f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff$/;"	m
AES128_KEY	Makefile	/^AES128_KEY             = 2b7e151628aed2a6abf7158809cf4f3c$/;"	m
AES128_OFB_TEST_CIPHER	Makefile	/^AES128_OFB_TEST_CIPHER = 3b3fd92eb72dad20333449f8e83cfb4a7789508d16918f03f53c52dac54ed8259740051e9c5fecf64344f7a82260edcc304c6528f659c77866a510d9c1d6ae5e$/;"	m
AES128_OFB_TEST_IV	Makefile	/^AES128_OFB_TEST_IV     = 000102030405060708090a0b0c0d0e0f$/;"	m
AES192_CFB_TEST_CIPHER	Makefile	/^AES192_CFB_TEST_CIPHER = cdc80d6fddf18cab34c25909c99a417467ce7f7f81173621961a2b70171d3d7a2e1e8a1dd59b88b1c8e60fed1efac4c9c05f9f9ca9834fa042ae8fba584b09ff$/;"	m
AES192_CFB_TEST_IV	Makefile	/^AES192_CFB_TEST_IV     = 000102030405060708090a0b0c0d0e0f$/;"	m
AES192_CTR_TEST_CIPHER	Makefile	/^AES192_CTR_TEST_CIPHER = 1abc932417521ca24f2b0459fe7e6e0b090339ec0aa6faefd5ccc2c6f4ce8e941e36b26bd1ebc670d1bd1d665620abf74f78a7f6d29809585a97daec58c6b050$/;"	m
AES192_CTR_TEST_NONCE	Makefile	/^AES192_CTR_TEST_NONCE  = f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff$/;"	m
AES192_KEY	Makefile	/^AES192_KEY             = 8e73b0f7da0e6452c810f32b809079e562f8ead2522c6b7b$/;"	m
AES192_OFB_TEST_CIPHER	Makefile	/^AES192_OFB_TEST_CIPHER = cdc80d6fddf18cab34c25909c99a4174fcc28b8d4c63837c09e81700c11004018d9a9aeac0f6596f559c6d4daf59a5f26d9f200857ca6c3e9cac524bd9acc92a$/;"	m
AES192_OFB_TEST_IV	Makefile	/^AES192_OFB_TEST_IV     = 000102030405060708090a0b0c0d0e0f$/;"	m
AES256Encrypt	deplib/ntl-main/src/ZZ.cpp	/^void AES256Encrypt(const u32 rk[60], const u8 pt[16], u8 ct[16]) {$/;"	f
AES256KeySetupEnc	deplib/ntl-main/src/ZZ.cpp	/^void AES256KeySetupEnc(u32 rk[60], const u8 cipherKey[32]) {$/;"	f
AES256_CFB_TEST_CIPHER	Makefile	/^AES256_CFB_TEST_CIPHER = dc7e84bfda79164b7ecd8486985d386039ffed143b28b1c832113c6331e5407bdf10132415e54b92a13ed0a8267ae2f975a385741ab9cef82031623d55b1e471$/;"	m
AES256_CFB_TEST_IV	Makefile	/^AES256_CFB_TEST_IV     = 000102030405060708090a0b0c0d0e0f$/;"	m
AES256_CTR_TEST_CIPHER	Makefile	/^AES256_CTR_TEST_CIPHER = 601ec313775789a5b7a7f504bbf3d228f443e3ca4d62b59aca84e990cacaf5c52b0930daa23de94ce87017ba2d84988ddfc9c58db67aada613c2dd08457941a6$/;"	m
AES256_CTR_TEST_NONCE	Makefile	/^AES256_CTR_TEST_NONCE  = f0f1f2f3f4f5f6f7f8f9fafbfcfdfeff$/;"	m
AES256_KEY	Makefile	/^AES256_KEY             = 603deb1015ca71be2b73aef0857d77811f352c073b6108d72d9810a30914dff4$/;"	m
AES256_OFB_TEST_CIPHER	Makefile	/^AES256_OFB_TEST_CIPHER = dc7e84bfda79164b7ecd8486985d38604febdc6740d20b3ac88f6ad82a4fb08d71ab47a086e86eedf39d1c5bba97c4080126141d67f37be8538f5a8be740e484$/;"	m
AES256_OFB_TEST_IV	Makefile	/^AES256_OFB_TEST_IV     = 000102030405060708090a0b0c0d0e0f$/;"	m
AESENCLASTx	deplib/ntl-main/src/ZZ.cpp	2147;"	d	file:
AESENCx	deplib/ntl-main/src/ZZ.cpp	2143;"	d	file:
AES_H_	aes.h	6;"	d
AES_PRIVATE_H_	aes_private.h	6;"	d
AES_WHITEBOX_H_	aes_whitebox.h	6;"	d
ALIGN16	deplib/ntl-main/src/ZZ.cpp	2006;"	d	file:
ALIGN16	deplib/ntl-main/src/ZZ.cpp	2010;"	d	file:
ALIGN32	deplib/ntl-main/src/ZZ.cpp	2007;"	d	file:
ALIGN32	deplib/ntl-main/src/ZZ.cpp	2011;"	d	file:
ALIGN64	deplib/ntl-main/src/ZZ.cpp	2008;"	d	file:
ALIGN64	deplib/ntl-main/src/ZZ.cpp	2012;"	d	file:
ALLOC	deplib/ntl-main/src/lip.cpp	/^inline long& ALLOC(_ntl_gbigint p) $/;"	f	file:
AR	deplib/ntl-main/src/makefile	/^AR=ar$/;"	m
ARFLAGS	deplib/ntl-main/src/makefile	/^ARFLAGS=ruv$/;"	m
AUXPROGS	deplib/ntl-main/src/makefile	/^AUXPROGS = TestGetTime TestGetPID CheckFeatures CheckCompile GenConfigInfo CheckContract \\$/;"	m
AU_VERSION	aunit.h	4;"	d
AbsPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR AbsPrec(const RR& a, long p)$/;"	f
AbsPrec	deplib/ntl-main/src/RR.cpp	/^void AbsPrec(RR& x, const RR& a, long p)$/;"	f
AbsTraceMap	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void AbsTraceMap(ZZ_pEX& h, const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f	file:
AbsTraceMap	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void AbsTraceMap(zz_pEX& h, const zz_pEX& a, const zz_pEXModulus& F)$/;"	f	file:
AddExpand	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(AddExpand)(FFTRep& x, const FFTRep& a)$/;"	f
AddExpand	deplib/ntl-main/src/ZZ_pX.cpp	/^void AddExpand(FFTRep& x, const FFTRep& a)$/;"	f
AddExpand	deplib/ntl-main/src/lzz_pX.cpp	/^void AddExpand(fftRep& x, const fftRep& a)$/;"	f
AddFactor	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void AddFactor(vec_pair_GF2EX_long& factors, const GF2EX& g, long d, long verbose)$/;"	f	file:
AddFactor	deplib/ntl-main/src/GF2XFactoring.cpp	/^void AddFactor(vec_pair_GF2X_long& factors, const GF2X& g, long d, long verbose)$/;"	f	file:
AddFactor	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void AddFactor(vec_pair_ZZ_pX_long& factors, const ZZ_pX& g, long d, long verbose)$/;"	f	file:
AddFactor	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void AddFactor(vec_pair_zz_pX_long& factors, const zz_pX& g, long d, long verbose)$/;"	f	file:
AddFile	deplib/ntl-main/src/fileio.cpp	/^void FileList::AddFile(const char *name)$/;"	f	class:FileList
AddMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ AddMod(const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
AddMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ AddMod(const ZZ& a, long b, const ZZ& n)$/;"	f
AddMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ AddMod(long a, const ZZ& b, const ZZ& n)$/;"	f
AddMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline void AddMod(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
AddMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline void AddMod(ZZ& x, long a, const ZZ& b, const ZZ& n)$/;"	f
AddMod	deplib/ntl-main/include/NTL/sp_arith.h	/^long AddMod(long a, long b, long n)$/;"	f
AddMod	deplib/ntl-main/src/ZZ.cpp	/^void AddMod(ZZ& x, const ZZ& a, long b, const ZZ& n)$/;"	f
AddMul1	deplib/ntl-main/src/GF2X.cpp	/^void AddMul1(_ntl_ulong *cp, const _ntl_ulong* bp, long sb, _ntl_ulong a)$/;"	f	file:
AddPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR AddPrec(const RR& a, const RR& b, long p)$/;"	f
AddPrec	deplib/ntl-main/src/RR.cpp	/^void AddPrec(RR& x, const RR& a, const RR& b, long p)$/;"	f
AddRef	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void AddRef() const$/;"	f	class:CloneablePtr
AddRef	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void AddRef() const$/;"	f	class:SmartPtr
AddRoundKey	aes_private.h	/^inline void AddRoundKey(uint8_t state[16], const uint32_t roundKey[4]) {$/;"	f	namespace:__anon2
AddRoundKeyAfterShift	aes_private.h	/^inline void AddRoundKeyAfterShift(uint8_t state[16], const uint32_t roundKey[4]) {$/;"	f	namespace:__anon2
AddToCol	deplib/ntl-main/src/mat_GF2.cpp	/^void AddToCol(mat_GF2& x, long j, const vec_GF2& a)$/;"	f
AdditionalLifting	deplib/ntl-main/src/ZZXFactoring.cpp	/^void AdditionalLifting(ZZ& P1, $/;"	f
AdjustAlloc	deplib/ntl-main/include/NTL/vector.h	/^   void AdjustAlloc(long n) { if (_vec__rep) NTL_VEC_HEAD(_vec__rep)->alloc = n; }$/;"	f	class:Vec
AdjustLength	deplib/ntl-main/include/NTL/vector.h	/^   void AdjustLength(long n) { if (_vec__rep) NTL_VEC_HEAD(_vec__rep)->length = n; }$/;"	f	class:Vec
AdjustMaxLength	deplib/ntl-main/include/NTL/vector.h	/^   void AdjustMaxLength(long n) { if (_vec__rep) NTL_VEC_HEAD(_vec__rep)->init = n; }$/;"	f	class:Vec
AlignedArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   AlignedArray() : dp(0), sp(0) { }$/;"	f	class:AlignedArray
AlignedArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   AlignedArray(AlignedArray&& other) noexcept : AlignedArray() $/;"	f	class:AlignedArray
AlignedArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   explicit AlignedArray(fake_null_type1) : dp(0), sp(0) { }$/;"	f	class:AlignedArray
AlignedArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^class AlignedArray {$/;"	c
AllocateTo	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::AllocateTo(long n)   $/;"	f	class:Vec
ApplySwaps	deplib/ntl-main/src/mat_lzz_p.cpp	/^void ApplySwaps(double *panelp, long start, long end, const Vec<long>& P)$/;"	f	file:
ApplySwaps	deplib/ntl-main/src/mat_lzz_p.cpp	/^void ApplySwaps(long *panelp, long start, long end, const Vec<long>& P)$/;"	f	file:
ApplySwaps	deplib/ntl-main/src/mat_lzz_p.cpp	/^void ApplySwaps(unsigned long *panelp, long start, long end, const Vec<long>& P)$/;"	f	file:
ArithmeticError	deplib/ntl-main/include/NTL/tools.h	/^inline void ArithmeticError(const char *msg) { TerminalError(msg); }$/;"	f
ArithmeticError	deplib/ntl-main/include/NTL/tools.h	/^inline void ArithmeticError(const char *msg) { throw ArithmeticErrorObject(msg); }$/;"	f
ArithmeticErrorObject	deplib/ntl-main/include/NTL/tools.h	/^   ArithmeticErrorObject(const char *msg) : ErrorObject(msg) { }$/;"	f	class:ArithmeticErrorObject
ArithmeticErrorObject	deplib/ntl-main/include/NTL/tools.h	/^class ArithmeticErrorObject : public ErrorObject {$/;"	c
AtomicBool	deplib/ntl-main/include/NTL/thread.h	/^   explicit AtomicBool(const bool& _data) : data(_data) { }$/;"	f	class:AtomicBool
AtomicBool	deplib/ntl-main/include/NTL/thread.h	/^class AtomicBool {$/;"	c
AtomicCounter	deplib/ntl-main/include/NTL/thread.h	/^   AtomicCounter() : cnt(0) { }$/;"	f	class:AtomicCounter
AtomicCounter	deplib/ntl-main/include/NTL/thread.h	/^   explicit AtomicCounter(unsigned long _cnt) : cnt(_cnt) { }$/;"	f	class:AtomicCounter
AtomicCounter	deplib/ntl-main/include/NTL/thread.h	/^class AtomicCounter {$/;"	c
AtomicLong	deplib/ntl-main/include/NTL/thread.h	/^   explicit AtomicLong(const long& _data) : data(_data) { }$/;"	f	class:AtomicLong
AtomicLong	deplib/ntl-main/include/NTL/thread.h	/^class AtomicLong {$/;"	c
AtomicLowWaterMark	deplib/ntl-main/include/NTL/thread.h	/^   explicit AtomicLowWaterMark(const unsigned long& _data) : data(_data) { }$/;"	f	class:AtomicLowWaterMark
AtomicLowWaterMark	deplib/ntl-main/include/NTL/thread.h	/^class AtomicLowWaterMark {$/;"	c
AtomicRefCount	deplib/ntl-main/include/NTL/thread.h	/^   AtomicRefCount() : cnt(0) { }$/;"	f	class:AtomicRefCount
AtomicRefCount	deplib/ntl-main/include/NTL/thread.h	/^class AtomicRefCount {$/;"	c
AutomaticThread	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^      AutomaticThread() : t(worker, &localSignal) $/;"	f	struct:BasicThreadPool::AutomaticThread
AutomaticThread	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   struct AutomaticThread {$/;"	s	class:BasicThreadPool
AvailableThreads	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^inline long AvailableThreads()$/;"	f
B	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct B { ~B() {} };$/;"	s	file:
B	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct B { ~B() {} };$/;"	s	file:
B1	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   FFTRep B1; $/;"	m	class:ZZ_pXMultiplier
B1	deplib/ntl-main/include/NTL/lzz_pX.h	/^   fftRep B1; $/;"	m	class:zz_pXMultiplier
B2	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   FFTRep B2; $/;"	m	class:ZZ_pXMultiplier
B2	deplib/ntl-main/include/NTL/lzz_pX.h	/^   fftRep B2; $/;"	m	class:zz_pXMultiplier
BB	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct BB { B b; };$/;"	s	file:
BB	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct BB { B b; };$/;"	s	file:
BKZConstant	deplib/ntl-main/src/LLL_FP.cpp	/^static vec_double BKZConstant;$/;"	v	file:
BKZStatus	deplib/ntl-main/src/LLL_FP.cpp	/^void BKZStatus(double tt, double enum_time, unsigned long NumIterations, $/;"	f	file:
BKZStatus	deplib/ntl-main/src/LLL_QP.cpp	/^void BKZStatus(double tt, double enum_time, unsigned long NumIterations, $/;"	f	file:
BKZStatus	deplib/ntl-main/src/LLL_RR.cpp	/^void BKZStatus(double tt, double enum_time, unsigned long NumIterations, $/;"	f	file:
BKZStatus	deplib/ntl-main/src/LLL_XD.cpp	/^void BKZStatus(double tt, double enum_time, unsigned long NumIterations, $/;"	f	file:
BKZThresh	deplib/ntl-main/src/LLL_FP.cpp	/^static vec_double BKZThresh;$/;"	v	file:
BKZ_FP	deplib/ntl-main/src/LLL_FP.cpp	/^long BKZ_FP(mat_ZZ& BB, double delta, $/;"	f
BKZ_FP	deplib/ntl-main/src/LLL_FP.cpp	/^long BKZ_FP(mat_ZZ& BB, mat_ZZ& UU, double delta, $/;"	f
BKZ_FP	deplib/ntl-main/src/LLL_FP.cpp	/^long BKZ_FP(mat_ZZ& BB, mat_ZZ* UU, double delta, $/;"	f	file:
BKZ_QP	deplib/ntl-main/src/LLL_QP.cpp	/^long BKZ_QP(mat_ZZ& BB, double delta, $/;"	f
BKZ_QP	deplib/ntl-main/src/LLL_QP.cpp	/^long BKZ_QP(mat_ZZ& BB, mat_ZZ& UU, double delta, $/;"	f
BKZ_QP	deplib/ntl-main/src/LLL_QP.cpp	/^long BKZ_QP(mat_ZZ& BB, mat_ZZ* UU, quad_float delta, $/;"	f	file:
BKZ_QP1	deplib/ntl-main/src/LLL_QP.cpp	/^long BKZ_QP1(mat_ZZ& BB, double delta, $/;"	f
BKZ_QP1	deplib/ntl-main/src/LLL_QP.cpp	/^long BKZ_QP1(mat_ZZ& BB, mat_ZZ& UU, double delta, $/;"	f
BKZ_QP1	deplib/ntl-main/src/LLL_QP.cpp	/^long BKZ_QP1(mat_ZZ& BB, mat_ZZ* UU, quad_float delta, $/;"	f	file:
BKZ_RR	deplib/ntl-main/src/LLL_RR.cpp	/^long BKZ_RR(mat_ZZ& BB, double delta, $/;"	f
BKZ_RR	deplib/ntl-main/src/LLL_RR.cpp	/^long BKZ_RR(mat_ZZ& BB, mat_ZZ& UU, double delta, $/;"	f
BKZ_RR	deplib/ntl-main/src/LLL_RR.cpp	/^long BKZ_RR(mat_ZZ& BB, mat_ZZ* UU, const RR& delta, $/;"	f	file:
BKZ_XD	deplib/ntl-main/src/LLL_XD.cpp	/^long BKZ_XD(mat_ZZ& BB, double delta, $/;"	f
BKZ_XD	deplib/ntl-main/src/LLL_XD.cpp	/^long BKZ_XD(mat_ZZ& BB, mat_ZZ& UU, double delta, $/;"	f
BKZ_XD	deplib/ntl-main/src/LLL_XD.cpp	/^long BKZ_XD(mat_ZZ& BB, mat_ZZ* UU, xdouble delta, $/;"	f	file:
BLOCK1	deplib/ntl-main/src/ZZ.cpp	2032;"	d	file:
BLOCK2	deplib/ntl-main/src/ZZ.cpp	2042;"	d	file:
BUFSIZE	deplib/ntl-main/src/ZZ.cpp	1977;"	d	file:
BabyRefine	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void BabyRefine(vec_pair_GF2EX_long& factors, const vec_pair_GF2EX_long& u,$/;"	f	file:
BabyRefine	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void BabyRefine(vec_pair_ZZ_pEX_long& factors, const vec_pair_ZZ_pEX_long& u,$/;"	f	file:
BabyRefine	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void BabyRefine(vec_pair_ZZ_pX_long& factors, const vec_pair_ZZ_pX_long& u,$/;"	f	file:
BabyRefine	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void BabyRefine(vec_pair_zz_pEX_long& factors, const vec_pair_zz_pEX_long& u,$/;"	f	file:
BabyRefine	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void BabyRefine(vec_pair_zz_pX_long& factors, const vec_pair_zz_pX_long& u,$/;"	f	file:
BabyStepFile	deplib/ntl-main/src/GF2EXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL vec_GF2EX *BabyStepFile = 0;$/;"	v	file:
BabyStepFile	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL vec_ZZ_pEX *BabyStepFile=0;$/;"	v	file:
BabyStepFile	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL vec_ZZ_pX *BabyStepFile = 0;$/;"	v	file:
BabyStepFile	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL vec_zz_pEX *BabyStepFile=0;$/;"	v	file:
BabyStepFile	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL vec_zz_pX *BabyStepFile = 0;$/;"	v	file:
BalCopy	deplib/ntl-main/src/ZZX1.cpp	/^void BalCopy(ZZX& g, const zz_pX& G)$/;"	f	file:
BalCopy	deplib/ntl-main/src/ZZXFactoring.cpp	/^void BalCopy(ZZX& g, const ZZ_pX& G)$/;"	f	file:
BalDiv	deplib/ntl-main/src/LLL.cpp	/^static void BalDiv(ZZ& q, const ZZ& a, const ZZ& d)$/;"	f	file:
BaseCase	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long BaseCase(const GF2EX& h, long q, long a, const GF2EXModulus& F)$/;"	f	file:
BaseCase	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^long BaseCase(const ZZ_pEX& h, long q, long a, const ZZ_pEXModulus& F)$/;"	f
BaseCase	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^long BaseCase(const ZZ_pX& h, long q, long a, const ZZ_pXModulus& F)$/;"	f	file:
BaseCase	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^long BaseCase(const zz_pEX& h, long q, long a, const zz_pEXModulus& F)$/;"	f
BaseCase	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^long BaseCase(const zz_pX& h, long q, long a, const zz_pXModulus& F)$/;"	f	file:
BaseGCD	deplib/ntl-main/src/GF2X1.cpp	/^void BaseGCD(GF2X& d, const GF2X& a_in, const GF2X& b_in)$/;"	f	file:
BaseInvMod	deplib/ntl-main/src/GF2X1.cpp	/^void BaseInvMod(GF2X& d, GF2X& s, const GF2X& a, const GF2X& f)$/;"	f	file:
BaseSize	deplib/ntl-main/include/NTL/GF2XVec.h	/^   long BaseSize() const { return bsize; }$/;"	f	class:GF2XVec
BaseSize	deplib/ntl-main/include/NTL/ZZVec.h	/^   long BaseSize() const { return bsize; }$/;"	f	class:ZZVec
BaseXGCD	deplib/ntl-main/src/GF2X1.cpp	/^void BaseXGCD(GF2X& d, GF2X& s, GF2X& t, const GF2X& a, const GF2X& b)$/;"	f	file:
BasicBlockConstruct	deplib/ntl-main/src/vec_GF2E.cpp	/^void BasicBlockConstruct(GF2E* x, long n, long d)$/;"	f	file:
BasicBlockConstruct	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void BasicBlockConstruct(ZZ_p* x, long n, long d)$/;"	f	file:
BasicThreadPool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  BasicThreadPool(long _nthreads) : $/;"	f	class:BasicThreadPool
BasicThreadPool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^class BasicThreadPool {$/;"	c
BelowThresh	deplib/ntl-main/src/ZZ_pX.cpp	/^static inline bool BelowThresh(long n)$/;"	f	file:
BelowThresh	deplib/ntl-main/src/vec_ZZ_p.cpp	/^static inline bool BelowThresh(long n)$/;"	f	file:
BelowThresh1	deplib/ntl-main/src/ZZ_pX.cpp	/^static inline bool BelowThresh1(long n)$/;"	f	file:
BerlekampMassey	deplib/ntl-main/src/GF2EX.cpp	/^void BerlekampMassey(GF2EX& h, const vec_GF2E& a, long m)$/;"	f
BerlekampMassey	deplib/ntl-main/src/ZZ_pEX.cpp	/^void BerlekampMassey(ZZ_pEX& h, const vec_ZZ_pE& a, long m)$/;"	f
BerlekampMassey	deplib/ntl-main/src/ZZ_pX1.cpp	/^void BerlekampMassey(ZZ_pX& h, const vec_ZZ_p& a, long m)$/;"	f
BerlekampMassey	deplib/ntl-main/src/lzz_pEX.cpp	/^void BerlekampMassey(zz_pEX& h, const vec_zz_pE& a, long m)$/;"	f
BerlekampMassey	deplib/ntl-main/src/lzz_pX1.cpp	/^void BerlekampMassey(zz_pX& h, const vec_zz_p& a, long m)$/;"	f
BlockConstruct	deplib/ntl-main/include/NTL/vector.h	/^static void BlockConstruct(T* p, long n) $/;"	f	class:Vec
BlockConstruct	deplib/ntl-main/include/NTL/vector.h	/^void BlockConstruct(T* p, long n) { default_BlockConstruct(p, n); } $/;"	f
BlockConstruct	deplib/ntl-main/src/vec_GF2E.cpp	/^void BlockConstruct(GF2E* x, long n)$/;"	f
BlockConstruct	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void BlockConstruct(ZZ_p* x, long n)$/;"	f
BlockConstructFromObj	deplib/ntl-main/include/NTL/vector.h	/^static void BlockConstructFromObj(T* p, long n, const T& q) $/;"	f	class:Vec
BlockConstructFromObj	deplib/ntl-main/include/NTL/vector.h	/^void BlockConstructFromObj(T* p, long n, const T& q)  { default_BlockConstructFromObj(p, n, q); }$/;"	f
BlockConstructFromObj	deplib/ntl-main/src/vec_GF2E.cpp	/^void BlockConstructFromObj(GF2E* x, long n, const GF2E& y)$/;"	f
BlockConstructFromObj	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void BlockConstructFromObj(ZZ_p* x, long n, const ZZ_p& y)$/;"	f
BlockConstructFromVec	deplib/ntl-main/include/NTL/vector.h	/^static void BlockConstructFromVec(T* p, long n, const T* q) $/;"	f	class:Vec
BlockConstructFromVec	deplib/ntl-main/include/NTL/vector.h	/^void BlockConstructFromVec(T* p, long n, const T* q) { default_BlockConstructFromVec(p, n, q); }$/;"	f
BlockConstructFromVec	deplib/ntl-main/src/vec_GF2E.cpp	/^void BlockConstructFromVec(GF2E* x, long n, const GF2E* y)$/;"	f
BlockConstructFromVec	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void BlockConstructFromVec(ZZ_p* x, long n, const ZZ_p* y)$/;"	f
BlockDestroy	deplib/ntl-main/include/NTL/vector.h	/^static void BlockDestroy(T* p, long n) $/;"	f	class:Vec
BlockDestroy	deplib/ntl-main/include/NTL/vector.h	/^void BlockDestroy(T* p, long n) { default_BlockDestroy(p, n); }  $/;"	f
BlockDestroy	deplib/ntl-main/src/vec_GF2E.cpp	/^void BlockDestroy(GF2E* x, long n)$/;"	f
BlockDestroy	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void BlockDestroy(ZZ_p* x, long n)$/;"	f
Bnd	deplib/ntl-main/src/lip.cpp	/^   long Bnd;$/;"	m	struct:_ntl_general_rem_one_struct	file:
BuildFromRoots	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX BuildFromRoots(const vec_GF2E& a)$/;"	f
BuildFromRoots	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX BuildFromRoots(const vec_ZZ_pE& a)$/;"	f
BuildFromRoots	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX BuildFromRoots(const vec_ZZ_p& a)$/;"	f
BuildFromRoots	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX BuildFromRoots(const vec_zz_pE& a)$/;"	f
BuildFromRoots	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX BuildFromRoots(const vec_zz_p& a)$/;"	f
BuildFromRoots	deplib/ntl-main/src/GF2EX.cpp	/^void BuildFromRoots(GF2EX& x, const vec_GF2E& a)$/;"	f
BuildFromRoots	deplib/ntl-main/src/ZZ_pEX.cpp	/^void BuildFromRoots(ZZ_pEX& x, const vec_ZZ_pE& a)$/;"	f
BuildFromRoots	deplib/ntl-main/src/ZZ_pX1.cpp	/^void BuildFromRoots(ZZ_pX& x, const vec_ZZ_p& a)$/;"	f
BuildFromRoots	deplib/ntl-main/src/lzz_pEX.cpp	/^void BuildFromRoots(zz_pEX& x, const vec_zz_pE& a)$/;"	f
BuildFromRoots	deplib/ntl-main/src/lzz_pX1.cpp	/^void BuildFromRoots(zz_pX& x, const vec_zz_p& a)$/;"	f
BuildIrred	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void BuildIrred(GF2EX& f, long n)$/;"	f
BuildIrred	deplib/ntl-main/src/GF2XFactoring.cpp	/^void BuildIrred(GF2X& f, long n)$/;"	f
BuildIrred	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void BuildIrred(ZZ_pEX& f, long n)$/;"	f
BuildIrred	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void BuildIrred(ZZ_pX& f, long n)$/;"	f
BuildIrred	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void BuildIrred(zz_pEX& f, long n)$/;"	f
BuildIrred	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void BuildIrred(zz_pX& f, long n)$/;"	f
BuildIrred_GF2EX	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline GF2EX BuildIrred_GF2EX(long n)$/;"	f
BuildIrred_GF2X	deplib/ntl-main/include/NTL/GF2XFactoring.h	/^inline GF2X BuildIrred_GF2X(long n)$/;"	f
BuildIrred_ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pEX BuildIrred_ZZ_pEX(long n)$/;"	f
BuildIrred_ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_pX BuildIrred_ZZ_pX(long n)$/;"	f
BuildIrred_zz_pEX	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline zz_pEX BuildIrred_zz_pEX(long n)$/;"	f
BuildIrred_zz_pX	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline zz_pX BuildIrred_zz_pX(long n)$/;"	f
BuildMatrix	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void BuildMatrix(vec_GF2XVec& M, long n, const GF2EX& g, const GF2EXModulus& F,$/;"	f	file:
BuildMatrix	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void BuildMatrix(vec_ZZVec& M, long n, const ZZ_pX& g, const ZZ_pXModulus& F,$/;"	f	file:
BuildMatrix	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void BuildMatrix(mat_zz_p& M, $/;"	f	file:
BuildPrimePowerIrred	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void BuildPrimePowerIrred(GF2EX& f, long q, long e)$/;"	f	file:
BuildPrimePowerIrred	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void BuildPrimePowerIrred(ZZ_pEX& f, long q, long e)$/;"	f	file:
BuildPrimePowerIrred	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void BuildPrimePowerIrred(ZZ_pX& f, long q, long e)$/;"	f	file:
BuildPrimePowerIrred	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void BuildPrimePowerIrred(zz_pEX& f, long q, long e)$/;"	f	file:
BuildPrimePowerIrred	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void BuildPrimePowerIrred(zz_pX& f, long q, long e)$/;"	f	file:
BuildRandomIrred	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline GF2EX BuildRandomIrred(const GF2EX& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/include/NTL/GF2XFactoring.h	/^inline GF2X BuildRandomIrred(const GF2X& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pEX BuildRandomIrred(const ZZ_pEX& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_pX BuildRandomIrred(const ZZ_pX& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline zz_pEX BuildRandomIrred(const zz_pEX& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline zz_pX BuildRandomIrred(const zz_pX& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void BuildRandomIrred(GF2EX& f, const GF2EX& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/src/GF2XFactoring.cpp	/^void BuildRandomIrred(GF2X& f, const GF2X& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void BuildRandomIrred(ZZ_pEX& f, const ZZ_pEX& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void BuildRandomIrred(ZZ_pX& f, const ZZ_pX& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void BuildRandomIrred(zz_pEX& f, const zz_pEX& g)$/;"	f
BuildRandomIrred	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void BuildRandomIrred(zz_pX& f, const zz_pX& g)$/;"	f
BuildReductionMatrix	deplib/ntl-main/src/ZZXFactoring.cpp	/^void BuildReductionMatrix(mat_ZZ& M, long& C, long r, long d, const ZZ& pdelta,$/;"	f	file:
BuildSparseIrred	deplib/ntl-main/src/GF2XFactoring.cpp	/^void BuildSparseIrred(GF2X& f, long n)$/;"	f
BuildSparseIrred_GF2X	deplib/ntl-main/include/NTL/GF2XFactoring.h	/^inline GF2X BuildSparseIrred_GF2X(long n)$/;"	f
BuildTree	deplib/ntl-main/src/ZZXFactoring.cpp	/^void BuildTree(vec_long& link, vec_ZZX& v, vec_ZZX& w,$/;"	f	file:
Build_zz_pInfo	deplib/ntl-main/src/FFT.cpp	/^SmartPtr<zz_pInfoT> Build_zz_pInfo(FFTPrimeInfo *info) { return 0; }$/;"	f
Build_zz_pInfo	deplib/ntl-main/src/lzz_p.cpp	/^SmartPtr<zz_pInfoT> Build_zz_pInfo(FFTPrimeInfo *info)$/;"	f
Builder	deplib/ntl-main/include/NTL/Lazy.h	/^      Builder(const Lazy& _ref) : building(false), moved(false),$/;"	f	class:Lazy::Builder
Builder	deplib/ntl-main/include/NTL/Lazy.h	/^   class Builder {$/;"	c	class:Lazy
Builder	deplib/ntl-main/include/NTL/LazyTable.h	/^      Builder(const LazyTable& _ref, long _request) $/;"	f	class:LazyTable::Builder
Builder	deplib/ntl-main/include/NTL/LazyTable.h	/^   class Builder {$/;"	c	class:LazyTable
BytesFromGF2X	deplib/ntl-main/src/GF2X.cpp	/^void BytesFromGF2X(unsigned char *p, const GF2X& a, long n)$/;"	f
BytesFromZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline void BytesFromZZ(unsigned char *p, const ZZ& a, long n)$/;"	f
C	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct C { virtual void foo() { } };$/;"	s	file:
C	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct C { virtual void foo() { } };$/;"	s	file:
CC	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct CC { C c; };$/;"	s	file:
CC	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct CC { C c; };$/;"	s	file:
CFLAGS	Makefile	/^CFLAGS = -Og -ggdb -Wall$/;"	m
CH	deplib/ntl-main/src/ZZ.cpp	1597;"	d	file:
CH	deplib/ntl-main/src/makefile	/^CH=CheckCompile.cpp GenConfigInfo.cpp CheckContract.cpp CheckContractAux.cpp \\$/;"	m
CHACHA_RNDS	deplib/ntl-main/src/ZZ.cpp	2963;"	d	file:
CHECK	deplib/ntl-main/src/ZZTest.cpp	6;"	d	file:
CLIP	deplib/ntl-main/src/lip.cpp	/^inline _ntl_limb_t CLIP(_ntl_limb_t a)$/;"	f	file:
COMPILE	deplib/ntl-main/src/makefile	/^COMPILE = $(CXX) $(NTL_INCLUDE) $(CPPFLAGS) $(CXXFLAGS) $(CXXAUTOFLAGS)  -c$/;"	m
COUNT_BITS	deplib/ntl-main/src/lip.cpp	/^inline long COUNT_BITS(_ntl_limb_t x)$/;"	f	file:
CPACF_KMA_GCM_AES_256	deplib/ntl-main/include/NTL/linux_s390x.h	21;"	d
CPACF_KMA_HS	deplib/ntl-main/include/NTL/linux_s390x.h	25;"	d
CPACF_KMA_LAAD	deplib/ntl-main/include/NTL/linux_s390x.h	24;"	d
CPACF_KMA_QUERY	deplib/ntl-main/include/NTL/linux_s390x.h	20;"	d
CPPFLAGS	deplib/ntl-main/src/makefile	/^CPPFLAGS=$/;"	m
CROSS	deplib/ntl-main/src/makefile	/^CROSS=GF2EXDivCross.cpp GF2EXGCDCross.cpp GF2EXKarCross.cpp GF2EXModCross.cpp$/;"	m
CRT	deplib/ntl-main/src/ZZ.cpp	/^long CRT(ZZ& gg, ZZ& a, const ZZ& G, const ZZ& p)$/;"	f
CRT	deplib/ntl-main/src/ZZ.cpp	/^long CRT(ZZ& gg, ZZ& a, long G, long p)$/;"	f
CRT	deplib/ntl-main/src/ZZX1.cpp	/^long CRT(ZZX& gg, ZZ& a, const ZZ_pX& G)$/;"	f
CRT	deplib/ntl-main/src/ZZX1.cpp	/^long CRT(ZZX& gg, ZZ& a, const zz_pX& G)$/;"	f
CRT	deplib/ntl-main/src/mat_ZZ.cpp	/^long CRT(mat_ZZ& gg, ZZ& a, const mat_zz_p& G)$/;"	f
CRT	deplib/ntl-main/src/vec_lzz_p.cpp	/^long CRT(vec_ZZ& gg, ZZ& a, const vec_zz_p& G)$/;"	f
CRTInRange	deplib/ntl-main/include/NTL/ZZ.h	/^inline long CRTInRange(const ZZ& gg, const ZZ& aa)$/;"	f
CRT_ALTCODE_UNROLL	deplib/ntl-main/src/lip.cpp	6809;"	d	file:
CRT_BLK	deplib/ntl-main/src/ZZX1.cpp	265;"	d	file:
CRT_BLK	deplib/ntl-main/src/mat_ZZ_p.cpp	220;"	d	file:
CSRPush	deplib/ntl-main/include/NTL/pd_FFT.h	/^struct CSRPush {$/;"	s
CSRPush	deplib/ntl-main/src/pd_FFT.cpp	/^CSRPush::CSRPush()$/;"	f	class:CSRPush
CXX	deplib/ntl-main/src/makefile	/^CXX=g++$/;"	m
CXXAUTOFLAGS	deplib/ntl-main/src/makefile	/^CXXAUTOFLAGS= -std=c++11 -pthread -march=native$/;"	m
CXXFLAGS	Makefile	/^CXXFLAGS = $(CFLAGS) -std=c++11$/;"	m
CXXFLAGS	deplib/ntl-main/src/makefile	/^CXXFLAGS=-g -O2$/;"	m
CalcMaxRoot	deplib/ntl-main/src/FFT.cpp	/^long CalcMaxRoot(long p)$/;"	f
CalcPossibleDegrees	deplib/ntl-main/src/ZZXFactoring.cpp	/^void CalcPossibleDegrees(ZZ& pd, const vec_long& pat)$/;"	f	file:
CalcPossibleDegrees	deplib/ntl-main/src/ZZXFactoring.cpp	/^void CalcPossibleDegrees(vec_ZZ& S, const vec_ZZ_pX& fac, long k)$/;"	f	file:
CalcTableSize	deplib/ntl-main/src/GF2EXFactoring.cpp	/^double CalcTableSize(long n, long k)$/;"	f	file:
CalcTableSize	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^double CalcTableSize(long n, long k)$/;"	f	file:
CalcTableSize	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^double CalcTableSize(long n, long k)$/;"	f	file:
CalcTableSize	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^double CalcTableSize(long n, long k)$/;"	f	file:
CalculateTboxes	aes_whitebox_compiler.cc	/^void CalculateTboxes(const uint32_t roundKey[],$/;"	f	namespace:__anon4
CalculateTy	aes_whitebox_compiler.cc	/^void CalculateTy(uint8_t Ty[4][256][4]) {$/;"	f	namespace:__anon4
CalculateTyBoxes	aes_whitebox_compiler.cc	/^void CalculateTyBoxes(uint32_t roundKey[],$/;"	f	namespace:__anon4
CanZass	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline vec_pair_GF2EX_long CanZass(const GF2EX& f, long verbose=0)$/;"	f
CanZass	deplib/ntl-main/include/NTL/GF2XFactoring.h	/^inline vec_pair_GF2X_long CanZass(const GF2X& f, long verbose=0)$/;"	f
CanZass	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline vec_pair_ZZ_pEX_long CanZass(const ZZ_pEX& f, long verbose=0)$/;"	f
CanZass	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline vec_pair_ZZ_pX_long CanZass(const ZZ_pX& f, long verbose=0)$/;"	f
CanZass	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline vec_pair_zz_pEX_long CanZass(const zz_pEX& f, long verbose=0)$/;"	f
CanZass	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline vec_pair_zz_pX_long CanZass(const zz_pX& f, long verbose=0)$/;"	f
CanZass	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void CanZass(vec_pair_GF2EX_long& factors, const GF2EX& f, long verbose)$/;"	f
CanZass	deplib/ntl-main/src/GF2XFactoring.cpp	/^void CanZass(vec_pair_GF2X_long& factors, const GF2X& f, long verbose)$/;"	f
CanZass	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void CanZass(vec_pair_ZZ_pEX_long& factors, const ZZ_pEX& f, long verbose)$/;"	f
CanZass	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void CanZass(vec_pair_ZZ_pX_long& factors, const ZZ_pX& f, long verbose)$/;"	f
CanZass	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void CanZass(vec_pair_zz_pEX_long& factors, const zz_pEX& f, long verbose)$/;"	f
CanZass	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void CanZass(vec_pair_zz_pX_long& factors, const zz_pX& f, long verbose)$/;"	f
CardinalitySearch	deplib/ntl-main/src/ZZXFactoring.cpp	/^void CardinalitySearch(vec_ZZX& factors, ZZX& f, $/;"	f	file:
CardinalitySearch1	deplib/ntl-main/src/ZZXFactoring.cpp	/^void CardinalitySearch1(vec_ZZX& factors, ZZX& f, $/;"	f	file:
CeilPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR CeilPrec(const RR& a, long p)$/;"	f
CeilPrec	deplib/ntl-main/src/RR.cpp	/^void CeilPrec(RR& x, const RR& a, long p)$/;"	f
CeilToZZ	deplib/ntl-main/include/NTL/RR.h	/^inline ZZ CeilToZZ(const RR& a)$/;"	f
CeilToZZ	deplib/ntl-main/src/RR.cpp	/^void CeilToZZ(ZZ& z, const RR& a)$/;"	f
CharPoly	deplib/ntl-main/src/mat_poly_ZZ.cpp	/^void CharPoly(ZZX& gg, const mat_ZZ& a, long deterministic)$/;"	f
CharPoly	deplib/ntl-main/src/mat_poly_ZZ_p.cpp	/^void CharPoly(ZZ_pX& f, const mat_ZZ_p& M)$/;"	f
CharPoly	deplib/ntl-main/src/mat_poly_lzz_p.cpp	/^void CharPoly(zz_pX& f, const mat_zz_p& M)$/;"	f
CharPolyBound	deplib/ntl-main/src/ZZX1.cpp	/^long CharPolyBound(const ZZX& a, const ZZX& f)$/;"	f
CharPolyBound	deplib/ntl-main/src/mat_poly_ZZ.cpp	/^long CharPolyBound(const mat_ZZ& a)$/;"	f	file:
CharPolyMod	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX CharPolyMod(const ZZX& a, const ZZX& f, long deterministic=0)$/;"	f
CharPolyMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX CharPolyMod(const ZZ_pX& a, const ZZ_pX& f)$/;"	f
CharPolyMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX CharPolyMod(const zz_pX& a, const zz_pX& f)$/;"	f
CharPolyMod	deplib/ntl-main/src/ZZXCharPoly.cpp	/^void CharPolyMod(ZZX& gg, const ZZX& a, const ZZX& f, long deterministic)$/;"	f
CharPolyMod	deplib/ntl-main/src/ZZ_pXCharPoly.cpp	/^void CharPolyMod(ZZ_pX& g, const ZZ_pX& a, const ZZ_pX& ff)$/;"	f
CharPolyMod	deplib/ntl-main/src/lzz_pXCharPoly.cpp	/^void CharPolyMod(zz_pX& g, const zz_pX& a, const zz_pX& ff)$/;"	f
CharToIntVal	deplib/ntl-main/src/tools.cpp	/^long CharToIntVal(long a)$/;"	f
CheckFinite	deplib/ntl-main/src/G_LLL_FP.cpp	/^void CheckFinite(double *p)$/;"	f	file:
CheckFinite	deplib/ntl-main/src/G_LLL_QP.cpp	/^void CheckFinite(double *p)$/;"	f	file:
CheckFinite	deplib/ntl-main/src/G_LLL_QP.cpp	/^void CheckFinite(quad_float *p)$/;"	f	file:
CheckFinite	deplib/ntl-main/src/LLL_FP.cpp	/^void CheckFinite(double *p)$/;"	f	file:
CheckFinite	deplib/ntl-main/src/LLL_QP.cpp	/^void CheckFinite(double *p)$/;"	f	file:
CheckFinite	deplib/ntl-main/src/LLL_QP.cpp	/^void CheckFinite(quad_float *p)$/;"	f	file:
ChoosePolicy	deplib/ntl-main/include/NTL/SmartPtr.h	/^struct ChoosePolicy { };$/;"	s
ChooseSS	deplib/ntl-main/src/ZZX1.cpp	/^static bool ChooseSS(long da, long maxbitsa, long db, long maxbitsb)$/;"	f	file:
ChopTraces	deplib/ntl-main/src/ZZXFactoring.cpp	/^void ChopTraces(vec_ZZ& C, const vec_ZZ& Tr, long d,$/;"	f
Cipher	aes.cc	/^void Cipher(const uint8_t in[16], uint8_t out[16], const uint32_t roundKey[],$/;"	f	namespace:__anon1
Cipher	aes_whitebox.cc	/^void Cipher(uint8_t in[16]) {$/;"	f	namespace:__anon3
Clk_ID	deplib/ntl-main/src/CheckPOSIX_TIME.cpp	10;"	d	file:
Clk_ID	deplib/ntl-main/src/CheckPOSIX_TIME.cpp	12;"	d	file:
Clk_ID	deplib/ntl-main/src/CheckPOSIX_TIME.cpp	8;"	d	file:
Clk_ID	deplib/ntl-main/src/ctools.cpp	54;"	d	file:
Clk_ID	deplib/ntl-main/src/ctools.cpp	56;"	d	file:
Clk_ID	deplib/ntl-main/src/ctools.cpp	58;"	d	file:
CloneablePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr() : dp(0), cp(0)  { }$/;"	f	class:CloneablePtr
CloneablePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr(CloneablePtrLoopHole, T* _dp, CloneablePtrControl *_cp) : dp(_dp), cp(_cp)$/;"	f	class:CloneablePtr
CloneablePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr(const CloneablePtr& other) : dp(other.dp), cp(other.cp) $/;"	f	class:CloneablePtr
CloneablePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr(const CloneablePtr<Y>& other) : dp(other.dp), cp(other.cp) $/;"	f	class:CloneablePtr
CloneablePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr(fake_null_type1) : dp(0), cp(0) { }$/;"	f	class:CloneablePtr
CloneablePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^class CloneablePtr {$/;"	c
CloneablePtrControl	deplib/ntl-main/include/NTL/SmartPtr.h	/^class CloneablePtrControl : public SmartPtrControl {$/;"	c
CloneablePtrControlDerived	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtrControlDerived(const T& x) : d(x) { }$/;"	f	class:CloneablePtrControlDerived
CloneablePtrControlDerived	deplib/ntl-main/include/NTL/SmartPtr.h	/^class CloneablePtrControlDerived : public CloneablePtrControl {$/;"	c
CloneablePtrLoopHole	deplib/ntl-main/include/NTL/SmartPtr.h	/^struct CloneablePtrLoopHole { };$/;"	s
CloningCopiedPtrPolicy	deplib/ntl-main/include/NTL/SmartPtr.h	/^struct CloningCopiedPtrPolicy : DefaultDeleterPolicy, CloningCopier { };$/;"	s
CloningCopier	deplib/ntl-main/include/NTL/SmartPtr.h	/^struct CloningCopier {$/;"	s
CloseWrite	deplib/ntl-main/src/fileio.cpp	/^void CloseWrite(ofstream& s)$/;"	f
CoeffModP	deplib/ntl-main/include/NTL/lzz_p.h	/^   Vec<long> CoeffModP;    \/\/ coeff mod p$/;"	m	class:zz_pInfoT
CoeffModPpinv	deplib/ntl-main/include/NTL/lzz_p.h	/^   Vec<mulmod_precon_t> CoeffModPpinv; $/;"	m	class:zz_pInfoT
Comp2Mod	deplib/ntl-main/src/GF2EX.cpp	/^void Comp2Mod(GF2EX& x1, GF2EX& x2, const GF2EX& g1, const GF2EX& g2,$/;"	f
Comp2Mod	deplib/ntl-main/src/GF2X1.cpp	/^void Comp2Mod(GF2X& x1, GF2X& x2, const GF2X& g1, const GF2X& g2,$/;"	f
Comp2Mod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void Comp2Mod(ZZ_pEX& x1, ZZ_pEX& x2, const ZZ_pEX& g1, const ZZ_pEX& g2,$/;"	f
Comp2Mod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void Comp2Mod(ZZ_pX& x1, ZZ_pX& x2, const ZZ_pX& g1, const ZZ_pX& g2,$/;"	f
Comp2Mod	deplib/ntl-main/src/lzz_pEX.cpp	/^void Comp2Mod(zz_pEX& x1, zz_pEX& x2, const zz_pEX& g1, const zz_pEX& g2,$/;"	f
Comp2Mod	deplib/ntl-main/src/lzz_pX1.cpp	/^void Comp2Mod(zz_pX& x1, zz_pX& x2, const zz_pX& g1, const zz_pX& g2,$/;"	f
Comp3Mod	deplib/ntl-main/src/GF2EX.cpp	/^void Comp3Mod(GF2EX& x1, GF2EX& x2, GF2EX& x3, $/;"	f
Comp3Mod	deplib/ntl-main/src/GF2X1.cpp	/^void Comp3Mod(GF2X& x1, GF2X& x2, GF2X& x3, $/;"	f
Comp3Mod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void Comp3Mod(ZZ_pEX& x1, ZZ_pEX& x2, ZZ_pEX& x3, $/;"	f
Comp3Mod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void Comp3Mod(ZZ_pX& x1, ZZ_pX& x2, ZZ_pX& x3, $/;"	f
Comp3Mod	deplib/ntl-main/src/lzz_pEX.cpp	/^void Comp3Mod(zz_pEX& x1, zz_pEX& x2, zz_pEX& x3, $/;"	f
Comp3Mod	deplib/ntl-main/src/lzz_pX1.cpp	/^void Comp3Mod(zz_pX& x1, zz_pX& x2, zz_pX& x3, $/;"	f
CompMod	deplib/ntl-main/include/NTL/GF2EX.h	/^CompMod(const GF2EX& g, const GF2EX& h, const GF2EXModulus& F)$/;"	f
CompMod	deplib/ntl-main/include/NTL/GF2EX.h	/^CompMod(const GF2EX& g, const GF2EXArgument& H, const GF2EXModulus& F)$/;"	f
CompMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X CompMod(const GF2X& g, $/;"	f
CompMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X CompMod(const GF2X& g, const GF2X& h, const GF2XModulus& F)$/;"	f
CompMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^CompMod(const ZZ_pEX& g, const ZZ_pEX& h, const ZZ_pEXModulus& F)$/;"	f
CompMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^CompMod(const ZZ_pEX& g, const ZZ_pEXArgument& H, const ZZ_pEXModulus& F)$/;"	f
CompMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^CompMod(const ZZ_pX& g, const ZZ_pXArgument& H, const ZZ_pXModulus& F)$/;"	f
CompMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX CompMod(const ZZ_pX& g, const ZZ_pX& h, $/;"	f
CompMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^CompMod(const zz_pEX& g, const zz_pEX& h, const zz_pEXModulus& F)$/;"	f
CompMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^CompMod(const zz_pEX& g, const zz_pEXArgument& H, const zz_pEXModulus& F)$/;"	f
CompMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^CompMod(const zz_pX& g, const zz_pXArgument& H, const zz_pXModulus& F)$/;"	f
CompMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX CompMod(const zz_pX& g, const zz_pX& h,$/;"	f
CompMod	deplib/ntl-main/src/GF2EX.cpp	/^void CompMod(GF2EX& x, const GF2EX& g, const GF2EX& h, const GF2EXModulus& F)$/;"	f
CompMod	deplib/ntl-main/src/GF2EX.cpp	/^void CompMod(GF2EX& x, const GF2EX& g, const GF2EXArgument& A, $/;"	f
CompMod	deplib/ntl-main/src/GF2X1.cpp	/^void CompMod(GF2X& x, const GF2X& g, const GF2X& h, const GF2XModulus& F)$/;"	f
CompMod	deplib/ntl-main/src/GF2X1.cpp	/^void CompMod(GF2X& x, const GF2X& g, const GF2XArgument& A, const GF2XModulus& F)$/;"	f
CompMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void CompMod(ZZ_pEX& x, const ZZ_pEX& g, const ZZ_pEX& h, const ZZ_pEXModulus& F)$/;"	f
CompMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void CompMod(ZZ_pEX& x, const ZZ_pEX& g, const ZZ_pEXArgument& A, $/;"	f
CompMod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void CompMod(ZZ_pX& x, const ZZ_pX& g, const ZZ_pX& h, const ZZ_pXModulus& F)$/;"	f
CompMod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void CompMod(ZZ_pX& x, const ZZ_pX& g, const ZZ_pXArgument& A, $/;"	f
CompMod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void CompMod(ZZ_pX& x, const ZZ_pX& g, const ZZ_pXNewArgument& H, $/;"	f
CompMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void CompMod(zz_pEX& x, const zz_pEX& g, const zz_pEX& h, const zz_pEXModulus& F)$/;"	f
CompMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void CompMod(zz_pEX& x, const zz_pEX& g, const zz_pEXArgument& A, $/;"	f
CompMod	deplib/ntl-main/src/lzz_pX1.cpp	/^void CompMod(zz_pX& x, const zz_pX& g, const zz_pX& h, const zz_pXModulus& F)$/;"	f
CompMod	deplib/ntl-main/src/lzz_pX1.cpp	/^void CompMod(zz_pX& x, const zz_pX& g, const zz_pXArgument& A, $/;"	f
CompMod	deplib/ntl-main/src/lzz_pX1.cpp	/^void CompMod(zz_pX& x, const zz_pX& g, const zz_pXNewArgument& H, $/;"	f
CompTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX CompTower(const GF2X& g, const GF2EX& h,$/;"	f
CompTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX CompTower(const GF2X& g, const GF2EXArgument& A,$/;"	f
CompTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX CompTower(const ZZ_pX& g, const ZZ_pEX& h,$/;"	f
CompTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX CompTower(const ZZ_pX& g, const ZZ_pEXArgument& A,$/;"	f
CompTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX CompTower(const zz_pX& g, const zz_pEX& h,$/;"	f
CompTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX CompTower(const zz_pX& g, const zz_pEXArgument& A,$/;"	f
CompTower	deplib/ntl-main/src/GF2EX.cpp	/^void CompTower(GF2EX& x, const GF2X& g, const GF2EX& h, $/;"	f
CompTower	deplib/ntl-main/src/GF2EX.cpp	/^void CompTower(GF2EX& x, const GF2X& g, const GF2EXArgument& A,$/;"	f
CompTower	deplib/ntl-main/src/ZZ_pEX.cpp	/^void CompTower(ZZ_pEX& x, const ZZ_pX& g, const ZZ_pEX& h, $/;"	f
CompTower	deplib/ntl-main/src/ZZ_pEX.cpp	/^void CompTower(ZZ_pEX& x, const ZZ_pX& g, const ZZ_pEXArgument& A,$/;"	f
CompTower	deplib/ntl-main/src/lzz_pEX.cpp	/^void CompTower(zz_pEX& x, const zz_pX& g, const zz_pEX& h, $/;"	f
CompTower	deplib/ntl-main/src/lzz_pEX.cpp	/^void CompTower(zz_pEX& x, const zz_pX& g, const zz_pEXArgument& A,$/;"	f
ComposeFrobeniusMap	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void ComposeFrobeniusMap(GF2EX& y, const GF2EXModulus& F)$/;"	f
CompositeSignal	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     CompositeSignal() : val(0) { }$/;"	f	class:BasicThreadPool::CompositeSignal
CompositeSignal	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   class CompositeSignal {$/;"	c	class:BasicThreadPool
ComputeBKZConstant	deplib/ntl-main/src/LLL_FP.cpp	/^void ComputeBKZConstant(long beta, long p)$/;"	f	file:
ComputeBKZConstant	deplib/ntl-main/src/LLL_QP.cpp	/^void ComputeBKZConstant(long beta, long p)$/;"	f	file:
ComputeBKZConstant	deplib/ntl-main/src/LLL_RR.cpp	/^void ComputeBKZConstant(long beta, long p)$/;"	f	file:
ComputeBKZConstant	deplib/ntl-main/src/LLL_XD.cpp	/^void ComputeBKZConstant(long beta, long p)$/;"	f	file:
ComputeBKZThresh	deplib/ntl-main/src/LLL_FP.cpp	/^void ComputeBKZThresh(double *c, long beta)$/;"	f	file:
ComputeBKZThresh	deplib/ntl-main/src/LLL_QP.cpp	/^void ComputeBKZThresh(quad_float *c, long beta)$/;"	f	file:
ComputeBKZThresh	deplib/ntl-main/src/LLL_RR.cpp	/^void ComputeBKZThresh(RR *c, long beta)$/;"	f	file:
ComputeBKZThresh	deplib/ntl-main/src/LLL_XD.cpp	/^void ComputeBKZThresh(xdouble *c, long beta)$/;"	f	file:
ComputeDegree	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^long ComputeDegree(const ZZ_pX& h, const ZZ_pXModulus& F)$/;"	f
ComputeDegree	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^long ComputeDegree(const zz_pX& h, const zz_pXModulus& F)$/;"	f
ComputeE	deplib/ntl-main/src/RR.cpp	/^void ComputeE(RR& res)$/;"	f
ComputeGS	deplib/ntl-main/src/LLL_FP.cpp	/^void ComputeGS(const mat_ZZ& B, mat_RR& mu, vec_RR& c)$/;"	f
ComputeGS	deplib/ntl-main/src/LLL_FP.cpp	/^void ComputeGS(mat_ZZ& B, double **B1, double **mu, double *b,$/;"	f	file:
ComputeGS	deplib/ntl-main/src/LLL_QP.cpp	/^void ComputeGS(mat_ZZ& B, quad_float **B1, quad_float **mu, quad_float *b, $/;"	f	file:
ComputeGS	deplib/ntl-main/src/LLL_RR.cpp	/^void ComputeGS(const mat_ZZ& B, mat_RR& B1, $/;"	f
ComputeGS	deplib/ntl-main/src/LLL_XD.cpp	/^void ComputeGS(mat_ZZ& B, xdouble **B1, xdouble **mu, xdouble *b, $/;"	f	file:
ComputeG_BKZConstant	deplib/ntl-main/src/G_LLL_FP.cpp	/^void ComputeG_BKZConstant(long beta, long p)$/;"	f	file:
ComputeG_BKZConstant	deplib/ntl-main/src/G_LLL_QP.cpp	/^void ComputeG_BKZConstant(long beta, long p)$/;"	f	file:
ComputeG_BKZConstant	deplib/ntl-main/src/G_LLL_RR.cpp	/^void ComputeG_BKZConstant(long beta, long p)$/;"	f	file:
ComputeG_BKZConstant	deplib/ntl-main/src/G_LLL_XD.cpp	/^void ComputeG_BKZConstant(long beta, long p)$/;"	f	file:
ComputeG_BKZThresh	deplib/ntl-main/src/G_LLL_FP.cpp	/^void ComputeG_BKZThresh(double *c, long beta)$/;"	f	file:
ComputeG_BKZThresh	deplib/ntl-main/src/G_LLL_QP.cpp	/^void ComputeG_BKZThresh(quad_float *c, long beta)$/;"	f	file:
ComputeG_BKZThresh	deplib/ntl-main/src/G_LLL_RR.cpp	/^void ComputeG_BKZThresh(RR *c, long beta)$/;"	f	file:
ComputeG_BKZThresh	deplib/ntl-main/src/G_LLL_XD.cpp	/^void ComputeG_BKZThresh(xdouble *c, long beta)$/;"	f	file:
ComputeLn10	deplib/ntl-main/src/RR.cpp	/^void ComputeLn10(RR& res)$/;"	f
ComputeLn2	deplib/ntl-main/src/RR.cpp	/^void ComputeLn2(RR& res)$/;"	f
ComputeMax10Power	deplib/ntl-main/src/xdouble.cpp	/^long ComputeMax10Power()$/;"	f
ComputeMultipliers	deplib/ntl-main/src/FFT.cpp	/^void ComputeMultipliers(Vec<FFTVectorPair>& v, long k, mint_t q, mulmod_t qinv, const mint_t* root)$/;"	f
ComputePi	deplib/ntl-main/src/RR.cpp	/^void ComputePi(RR& res)$/;"	f
ComputePi_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR ComputePi_RR()$/;"	f
ComputePrimeBound	deplib/ntl-main/src/ZZ.cpp	/^long ComputePrimeBound(long bn)$/;"	f	file:
ComputeTrace	deplib/ntl-main/src/ZZXFactoring.cpp	/^void ComputeTrace(vec_ZZ& Tr, const ZZX& f, long d, const ZZ& P)$/;"	f
ComputeTraceVec	deplib/ntl-main/src/GF2EX.cpp	/^void ComputeTraceVec(vec_GF2E& S, const GF2EXModulus& F)$/;"	f	file:
ComputeTraceVec	deplib/ntl-main/src/GF2X1.cpp	/^void ComputeTraceVec(vec_GF2& S, const GF2XModulus& F)$/;"	f	file:
ComputeTraceVec	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ComputeTraceVec(vec_ZZ_pE& S, const ZZ_pEXModulus& F)$/;"	f	file:
ComputeTraceVec	deplib/ntl-main/src/ZZ_pX1.cpp	/^void ComputeTraceVec(vec_ZZ_p& S, const ZZ_pXModulus& F)$/;"	f	file:
ComputeTraceVec	deplib/ntl-main/src/lzz_pEX.cpp	/^void ComputeTraceVec(vec_zz_pE& S, const zz_pEXModulus& F)$/;"	f	file:
ComputeTraceVec	deplib/ntl-main/src/lzz_pX1.cpp	/^void ComputeTraceVec(vec_zz_p& S, const zz_pXModulus& F)$/;"	f
Compute_pb	deplib/ntl-main/src/ZZXFactoring.cpp	/^void Compute_pb(vec_long& b,vec_ZZ& pb, long p, long d, $/;"	f	file:
Compute_pb_eff	deplib/ntl-main/src/ZZXFactoring.cpp	/^void Compute_pb_eff(long& b_eff, ZZ& pb_eff, long p, long d, $/;"	f	file:
Compute_pdelta	deplib/ntl-main/src/ZZXFactoring.cpp	/^void Compute_pdelta(long& delta, ZZ& pdelta, long p, long bit_delta)$/;"	f	file:
ConcurrentTask	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     ConcurrentTask(BasicThreadPool *_pool) : pool(_pool) { }$/;"	f	class:BasicThreadPool::ConcurrentTask
ConcurrentTask	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   class ConcurrentTask {$/;"	c	class:BasicThreadPool
ConcurrentTaskFct	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     ConcurrentTaskFct(BasicThreadPool *_pool, const Fct& _fct) : $/;"	f	class:BasicThreadPool::ConcurrentTaskFct
ConcurrentTaskFct	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   class ConcurrentTaskFct : public ConcurrentTask {$/;"	c	class:BasicThreadPool
ConcurrentTaskFct1	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^      ConcurrentTaskFct1(BasicThreadPool *_pool, const Fct& _fct, $/;"	f	class:BasicThreadPool::ConcurrentTaskFct1
ConcurrentTaskFct1	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   class ConcurrentTaskFct1 : public ConcurrentTask {$/;"	c	class:BasicThreadPool
ConcurrentTaskTerminate	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     ConcurrentTaskTerminate() : ConcurrentTask(0) { }$/;"	f	class:BasicThreadPool::ConcurrentTaskTerminate
ConcurrentTaskTerminate	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   class ConcurrentTaskTerminate : public ConcurrentTask {$/;"	c	class:BasicThreadPool
ConstDivRem	deplib/ntl-main/src/ZZX1.cpp	/^void ConstDivRem(ZZX& q, ZZX& r, const ZZX& a, const ZZ& b)$/;"	f	file:
ConstReferenceWrapper	deplib/ntl-main/include/NTL/SmartPtr.h	/^   ConstReferenceWrapper(const T& _x) : x(_x) { }$/;"	f	class:ConstReferenceWrapper
ConstReferenceWrapper	deplib/ntl-main/include/NTL/SmartPtr.h	/^class ConstReferenceWrapper$/;"	c
ConstRem	deplib/ntl-main/src/ZZX1.cpp	/^void ConstRem(ZZX& r, const ZZX& a, const ZZ& b)$/;"	f	file:
ConstTerm	deplib/ntl-main/src/GF2EX.cpp	/^const GF2E& ConstTerm(const GF2EX& a)$/;"	f
ConstTerm	deplib/ntl-main/src/GF2X.cpp	/^const GF2 ConstTerm(const GF2X& a)$/;"	f
ConstTerm	deplib/ntl-main/src/ZZX.cpp	/^const ZZ& ConstTerm(const ZZX& a)$/;"	f
ConstTerm	deplib/ntl-main/src/ZZ_pEX.cpp	/^const ZZ_pE& ConstTerm(const ZZ_pEX& a)$/;"	f
ConstTerm	deplib/ntl-main/src/ZZ_pX.cpp	/^const ZZ_p& ConstTerm(const ZZ_pX& a)$/;"	f
ConstTerm	deplib/ntl-main/src/lzz_pEX.cpp	/^const zz_pE& ConstTerm(const zz_pEX& a)$/;"	f
ConstTerm	deplib/ntl-main/src/lzz_pX.cpp	/^const zz_p ConstTerm(const zz_pX& a)$/;"	f
ConstTermTest	deplib/ntl-main/src/ZZXFactoring.cpp	/^long ConstTermTest(const vec_ZZ_p& W, $/;"	f	file:
ConstTermTest	deplib/ntl-main/src/ZZXFactoring.cpp	/^long ConstTermTest(const vec_ZZ_pX& W, $/;"	f	file:
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR ConvPrec(const RR& a, long p)$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR ConvPrec(const ZZ& a, long p)$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR ConvPrec(const char *s, long p)$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR ConvPrec(const quad_float& a, long p)$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR ConvPrec(const xdouble& a, long p)$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR ConvPrec(double a, long p)$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR ConvPrec(int a, long p)$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR ConvPrec(long a, long p)$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR ConvPrec(unsigned int a, long p)$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR ConvPrec(unsigned long a, long p)$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline void ConvPrec(RR& z, int a, long p) { ConvPrec(z, long(a), p); }$/;"	f
ConvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline void ConvPrec(RR& z, unsigned int a, long p) $/;"	f
ConvPrec	deplib/ntl-main/src/RR.cpp	/^void ConvPrec(RR& x, const RR& a, long p)$/;"	f
ConvPrec	deplib/ntl-main/src/RR.cpp	/^void ConvPrec(RR& x, const ZZ& a, long p)$/;"	f
ConvPrec	deplib/ntl-main/src/RR.cpp	/^void ConvPrec(RR& x, const char *s, long p)$/;"	f
ConvPrec	deplib/ntl-main/src/RR.cpp	/^void ConvPrec(RR& x, const quad_float& a, long p)$/;"	f
ConvPrec	deplib/ntl-main/src/RR.cpp	/^void ConvPrec(RR& x, const xdouble& a, long p)$/;"	f
ConvPrec	deplib/ntl-main/src/RR.cpp	/^void ConvPrec(RR& x, double a, long p)$/;"	f
ConvPrec	deplib/ntl-main/src/RR.cpp	/^void ConvPrec(RR& x, long a, long p)$/;"	f
ConvPrec	deplib/ntl-main/src/RR.cpp	/^void ConvPrec(RR& x, unsigned long a, long p)$/;"	f
ConvertBits	deplib/ntl-main/src/GF2XFactoring.cpp	/^void ConvertBits(GF2X& x, _ntl_ulong b)$/;"	f	file:
CopiedPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CopiedPtr() : dp(0) { }$/;"	f	class:CopiedPtr
CopiedPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CopiedPtr(CopiedPtr&& other) noexcept : CopiedPtr() $/;"	f	class:CopiedPtr
CopiedPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CopiedPtr(const CopiedPtr& other) : dp(0)$/;"	f	class:CopiedPtr
CopiedPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   explicit CopiedPtr(T *p) : dp(p) { }$/;"	f	class:CopiedPtr
CopiedPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^class CopiedPtr {$/;"	c
CopyBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void CopyBlock(double *dst_ptr, long dst_blk, const double *src_ptr, long src_blk)$/;"	f	file:
CopyBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void CopyBlock(double *dst_ptr, long dst_blk, const double *src_ptr, long src_blk, long src_limit)$/;"	f	file:
CopyBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void CopyBlock(long *dst_ptr, long dst_blk, const long *src_ptr, long src_blk)$/;"	f	file:
CopyBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void CopyBlock(long *dst_ptr, long dst_blk, const long *src_ptr, long src_blk, long src_limit)$/;"	f	file:
CopyBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void CopyBlock(unsigned long *dst_ptr, long dst_blk, const unsigned long *src_ptr, long src_blk)$/;"	f	file:
CopyBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void CopyBlock(unsigned long *dst_ptr, long dst_blk, const unsigned long *src_ptr, long src_blk, long src_limit)$/;"	f	file:
CopyReverse	deplib/ntl-main/src/GF2EX.cpp	/^void CopyReverse(GF2EX& x, const GF2EX& a, long hi)$/;"	f
CopyReverse	deplib/ntl-main/src/GF2X.cpp	/^void CopyReverse(GF2X& c, const GF2X& a, long hi)$/;"	f
CopyReverse	deplib/ntl-main/src/ZZX1.cpp	/^void CopyReverse(ZZX& x, const ZZX& a, long hi)$/;"	f
CopyReverse	deplib/ntl-main/src/ZZ_pEX.cpp	/^void CopyReverse(ZZ_pEX& x, const ZZ_pEX& a, long hi)$/;"	f
CopyReverse	deplib/ntl-main/src/ZZ_pX.cpp	/^void CopyReverse(ZZ_pX& x, const ZZ_pX& a, long lo, long hi)$/;"	f
CopyReverse	deplib/ntl-main/src/lzz_pEX.cpp	/^void CopyReverse(zz_pEX& x, const zz_pEX& a, long hi)$/;"	f
CopyReverse	deplib/ntl-main/src/lzz_pX.cpp	/^void CopyReverse(zz_pX& x, const zz_pX& a, long lo, long hi)$/;"	f
CopySwap	deplib/ntl-main/src/WordVector.cpp	/^void CopySwap(WordVector& x, WordVector& y)$/;"	f
CountLeadingZeros	deplib/ntl-main/src/CheckBUILTIN_CLZL.cpp	/^long CountLeadingZeros(unsigned long x)$/;"	f
CreateProcess	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
CurrentThreadID	deplib/ntl-main/src/thread.cpp	/^const std::string& CurrentThreadID()$/;"	f
CutAway	deplib/ntl-main/src/ZZXFactoring.cpp	/^void CutAway(mat_ZZ& B1, vec_ZZ& D, mat_ZZ& M, $/;"	f	file:
CyclicReduce	deplib/ntl-main/src/ZZ_pX.cpp	/^void CyclicReduce(ZZ_pX& x, const ZZ_pX& a, long m)$/;"	f
CyclicReduce	deplib/ntl-main/src/lzz_pX.cpp	/^void CyclicReduce(zz_pX& x, const zz_pX& a, long m)$/;"	f
Cyclotomic	deplib/ntl-main/src/ThreadTest.cpp	/^ZZX Cyclotomic(long N)$/;"	f
D	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct D { private: D(const D&); };$/;"	s	file:
D	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct D { private: D(const D&); };$/;"	s	file:
DATA	deplib/ntl-main/src/lip.cpp	/^inline _ntl_limb_t * DATA(_ntl_gbigint p) $/;"	f	file:
DBL	deplib/ntl-main/src/lip.cpp	/^DBL(_ntl_limb_t x)$/;"	f	file:
DBL_INT_ADD	deplib/ntl-main/src/ZZ.cpp	/^void DBL_INT_ADD(_ntl_uint32& a, _ntl_uint32& b, _ntl_uint32 c)$/;"	f	file:
DD	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct DD { D d; };$/;"	s	file:
DD	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct DD { D d; };$/;"	s	file:
DDF	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline vec_pair_GF2EX_long DDF(const GF2EX& f, const GF2EX& h,$/;"	f
DDF	deplib/ntl-main/include/NTL/GF2XFactoring.h	/^inline vec_pair_GF2X_long DDF(const GF2X& f,$/;"	f
DDF	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline vec_pair_ZZ_pX_long DDF(const ZZ_pX& f, const ZZ_pX& h,$/;"	f
DDF	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline vec_pair_zz_pX_long DDF(const zz_pX& f, const zz_pX& h,$/;"	f
DDF	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void DDF(vec_pair_GF2EX_long& factors, const GF2EX& ff, const GF2EX& hh, $/;"	f
DDF	deplib/ntl-main/src/GF2XFactoring.cpp	/^void DDF(vec_pair_GF2X_long& factors, const GF2X& ff, long verbose)$/;"	f
DDF	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void DDF(vec_pair_ZZ_pX_long& factors, const ZZ_pX& ff, const ZZ_pX& hh, $/;"	f
DDF	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void DDF(vec_pair_zz_pX_long& factors, const zz_pX& ff, const zz_pX& hh, $/;"	f
DEF_PREFIX	deplib/ntl-main/src/makefile	/^DEF_PREFIX=\/usr\/local$/;"	m
DELTA	deplib/ntl-main/src/ZZ.cpp	2971;"	d	file:
DELTA	deplib/ntl-main/src/ZZ.cpp	3025;"	d	file:
DESTDIR	deplib/ntl-main/src/makefile	/^DESTDIR=$/;"	m
DFILES	deplib/ntl-main/src/makefile	/^DFILES=copying.txt BasicThreadPool.txt GF2.txt GF2E.txt GF2EX.txt  \\$/;"	m
DOC	deplib/ntl-main/src/makefile	/^DOC = $(DFILES) $(HTFILES) TFT-time.jpg zmulrat.jpg flintrat.jpg$/;"	m
DOCDIR	deplib/ntl-main/src/makefile	/^DOCDIR=$(PREFIX)\/share\/doc$/;"	m
DOUBLE	deplib/ntl-main/src/quad_float.cpp	70;"	d	file:
DO_MUL	deplib/ntl-main/src/mat_lzz_p.cpp	/^DO_MUL(unsigned long a, unsigned long b)$/;"	f	file:
DQROUND_VECTORS_VEC	deplib/ntl-main/src/ZZ.cpp	3078;"	d	file:
DUMP	deplib/ntl-main/src/lip.cpp	/^static void DUMP(_ntl_gbigint a)$/;"	f	file:
DeclareRelocatableType	deplib/ntl-main/include/NTL/tools.h	/^constexpr bool DeclareRelocatableType(T*)$/;"	f
DeclareRelocatableType	deplib/ntl-main/include/NTL/tools.h	/^inline bool DeclareRelocatableType(T*)$/;"	f
DefaultCopiedPtrPolicy	deplib/ntl-main/include/NTL/SmartPtr.h	/^struct DefaultCopiedPtrPolicy : DefaultDeleterPolicy, DefaultCopierPolicy { };$/;"	s
DefaultCopierPolicy	deplib/ntl-main/include/NTL/SmartPtr.h	/^struct DefaultCopierPolicy {$/;"	s
DefaultDeleterPolicy	deplib/ntl-main/include/NTL/SmartPtr.h	/^struct DefaultDeleterPolicy {$/;"	s
DeflationFactor	deplib/ntl-main/src/ZZXFactoring.cpp	/^long DeflationFactor(const ZZX& f)$/;"	f	file:
Deleter	deplib/ntl-main/include/NTL/ZZ.h	/^class Deleter {$/;"	c	class:ZZ
DenseChopTraces	deplib/ntl-main/src/ZZXFactoring.cpp	/^void DenseChopTraces(vec_ZZ& C, const vec_ZZ& Tr, long d, long d1, $/;"	f	file:
DeriveKey	deplib/ntl-main/src/ZZ.cpp	/^void DeriveKey(unsigned char *key, long klen,  $/;"	f
DerivedNode	deplib/ntl-main/include/NTL/tools.h	/^   DerivedNode(Args&&... args) : t(std::forward<Args>(args)...) { }$/;"	f	struct:details_pthread::DerivedNode
DerivedNode	deplib/ntl-main/include/NTL/tools.h	/^struct DerivedNode : Node {$/;"	s	namespace:details_pthread
DerivedNode	deplib/ntl-main/src/CheckThreads.cpp	/^   DerivedNode(Args&&... args) : t(std::forward<Args>(args)...) { }$/;"	f	struct:details_pthread::DerivedNode
DerivedNode	deplib/ntl-main/src/CheckThreads.cpp	/^struct DerivedNode : Node {$/;"	s	namespace:details_pthread	file:
DetBound	deplib/ntl-main/src/mat_ZZ.cpp	/^long DetBound(const mat_ZZ& a)$/;"	f	file:
DetIrredTest	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long DetIrredTest(const GF2EX& f)$/;"	f
DetIrredTest	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^long DetIrredTest(const ZZ_pEX& f)$/;"	f
DetIrredTest	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^long DetIrredTest(const ZZ_pX& f)$/;"	f
DetIrredTest	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^long DetIrredTest(const zz_pEX& f)$/;"	f
DetIrredTest	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^long DetIrredTest(const zz_pX& f)$/;"	f
DivCross	deplib/ntl-main/include/NTL/GF2E.h	/^   long DivCross;$/;"	m	class:GF2EInfoT
DivCross	deplib/ntl-main/include/NTL/GF2E.h	/^static long DivCross() { return GF2EInfo->DivCross; }$/;"	f	class:GF2E
DivCross	deplib/ntl-main/include/NTL/ZZ_pE.h	/^static long DivCross() { return 16; }$/;"	f	class:ZZ_pE
DivCross	deplib/ntl-main/include/NTL/lzz_pE.h	/^static long DivCross() { return 16; }$/;"	f	class:zz_pE
DivHandler	deplib/ntl-main/include/NTL/ZZ_p.h	/^DivHandlerPtr DivHandler;$/;"	m	class:ZZ_p
DivHandler	deplib/ntl-main/src/ZZ_p.cpp	/^ZZ_p::DivHandlerPtr ZZ_p::DivHandler = 0;$/;"	m	class:ZZ_p	file:
DivHandlerPtr	deplib/ntl-main/include/NTL/ZZ_p.h	/^typedef void (*DivHandlerPtr)(const ZZ_p& a);   \/\/ error-handler for division$/;"	t	class:ZZ_p
DivPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR DivPrec(const RR& a, const RR& b, long p)$/;"	f
DivPrec	deplib/ntl-main/src/RR.cpp	/^void DivPrec(RR& x, const RR& a, const RR& b, long p)$/;"	f
DivRem	deplib/ntl-main/include/NTL/ZZ.h	/^inline long DivRem(ZZ& q, const ZZ& a, long b)$/;"	f
DivRem	deplib/ntl-main/include/NTL/ZZ.h	/^inline void DivRem(ZZ& q, ZZ& r, const ZZ& a, const ZZ& b)$/;"	f
DivRem	deplib/ntl-main/src/GF2EX.cpp	/^void DivRem(GF2EX& q, GF2EX& r, const GF2EX& a, const GF2EX& b)$/;"	f
DivRem	deplib/ntl-main/src/GF2EX.cpp	/^void DivRem(GF2EX& q, GF2EX& r, const GF2EX& a, const GF2EXModulus& F)$/;"	f
DivRem	deplib/ntl-main/src/GF2X1.cpp	/^void DivRem(GF2X& q, GF2X& r, const GF2X& a, const GF2X& b)$/;"	f
DivRem	deplib/ntl-main/src/GF2X1.cpp	/^void DivRem(GF2X& q, GF2X& r, const GF2X& a, const GF2XModulus& F)$/;"	f
DivRem	deplib/ntl-main/src/ZZX1.cpp	/^void DivRem(ZZX& q, ZZX& r, const ZZX& a, const ZZX& b)$/;"	f
DivRem	deplib/ntl-main/src/ZZ_pEX.cpp	/^void DivRem(ZZ_pEX& q, ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
DivRem	deplib/ntl-main/src/ZZ_pEX.cpp	/^void DivRem(ZZ_pEX& q, ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
DivRem	deplib/ntl-main/src/ZZ_pX.cpp	/^void DivRem(ZZ_pX& q, ZZ_pX& r, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
DivRem	deplib/ntl-main/src/ZZ_pX.cpp	/^void DivRem(ZZ_pX& q, ZZ_pX& r, const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
DivRem	deplib/ntl-main/src/lzz_pEX.cpp	/^void DivRem(zz_pEX& q, zz_pEX& r, const zz_pEX& a, const zz_pEX& b)$/;"	f
DivRem	deplib/ntl-main/src/lzz_pEX.cpp	/^void DivRem(zz_pEX& q, zz_pEX& r, const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
DivRem	deplib/ntl-main/src/lzz_pX.cpp	/^void DivRem(zz_pX& q, zz_pX& r, const zz_pX& a, const zz_pX& b)$/;"	f
DivRem	deplib/ntl-main/src/lzz_pX.cpp	/^void DivRem(zz_pX& q, zz_pX& r, const zz_pX& a, const zz_pXModulus& F)$/;"	f
DivRem21	deplib/ntl-main/src/ZZ_pX.cpp	/^void DivRem21(ZZ_pX& q, ZZ_pX& x, const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
DivRem21	deplib/ntl-main/src/lzz_pX.cpp	/^void DivRem21(zz_pX& q, zz_pX& x, const zz_pX& a, const zz_pXModulus& F)$/;"	f
DoInitTab	deplib/ntl-main/src/ZZXFactoring.cpp	/^void DoInitTab(lookup_tab_t& lookup_tab, long i, const vec_ulong& ratio,$/;"	f	file:
DoInstall	deplib/ntl-main/src/ZZ_p.cpp	/^void ZZ_p::DoInstall()$/;"	f	class:ZZ_p
DoMinPolyMod	deplib/ntl-main/src/GF2EX.cpp	/^void DoMinPolyMod(GF2EX& h, const GF2EX& g, const GF2EXModulus& F, long m, $/;"	f
DoMinPolyMod	deplib/ntl-main/src/GF2X1.cpp	/^void DoMinPolyMod(GF2X& h, const GF2X& g, const GF2XModulus& F, long m, $/;"	f
DoMinPolyMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void DoMinPolyMod(ZZ_pEX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F, long m, $/;"	f
DoMinPolyMod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void DoMinPolyMod(ZZ_pX& h, const ZZ_pX& g, const ZZ_pXModulus& F, long m,$/;"	f
DoMinPolyMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void DoMinPolyMod(zz_pEX& h, const zz_pEX& g, const zz_pEXModulus& F, long m, $/;"	f
DoMinPolyMod	deplib/ntl-main/src/lzz_pX1.cpp	/^void DoMinPolyMod(zz_pX& h, const zz_pX& g, const zz_pXModulus& F, long m,$/;"	f
DoMinPolyTower	deplib/ntl-main/src/GF2EX.cpp	/^void DoMinPolyTower(GF2X& h, const GF2EX& g, const GF2EXModulus& F, long m,$/;"	f
DoMinPolyTower	deplib/ntl-main/src/ZZ_pEX.cpp	/^void DoMinPolyTower(ZZ_pX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F, long m,$/;"	f
DoMinPolyTower	deplib/ntl-main/src/lzz_pEX.cpp	/^void DoMinPolyTower(zz_pX& h, const zz_pEX& g, const zz_pEXModulus& F, long m,$/;"	f
DoSetLength	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::DoSetLength(long n)$/;"	f	class:Vec
DoSetLength	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::DoSetLength(long n, const T& a)$/;"	f	class:Vec
DoSetLength	deplib/ntl-main/src/WordVector.cpp	/^void WordVector::DoSetLength(long n)   $/;"	f	class:WordVector
DoSetLengthAndApply	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::DoSetLengthAndApply(long n, F& f)$/;"	f	class:Vec
DoSetSize	deplib/ntl-main/src/ZZ_pX.cpp	/^void FFTRep::DoSetSize(long NewK, long NewNumPrimes)$/;"	f	class:FFTRep
DoSetSize	deplib/ntl-main/src/lzz_pX.cpp	/^void fftRep::DoSetSize(long NewK, long NewNumPrimes)$/;"	f	class:fftRep
DoubleMod	deplib/ntl-main/src/FFT.cpp	/^static inline mint_t DoubleMod(mint_t a, mint_t q) { return AddMod(a, a, q); }$/;"	f	file:
DoublePrecision	deplib/ntl-main/src/CheckContract.cpp	/^long DoublePrecision()$/;"	f
DoublePrecision	deplib/ntl-main/src/MakeDesc.cpp	/^long DoublePrecision()$/;"	f
DoubleRounding	deplib/ntl-main/src/MakeDesc.cpp	/^long DoubleRounding(long dp)$/;"	f
Dummy	deplib/ntl-main/include/NTL/Lazy.h	/^   class Dummy { };$/;"	c	class:Lazy
Dummy	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:AlignedArray
Dummy	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:CloneablePtr
Dummy	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:CopiedPtr
Dummy	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:SmartPtr
Dummy	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:Unique2DArray
Dummy	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:UniqueArray
Dummy	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy { };$/;"	c	class:UniquePtr
Dummy1	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:AlignedArray
Dummy1	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:CloneablePtr
Dummy1	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:CopiedPtr
Dummy1	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:SmartPtr
Dummy1	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:Unique2DArray
Dummy1	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:UniqueArray
Dummy1	deplib/ntl-main/include/NTL/SmartPtr.h	/^   class Dummy1 { };$/;"	c	class:UniquePtr
DummyScopeGuard	deplib/ntl-main/include/NTL/tools.h	/^   DummyScopeGuard() : active(true) { }$/;"	f	class:DummyScopeGuard
DummyScopeGuard	deplib/ntl-main/include/NTL/tools.h	/^class DummyScopeGuard {$/;"	c
DynamicCast	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr<Y> DynamicCast() const $/;"	f	class:CloneablePtr
DynamicCast	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr<Y> DynamicCast() const $/;"	f	class:SmartPtr
DynamicCast	deplib/ntl-main/include/NTL/SmartPtr.h	/^CloneablePtr<X> DynamicCast(const CloneablePtr<Y>& p)  { return p.template DynamicCast<X>(); }$/;"	f
DynamicCast	deplib/ntl-main/include/NTL/SmartPtr.h	/^SmartPtr<X> DynamicCast(const SmartPtr<Y>& p)  { return p.template DynamicCast<X>(); }$/;"	f
E	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct E { private: E(const E&) = default; };$/;"	s	file:
E	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct E { private: E(const E&) = default; };$/;"	s	file:
EDF	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline vec_GF2EX EDF(const GF2EX& f, const GF2EX& b,$/;"	f
EDF	deplib/ntl-main/include/NTL/GF2XFactoring.h	/^inline vec_GF2X EDF(const GF2X& f, $/;"	f
EDF	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline vec_ZZ_pEX EDF(const ZZ_pEX& f, const ZZ_pEX& b,$/;"	f
EDF	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline vec_ZZ_pX EDF(const ZZ_pX& f, const ZZ_pX& b,$/;"	f
EDF	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline vec_zz_pEX EDF(const zz_pEX& f, const zz_pEX& b,$/;"	f
EDF	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline vec_zz_pX EDF(const zz_pX& f, const zz_pX& b,$/;"	f
EDF	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void EDF(vec_GF2EX& factors, const GF2EX& ff, const GF2EX& bb,$/;"	f
EDF	deplib/ntl-main/src/GF2XFactoring.cpp	/^void EDF(vec_GF2X& factors, const GF2X& ff, long d, long verbose)$/;"	f
EDF	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void EDF(vec_ZZ_pEX& factors, const ZZ_pEX& ff, const ZZ_pEX& bb,$/;"	f
EDF	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void EDF(vec_ZZ_pX& factors, const ZZ_pX& ff, const ZZ_pX& bb,$/;"	f
EDF	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void EDF(vec_zz_pEX& factors, const zz_pEX& ff, const zz_pEX& bb,$/;"	f
EDF	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void EDF(vec_zz_pX& factors, const zz_pX& ff, const zz_pX& bb,$/;"	f
EDFSplit	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void EDFSplit(vec_GF2EX& v, const GF2EX& f, const GF2EX& b, long d)$/;"	f	file:
EDFSplit	deplib/ntl-main/src/GF2XFactoring.cpp	/^void EDFSplit(GF2X& f1, GF2X& f2, const GF2X& f, long d)$/;"	f	file:
EDFSplit	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void EDFSplit(vec_ZZ_pEX& v, const ZZ_pEX& f, const ZZ_pEX& b, long d)$/;"	f
EDFSplit	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void EDFSplit(vec_ZZ_pX& v, const ZZ_pX& f, const ZZ_pX& b, long d)$/;"	f	file:
EDFSplit	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void EDFSplit(vec_zz_pEX& v, const zz_pEX& f, const zz_pEX& b, long d)$/;"	f
EDFSplit	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void EDFSplit(vec_zz_pX& v, const zz_pX& f, const zz_pX& b, long d)$/;"	f	file:
EE	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct EE { E e; };$/;"	s	file:
EE	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct EE { E e; };$/;"	s	file:
END_FIX	deplib/ntl-main/src/quad_float.cpp	89;"	d	file:
EP0	deplib/ntl-main/src/ZZ.cpp	1599;"	d	file:
EP1	deplib/ntl-main/src/ZZ.cpp	1600;"	d	file:
EXTRA_BITS	deplib/ntl-main/src/ZZXFactoring.cpp	983;"	d	file:
ErrBoundTest	deplib/ntl-main/src/ZZ.cpp	/^long ErrBoundTest(long kk, long tt, long nn)$/;"	f	file:
Error	deplib/ntl-main/include/NTL/tools.h	/^inline void Error(const char *msg) { TerminalError(msg); }$/;"	f
Error	deplib/ntl-main/include/NTL/tools.h	/^inline void Error(const char *msg) { throw ErrorObject(msg); }$/;"	f
ErrorCallback	deplib/ntl-main/src/tools.cpp	/^NTL_CHEAP_THREAD_LOCAL void (*ErrorCallback)() = 0;$/;"	v
ErrorMsgCallback	deplib/ntl-main/src/tools.cpp	/^NTL_CHEAP_THREAD_LOCAL void (*ErrorMsgCallback)(const char *) = 0;$/;"	v
ErrorObject	deplib/ntl-main/include/NTL/tools.h	/^   ErrorObject(const char *msg) : runtime_error(msg) { }$/;"	f	class:ErrorObject
ErrorObject	deplib/ntl-main/include/NTL/tools.h	/^class ErrorObject : public NTL_SNS runtime_error {$/;"	c
EuclLength	deplib/ntl-main/src/ZZX1.cpp	/^void EuclLength(ZZ& l, const ZZX& a)$/;"	f	file:
EuclLength1	deplib/ntl-main/src/ZZX1.cpp	/^void EuclLength1(ZZ& l, const ZZX& a)$/;"	f	file:
EuclUpdate	deplib/ntl-main/src/HNF.cpp	/^void EuclUpdate(vec_ZZ& u, vec_ZZ& v, $/;"	f	file:
ExactDiv	deplib/ntl-main/src/LLL.cpp	/^static void ExactDiv(ZZ& qq, const ZZ& a, const ZZ& b)$/;"	f	file:
ExactDiv	deplib/ntl-main/src/mat_ZZ.cpp	/^void ExactDiv(mat_ZZ& x, const ZZ& d)$/;"	f	file:
ExactDiv	deplib/ntl-main/src/mat_ZZ.cpp	/^void ExactDiv(vec_ZZ& x, const ZZ& d)$/;"	f	file:
ExpandKeys	aes_private.h	/^inline void ExpandKeys(const uint8_t* key,$/;"	f	namespace:__anon2
ExtendedModulusSize	deplib/ntl-main/include/NTL/ZZ_p.h	/^   long ExtendedModulusSize;$/;"	m	class:ZZ_pInfoT
ExtendedModulusSize	deplib/ntl-main/include/NTL/ZZ_p.h	/^static long ExtendedModulusSize() { return ZZ_pInfo->ExtendedModulusSize; }$/;"	f	class:ZZ_p
ExtractBits	deplib/ntl-main/src/GF2EX.cpp	/^void ExtractBits(_ntl_ulong *cp, const _ntl_ulong *ap, long k, long n)$/;"	f
FEATURES	deplib/ntl-main/src/makefile	/^FEATURES=ALIGNED_ARRAY BUILTIN_CLZL LL_TYPE SSSE3 AVX PCLMUL AVX2 FMA AVX512F \\$/;"	m
FFTDiv	deplib/ntl-main/src/ZZ_pX.cpp	/^void FFTDiv(ZZ_pX& q, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
FFTDiv	deplib/ntl-main/src/lzz_pX.cpp	/^void FFTDiv(zz_pX& q, const zz_pX& a, const zz_pX& b)$/;"	f
FFTDivRem	deplib/ntl-main/src/ZZ_pX.cpp	/^void FFTDivRem(ZZ_pX& q, ZZ_pX& r, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
FFTDivRem	deplib/ntl-main/src/lzz_pX.cpp	/^void FFTDivRem(zz_pX& q, zz_pX& r, const zz_pX& a, const zz_pX& b)$/;"	f
FFTFwd	deplib/ntl-main/include/NTL/FFT.h	/^void FFTFwd(long* A, const long *a, long k, const FFTPrimeInfo& info)$/;"	f
FFTFwd	deplib/ntl-main/include/NTL/FFT.h	/^void FFTFwd(long* A, const long *a, long k, long i)$/;"	f
FFTFwd_trans	deplib/ntl-main/include/NTL/FFT.h	/^void FFTFwd_trans(long* A, const long *a, long k, const FFTPrimeInfo& info)$/;"	f
FFTFwd_trans	deplib/ntl-main/include/NTL/FFT.h	/^void FFTFwd_trans(long* A, const long *a, long k, long i)$/;"	f
FFTFwd_trunc	deplib/ntl-main/include/NTL/FFT.h	/^void FFTFwd_trunc(long* A, const long *a, long k, const FFTPrimeInfo& info,$/;"	f
FFTFwd_trunc	deplib/ntl-main/include/NTL/FFT.h	/^void FFTFwd_trunc(long* A, const long *a, long k, long i, long yn, long xn)$/;"	f
FFTInfo	deplib/ntl-main/include/NTL/ZZ_p.h	/^   Lazy<ZZ_pFFTInfoT> FFTInfo;$/;"	m	class:ZZ_pInfoT
FFTInit	deplib/ntl-main/src/lzz_p.cpp	/^void zz_p::FFTInit(long index)$/;"	f	class:zz_p
FFTMul	deplib/ntl-main/src/ZZ_pX.cpp	/^void FFTMul(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
FFTMul	deplib/ntl-main/src/lzz_pX.cpp	/^void FFTMul(zz_pX& x, const zz_pX& a, const zz_pX& b)$/;"	f
FFTMulTabs	deplib/ntl-main/src/FFT.cpp	/^class FFTMulTabs {$/;"	c	file:
FFTMulTabsDeleterPolicy	deplib/ntl-main/include/NTL/FFT.h	/^struct FFTMulTabsDeleterPolicy {$/;"	s
FFTMulTrunc	deplib/ntl-main/src/ZZ_pX1.cpp	/^void FFTMulTrunc(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b, long n)$/;"	f
FFTMulTrunc	deplib/ntl-main/src/lzz_pX1.cpp	/^void FFTMulTrunc(zz_pX& x, const zz_pX& a, const zz_pX& b, long n)$/;"	f
FFTMultipliers	deplib/ntl-main/src/FFT.cpp	/^typedef LazyTable<FFTVectorPair, NTL_FFTMaxRoot+1> FFTMultipliers;$/;"	t	file:
FFTPrimeInfo	deplib/ntl-main/include/NTL/FFT.h	/^struct FFTPrimeInfo {$/;"	s
FFTRem	deplib/ntl-main/src/ZZ_pX.cpp	/^void FFTRem(ZZ_pX& r, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
FFTRem	deplib/ntl-main/src/lzz_pX.cpp	/^void FFTRem(zz_pX& r, const zz_pX& a, const zz_pX& b)$/;"	f
FFTRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   FFTRep() : k(-1), MaxK(-1), len(0), NumPrimes(0) { }$/;"	f	class:FFTRep
FFTRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   FFTRep(INIT_SIZE_TYPE, long InitK) : k(-1), MaxK(-1), len(0), NumPrimes(0)$/;"	f	class:FFTRep
FFTRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   FFTRep(const FFTRep& R) : k(-1), MaxK(-1), len(0), NumPrimes(0)$/;"	f	class:FFTRep
FFTRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^class FFTRep {$/;"	c
FFTRev1	deplib/ntl-main/include/NTL/FFT.h	/^void FFTRev1(long* A, const long *a, long k, const FFTPrimeInfo& info)$/;"	f
FFTRev1	deplib/ntl-main/include/NTL/FFT.h	/^void FFTRev1(long* A, const long *a, long k, long i)$/;"	f
FFTRev1_trans	deplib/ntl-main/include/NTL/FFT.h	/^void FFTRev1_trans(long* A, const long *a, long k, const FFTPrimeInfo& info)$/;"	f
FFTRev1_trans	deplib/ntl-main/include/NTL/FFT.h	/^void FFTRev1_trans(long* A, const long *a, long k, long i)$/;"	f
FFTRev1_trunc	deplib/ntl-main/include/NTL/FFT.h	/^void FFTRev1_trunc(long* A, const long *a, long k, const FFTPrimeInfo& info,$/;"	f
FFTRev1_trunc	deplib/ntl-main/include/NTL/FFT.h	/^void FFTRev1_trunc(long* A, const long *a, long k, long i, long yn)$/;"	f
FFTRoundUp	deplib/ntl-main/include/NTL/FFT_impl.h	/^long FFTRoundUp(long xn, long k)$/;"	f
FFTSqr	deplib/ntl-main/src/ZZ_pX.cpp	/^void FFTSqr(ZZ_pX& x, const ZZ_pX& a)$/;"	f
FFTSqr	deplib/ntl-main/src/lzz_pX.cpp	/^void FFTSqr(zz_pX& x, const zz_pX& a)$/;"	f
FFTSqrTrunc	deplib/ntl-main/src/ZZ_pX1.cpp	/^void FFTSqrTrunc(ZZ_pX& x, const ZZ_pX& a, long n)$/;"	f
FFTSqrTrunc	deplib/ntl-main/src/lzz_pX1.cpp	/^void FFTSqrTrunc(zz_pX& x, const zz_pX& a, long n)$/;"	f
FFTTables	deplib/ntl-main/src/FFT.cpp	/^FFTTablesType FFTTables;$/;"	v
FFTTablesType	deplib/ntl-main/include/NTL/FFT.h	/^typedef LazyTable<FFTPrimeInfo, NTL_MAX_FFTPRIMES> FFTTablesType;$/;"	t
FFTVectorPair	deplib/ntl-main/src/FFT.cpp	/^class FFTVectorPair {$/;"	c	file:
FMADetected	deplib/ntl-main/src/CheckContract.cpp	/^long FMADetected(long dp)$/;"	f
FMADetected	deplib/ntl-main/src/MakeDesc.cpp	/^long FMADetected(long dp)$/;"	f
FROMLE	deplib/ntl-main/src/ZZ.cpp	1857;"	d	file:
FRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   FFTRep FRep; \/\/ 2^k point rep of f$/;"	m	class:ZZ_pXModulus
FRep	deplib/ntl-main/include/NTL/lzz_pX.h	/^   fftRep FRep; \/\/ 2^k point rep of f$/;"	m	class:zz_pXModulus
FUNC	deplib/ntl-main/src/ZZ.cpp	2188;"	d	file:
FacVec	deplib/ntl-main/include/NTL/FacVec.h	/^typedef vec_IntFactor FacVec;$/;"	t
FactorInt	deplib/ntl-main/src/FacVec.cpp	/^void FactorInt(FacVec& fvec, long n)$/;"	f
FastTraceVec	deplib/ntl-main/src/GF2EX.cpp	/^void FastTraceVec(vec_GF2E& S, const GF2EXModulus& f)$/;"	f	file:
FastTraceVec	deplib/ntl-main/src/GF2X1.cpp	/^void FastTraceVec(vec_GF2& S, const GF2XModulus& f)$/;"	f	file:
FastTraceVec	deplib/ntl-main/src/ZZ_pEX.cpp	/^void FastTraceVec(vec_ZZ_pE& S, const ZZ_pEXModulus& f)$/;"	f	file:
FastTraceVec	deplib/ntl-main/src/ZZ_pX1.cpp	/^void FastTraceVec(vec_ZZ_p& S, const ZZ_pX& f)$/;"	f
FastTraceVec	deplib/ntl-main/src/lzz_pEX.cpp	/^void FastTraceVec(vec_zz_pE& S, const zz_pEXModulus& f)$/;"	f	file:
FastTraceVec	deplib/ntl-main/src/lzz_pX1.cpp	/^void FastTraceVec(vec_zz_p& S, const zz_pX& f)$/;"	f
FetchBabySteps	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void FetchBabySteps(vec_GF2EX& v, long k)$/;"	f	file:
FetchBabySteps	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void FetchBabySteps(vec_ZZ_pEX& v, long k)$/;"	f	file:
FetchBabySteps	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void FetchBabySteps(vec_ZZ_pX& v, long k)$/;"	f	file:
FetchBabySteps	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void FetchBabySteps(vec_zz_pEX& v, long k)$/;"	f	file:
FetchBabySteps	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void FetchBabySteps(vec_zz_pX& v, long k)$/;"	f	file:
FetchGiantStep	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void FetchGiantStep(GF2EX& g, long gs, const GF2EXModulus& F)$/;"	f	file:
FetchGiantStep	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void FetchGiantStep(ZZ_pEX& g, long gs, const ZZ_pEXModulus& F)$/;"	f	file:
FetchGiantStep	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void FetchGiantStep(ZZ_pX& g, long gs, const ZZ_pXModulus& F)$/;"	f	file:
FetchGiantStep	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void FetchGiantStep(zz_pEX& g, long gs, const zz_pEXModulus& F)$/;"	f	file:
FetchGiantStep	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void FetchGiantStep(zz_pX& g, long gs, const zz_pXModulus& F)$/;"	f	file:
FileError	deplib/ntl-main/include/NTL/tools.h	/^inline void FileError(const char *msg) { TerminalError(msg); }$/;"	f
FileError	deplib/ntl-main/include/NTL/tools.h	/^inline void FileError(const char *msg) { throw FileErrorObject(msg); }$/;"	f
FileErrorObject	deplib/ntl-main/include/NTL/tools.h	/^   FileErrorObject(const char *msg) : ErrorObject(msg) { }$/;"	f	class:FileErrorObject
FileErrorObject	deplib/ntl-main/include/NTL/tools.h	/^class FileErrorObject : public ErrorObject {$/;"	c
FileList	deplib/ntl-main/include/NTL/fileio.h	/^   FileList() { }$/;"	f	class:FileList
FileList	deplib/ntl-main/include/NTL/fileio.h	/^class FileList {$/;"	c
FileName	deplib/ntl-main/src/fileio.cpp	/^const char *FileName(const char* stem, long d)$/;"	f
FillRandom	deplib/ntl-main/src/SSMulTest.cpp	/^void FillRandom(ZZX& f, long n, long k)$/;"	f
FillRandom	deplib/ntl-main/src/mat_lzz_pTest.cpp	/^void FillRandom(Mat<zz_p>& A)$/;"	f
FillRandom	deplib/ntl-main/src/mat_lzz_pTest.cpp	/^void FillRandom(Vec<zz_p>& A)$/;"	f
FillRandom1	deplib/ntl-main/src/mat_lzz_pTest.cpp	/^void FillRandom1(Mat<zz_p>& A)$/;"	f
FindFactors	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void FindFactors(vec_GF2EX& factors, const GF2EX& f, const GF2EX& g,$/;"	f	file:
FindFactors	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void FindFactors(vec_ZZ_pEX& factors, const ZZ_pEX& f, const ZZ_pEX& g,$/;"	f
FindFactors	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void FindFactors(vec_ZZ_pX& factors, const ZZ_pX& f, const ZZ_pX& g,$/;"	f	file:
FindFactors	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void FindFactors(vec_zz_pEX& factors, const zz_pEX& f, const zz_pEX& g,$/;"	f
FindFactors	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void FindFactors(vec_zz_pX& factors, const zz_pX& f, const zz_pX& g,$/;"	f	file:
FindMin	deplib/ntl-main/src/FacVec.cpp	/^void FindMin(FacVec& v, long lo, long hi)$/;"	f	file:
FindPent	deplib/ntl-main/src/GF2XFactoring.cpp	/^long FindPent(long n, long& kk2, long& kk1)$/;"	f	file:
FindRoot	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline GF2E FindRoot(const GF2EX& f)$/;"	f
FindRoot	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pE FindRoot(const ZZ_pEX& f)$/;"	f
FindRoot	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_p FindRoot(const ZZ_pX& f)$/;"	f
FindRoot	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline zz_pE FindRoot(const zz_pEX& f)$/;"	f
FindRoot	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline zz_p FindRoot(const zz_pX& f)$/;"	f
FindRoot	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void FindRoot(GF2E& root, const GF2EX& ff)$/;"	f
FindRoot	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void FindRoot(ZZ_pE& root, const ZZ_pEX& ff)$/;"	f
FindRoot	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void FindRoot(ZZ_p& root, const ZZ_pX& ff)$/;"	f
FindRoot	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void FindRoot(zz_pE& root, const zz_pEX& ff)$/;"	f
FindRoot	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void FindRoot(zz_p& root, const zz_pX& ff)$/;"	f
FindRoots	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline vec_GF2E FindRoots(const GF2EX& f)$/;"	f
FindRoots	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline vec_ZZ_pE FindRoots(const ZZ_pEX& f)$/;"	f
FindRoots	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline vec_ZZ_p FindRoots(const ZZ_pX& f)$/;"	f
FindRoots	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline vec_zz_pE FindRoots(const zz_pEX& f)$/;"	f
FindRoots	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline vec_zz_p FindRoots(const zz_pX& f)$/;"	f
FindRoots	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void FindRoots(vec_GF2E& x, const GF2EX& ff)$/;"	f
FindRoots	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void FindRoots(vec_ZZ_pE& x, const ZZ_pEX& ff)$/;"	f
FindRoots	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void FindRoots(vec_ZZ_p& x, const ZZ_pX& ff)$/;"	f
FindRoots	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void FindRoots(vec_zz_pE& x, const zz_pEX& ff)$/;"	f
FindRoots	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void FindRoots(vec_zz_p& x, const zz_pX& ff)$/;"	f
FindTrinom	deplib/ntl-main/src/GF2XFactoring.cpp	/^long FindTrinom(long n)$/;"	f	file:
FindTrueFactors	deplib/ntl-main/src/ZZXFactoring.cpp	/^void FindTrueFactors(vec_ZZX& factors, const ZZX& ff, $/;"	f	file:
FindTrueFactors_vH	deplib/ntl-main/src/ZZXFactoring.cpp	/^void FindTrueFactors_vH(vec_ZZX& factors, const ZZX& ff, $/;"	f	file:
FixAtCurrentLength	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::FixAtCurrentLength() $/;"	f	class:Vec
FixAtCurrentLength	deplib/ntl-main/src/vec_GF2.cpp	/^void vec_GF2::FixAtCurrentLength()$/;"	f	class:vec_GF2
FixDiag	deplib/ntl-main/src/HNF.cpp	/^void FixDiag(vec_ZZ& u, const ZZ& a, const vec_ZZ& v, const ZZ& M, long m)$/;"	f	file:
FixLength	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::FixLength(long n) $/;"	f	class:Vec
FixLength	deplib/ntl-main/src/vec_GF2.cpp	/^void vec_GF2::FixLength(long n)$/;"	f	class:vec_GF2
Fixer	deplib/ntl-main/include/NTL/matrix.h	/^      explicit Fixer(long _m) : m(_m) { }$/;"	f	struct:Mat::Fixer
Fixer	deplib/ntl-main/include/NTL/matrix.h	/^   struct Fixer {$/;"	s	class:Mat
FloorPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR FloorPrec(const RR& a, long p)$/;"	f
FloorPrec	deplib/ntl-main/src/RR.cpp	/^void FloorPrec(RR& x, const RR& a, long p)$/;"	f
FloorToZZ	deplib/ntl-main/include/NTL/RR.h	/^inline ZZ FloorToZZ(const RR& a)$/;"	f
FloorToZZ	deplib/ntl-main/include/NTL/RR.h	/^inline void FloorToZZ(ZZ& z, const RR& a) { conv(z, a); }$/;"	f
ForceNormal	deplib/ntl-main/src/lip.cpp	/^void ForceNormal(_ntl_gbigint x)$/;"	f	file:
ForceToMem	deplib/ntl-main/include/NTL/tools.h	/^inline void ForceToMem(double *p) { _ntl_ForceToMem(p); }$/;"	f
ForceToMem	deplib/ntl-main/include/NTL/tools.h	/^inline void ForceToMem(double *p) { }$/;"	f
FrobeniusMap	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline GF2EX FrobeniusMap(const GF2EXModulus& F)$/;"	f
FrobeniusMap	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void FrobeniusMap(GF2EX& h, const GF2EXModulus& F)$/;"	f
FrobeniusMap	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void FrobeniusMap(ZZ_pEX& h, const ZZ_pEXModulus& F)$/;"	f
FrobeniusMap	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void FrobeniusMap(zz_pEX& h, const zz_pEXModulus& F)$/;"	f
FromFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(FromFFTRep)(ZZ_p* x, FFTRep& y, long lo, long hi)$/;"	f
FromFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(FromFFTRep)(ZZ_pX& x, FFTRep& y, long lo, long hi)$/;"	f
FromFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void FromFFTRep(ZZ_p* x, FFTRep& y, long lo, long hi)$/;"	f
FromFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void FromFFTRep(ZZ_pX& x, FFTRep& y, long lo, long hi)$/;"	f
FromFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void FromFFTRep(ZZ_pXModRep& x, const FFTRep& a)$/;"	f
FromModularRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void FromModularRep(ZZ_p& x, vec_long& avec, const ZZ_pFFTInfoT *FFTInfo,$/;"	f
FromModularRep	deplib/ntl-main/src/lzz_pX.cpp	/^void FromModularRep(zz_p& res, long *a, zz_pInfoT* info)$/;"	f	file:
FromModularRep	deplib/ntl-main/src/lzz_pX.cpp	/^void FromModularRep(zz_p* res, const fftRep& R, long lo, long cnt, $/;"	f	file:
FromZZ_pXModRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void FromZZ_pXModRep(ZZ_pX& x, const ZZ_pXModRep& a, long lo, long hi)$/;"	f
FromfftRep	deplib/ntl-main/src/lzz_pX.cpp	/^void FromfftRep(zz_p* x, fftRep& y, long lo, long hi)$/;"	f
FromfftRep	deplib/ntl-main/src/lzz_pX.cpp	/^void FromfftRep(zz_pX& x, fftRep& y, long lo, long hi)$/;"	f
Fwd	deplib/ntl-main/include/NTL/SmartPtr.h	/^ConstReferenceWrapper<T> Fwd(const T& x) { return ConstReferenceWrapper<T>(x); }$/;"	f
Fwd	deplib/ntl-main/include/NTL/SmartPtr.h	/^ReferenceWrapper<T> Fwd(T& x) { return ReferenceWrapper<T>(x); }$/;"	f
Fwd	deplib/ntl-main/include/NTL/SmartPtr.h	/^T& Fwd(T& x) { return x; }$/;"	f
Fwd	deplib/ntl-main/include/NTL/SmartPtr.h	/^const T& Fwd(const T& x) { return x; }$/;"	f
GCD	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX GCD(const GF2EX& a, const GF2EX& b)$/;"	f
GCD	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X GCD(const GF2X& a, const GF2X& b)$/;"	f
GCD	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ GCD(const ZZ& a, const ZZ& b)$/;"	f
GCD	deplib/ntl-main/include/NTL/ZZ.h	/^inline void GCD(ZZ& d, const ZZ& a, const ZZ& b)$/;"	f
GCD	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX GCD(const ZZX& a, const ZZX& b)$/;"	f
GCD	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX GCD(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
GCD	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX GCD(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
GCD	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX GCD(const zz_pEX& a, const zz_pEX& b)$/;"	f
GCD	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX GCD(const zz_pX& a, const zz_pX& b)$/;"	f
GCD	deplib/ntl-main/src/GF2EX.cpp	/^void GCD(GF2EX& d, const GF2EX& u, const GF2EX& v)$/;"	f
GCD	deplib/ntl-main/src/GF2X1.cpp	/^void GCD(GF2X& d, const GF2X& u, const GF2X& v)$/;"	f
GCD	deplib/ntl-main/src/ZZ.cpp	/^long GCD(long a, long b)$/;"	f
GCD	deplib/ntl-main/src/ZZX1.cpp	/^void GCD(ZZX& d, const ZZX& a, const ZZX& b)$/;"	f
GCD	deplib/ntl-main/src/ZZ_pEX.cpp	/^void GCD(ZZ_pEX& d, const ZZ_pEX& u, const ZZ_pEX& v)$/;"	f
GCD	deplib/ntl-main/src/ZZ_pX1.cpp	/^void GCD(ZZ_pX& d, const ZZ_pX& u, const ZZ_pX& v)$/;"	f
GCD	deplib/ntl-main/src/lzz_pEX.cpp	/^void GCD(zz_pEX& d, const zz_pEX& u, const zz_pEX& v)$/;"	f
GCD	deplib/ntl-main/src/lzz_pX1.cpp	/^void GCD(zz_pX& d, const zz_pX& u, const zz_pX& v)$/;"	f
GCDCross	deplib/ntl-main/include/NTL/GF2E.h	/^   long GCDCross;$/;"	m	class:GF2EInfoT
GCDCross	deplib/ntl-main/include/NTL/GF2E.h	/^static long GCDCross() { return GF2EInfo->GCDCross; }$/;"	f	class:GF2E
GCDMinPolySeq	deplib/ntl-main/src/ZZ_pX1.cpp	/^void GCDMinPolySeq(ZZ_pX& h, const vec_ZZ_p& x, long m)$/;"	f
GCDMinPolySeq	deplib/ntl-main/src/lzz_pX1.cpp	/^void GCDMinPolySeq(zz_pX& h, const vec_zz_p& x, long m)$/;"	f
GCD_alt	deplib/ntl-main/include/NTL/ZZ.h	/^inline void GCD_alt(ZZ& d, const ZZ& a, const ZZ& b)$/;"	f
GCRT_TMPS	deplib/ntl-main/src/lip.cpp	6531;"	d	file:
GETU32	deplib/ntl-main/src/ZZ.cpp	2646;"	d	file:
GETU32	deplib/ntl-main/src/ZZ.cpp	2649;"	d	file:
GET_SIZE_NEG	deplib/ntl-main/src/lip.cpp	/^inline void GET_SIZE_NEG(long& sz, long& neg, _ntl_gbigint p)$/;"	f	file:
GF2	deplib/ntl-main/include/NTL/GF2.h	/^GF2() : _GF2__rep(0) { }$/;"	f	class:GF2
GF2	deplib/ntl-main/include/NTL/GF2.h	/^GF2(INIT_ALLOC_TYPE) : _GF2__rep(0) { } $/;"	f	class:GF2
GF2	deplib/ntl-main/include/NTL/GF2.h	/^GF2(INIT_LOOP_HOLE_TYPE, unsigned long a) : _GF2__rep(a) { }$/;"	f	class:GF2
GF2	deplib/ntl-main/include/NTL/GF2.h	/^GF2(INIT_NO_ALLOC_TYPE) : _GF2__rep(0) { } $/;"	f	class:GF2
GF2	deplib/ntl-main/include/NTL/GF2.h	/^GF2(INIT_VAL_TYPE, long a) : _GF2__rep(a & 1) { }$/;"	f	class:GF2
GF2	deplib/ntl-main/include/NTL/GF2.h	/^GF2::GF2(const ref_GF2& other) :$/;"	f	class:GF2
GF2	deplib/ntl-main/include/NTL/GF2.h	/^class GF2 {$/;"	c
GF2	deplib/ntl-main/include/NTL/GF2.h	/^explicit GF2(long a) : _GF2__rep(0) { *this = a; }$/;"	f	class:GF2
GF2Bak	deplib/ntl-main/include/NTL/GF2.h	/^class GF2Bak {$/;"	c
GF2Context	deplib/ntl-main/include/NTL/GF2.h	/^GF2Context() {}$/;"	f	class:GF2Context
GF2Context	deplib/ntl-main/include/NTL/GF2.h	/^class GF2Context {$/;"	c
GF2Context	deplib/ntl-main/include/NTL/GF2.h	/^explicit GF2Context(long p) {  if (p != 2) LogicError("GF2Context with p != 2"); }$/;"	f	class:GF2Context
GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^GF2E() {  } \/\/ NO_ALLOC$/;"	f	class:GF2E
GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^GF2E(GF2E& x, INIT_TRANS_TYPE) : _GF2E__rep(x._GF2E__rep, INIT_TRANS) { }$/;"	f	class:GF2E
GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^GF2E(INIT_ALLOC_TYPE) { _GF2E__rep.xrep.SetMaxLength(GF2E::WordLength());  }  \/\/ allocates space$/;"	f	class:GF2E
GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^GF2E(INIT_NO_ALLOC_TYPE) { }  \/\/ allocates no space$/;"	f	class:GF2E
GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^class GF2E {$/;"	c
GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^explicit GF2E(GF2 a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:GF2E
GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^explicit GF2E(long a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:GF2E
GF2EBak	deplib/ntl-main/include/NTL/GF2E.h	/^GF2EBak() : MustRestore(false) {  }$/;"	f	class:GF2EBak
GF2EBak	deplib/ntl-main/include/NTL/GF2E.h	/^class GF2EBak {$/;"	c
GF2EContext	deplib/ntl-main/include/NTL/GF2E.h	/^GF2EContext() { }$/;"	f	class:GF2EContext
GF2EContext	deplib/ntl-main/include/NTL/GF2E.h	/^class GF2EContext {$/;"	c
GF2EContext	deplib/ntl-main/include/NTL/GF2E.h	/^explicit GF2EContext(const GF2X& p) : ptr(MakeSmart<GF2EInfoT>(p)) { }$/;"	f	class:GF2EContext
GF2EInfo	deplib/ntl-main/src/GF2E.cpp	/^GF2EInfoT *GF2EInfo = 0; $/;"	v
GF2EInfoT	deplib/ntl-main/include/NTL/GF2E.h	/^class GF2EInfoT {$/;"	c
GF2EInfoT	deplib/ntl-main/src/GF2E.cpp	/^GF2EInfoT::GF2EInfoT(const GF2X& NewP)$/;"	f	class:GF2EInfoT
GF2EPush	deplib/ntl-main/include/NTL/GF2E.h	/^GF2EPush() { bak.save(); }$/;"	f	class:GF2EPush
GF2EPush	deplib/ntl-main/include/NTL/GF2E.h	/^class GF2EPush {$/;"	c
GF2EPush	deplib/ntl-main/include/NTL/GF2E.h	/^explicit GF2EPush(const GF2EContext& context) { bak.save(); context.restore(); }$/;"	f	class:GF2EPush
GF2EPush	deplib/ntl-main/include/NTL/GF2E.h	/^explicit GF2EPush(const GF2X& p) { bak.save(); GF2EContext c(p); c.restore(); }$/;"	f	class:GF2EPush
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^GF2EX() { }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^GF2EX(GF2EX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^GF2EX(INIT_SIZE_TYPE, long n) { rep.SetMaxLength(n); }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^class GF2EX {$/;"	c
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^explicit GF2EX(GF2 a) { *this = a; }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^explicit GF2EX(const GF2& a) { *this = a; }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^explicit GF2EX(long a) { *this = a; }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(INIT_MONO_TYPE, long i, GF2 a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(INIT_MONO_TYPE, long i, const GF2E& a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(long i, GF2 a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(long i, const GF2E& a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX::GF2EX(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2EX
GF2EXArgBound	deplib/ntl-main/src/GF2EX.cpp	/^long GF2EXArgBound = 0;$/;"	v
GF2EXArgument	deplib/ntl-main/include/NTL/GF2EX.h	/^struct GF2EXArgument {$/;"	s
GF2EXFileThresh	deplib/ntl-main/src/GF2EXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL double GF2EXFileThresh = NTL_FILE_THRESH;$/;"	v
GF2EXModulus	deplib/ntl-main/include/NTL/GF2EX.h	/^class GF2EXModulus {$/;"	c
GF2EXModulus	deplib/ntl-main/src/GF2EX.cpp	/^GF2EXModulus::GF2EXModulus()$/;"	f	class:GF2EXModulus
GF2EXModulus	deplib/ntl-main/src/GF2EX.cpp	/^GF2EXModulus::GF2EXModulus(const GF2EX& ff)$/;"	f	class:GF2EXModulus
GF2EXTransMultiplier	deplib/ntl-main/include/NTL/GF2EX.h	/^struct GF2EXTransMultiplier {$/;"	s
GF2EX_BlockingFactor	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long GF2EX_BlockingFactor = 10;$/;"	v
GF2EX_GCDTableSize	deplib/ntl-main/src/GF2EXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long GF2EX_GCDTableSize = 4;$/;"	v
GF2EX_MOD_MUL	deplib/ntl-main/src/GF2EX.cpp	/^const long GF2EX_MOD_MUL = 1;$/;"	v
GF2EX_MOD_PLAIN	deplib/ntl-main/src/GF2EX.cpp	/^const long GF2EX_MOD_PLAIN = 0;$/;"	v
GF2E_SizeInWords	deplib/ntl-main/src/mat_GF2E.cpp	/^GF2E_SizeInWords()$/;"	f	file:
GF2Push	deplib/ntl-main/include/NTL/GF2.h	/^GF2Push() { }$/;"	f	class:GF2Push
GF2Push	deplib/ntl-main/include/NTL/GF2.h	/^class GF2Push {$/;"	c
GF2Push	deplib/ntl-main/include/NTL/GF2.h	/^explicit GF2Push(const GF2Context& context) { }$/;"	f	class:GF2Push
GF2Push	deplib/ntl-main/include/NTL/GF2.h	/^explicit GF2Push(long p) { if (p != 2) LogicError("GF2Push with p != 2"); }$/;"	f	class:GF2Push
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^GF2X() { }$/;"	f	class:GF2X
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^GF2X(GF2X& x, INIT_TRANS_TYPE) : xrep(x.xrep, INIT_TRANS) { }$/;"	f	class:GF2X
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^GF2X(const GF2X& a) : xrep(a.xrep) { }$/;"	f	class:GF2X
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^class GF2X {$/;"	c
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^explicit GF2X(GF2 a) { *this = a; }$/;"	f	class:GF2X
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^explicit GF2X(long a) { *this = a; }$/;"	f	class:GF2X
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X::GF2X(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:GF2X
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X::GF2X(INIT_MONO_TYPE, long i, GF2 a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2X
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X::GF2X(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2X
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X::GF2X(long i, GF2 a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2X
GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X::GF2X(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:GF2X
GF2X	deplib/ntl-main/src/GF2X.cpp	/^GF2X::GF2X(INIT_SIZE_TYPE, long n)$/;"	f	class:GF2X
GF2XArgument	deplib/ntl-main/include/NTL/GF2X.h	/^struct GF2XArgument {$/;"	s
GF2XFromBytes	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X GF2XFromBytes(const unsigned char *p, long n)$/;"	f
GF2XFromBytes	deplib/ntl-main/src/GF2X.cpp	/^void GF2XFromBytes(GF2X& x, const unsigned char *p, long n)$/;"	f
GF2XHexOutputPush	deplib/ntl-main/include/NTL/GF2X.h	/^   GF2XHexOutputPush() : OldHexOutput(GF2X::HexOutput) { }$/;"	f	class:GF2XHexOutputPush
GF2XHexOutputPush	deplib/ntl-main/include/NTL/GF2X.h	/^class GF2XHexOutputPush {$/;"	c
GF2XModulus	deplib/ntl-main/include/NTL/GF2X.h	/^class GF2XModulus {$/;"	c
GF2XModulus	deplib/ntl-main/src/GF2X1.cpp	/^GF2XModulus::GF2XModulus()$/;"	f	class:GF2XModulus
GF2XModulus	deplib/ntl-main/src/GF2X1.cpp	/^GF2XModulus::GF2XModulus(const GF2X& ff)$/;"	f	class:GF2XModulus
GF2XModulus	deplib/ntl-main/src/GF2X1.cpp	/^GF2XModulus::GF2XModulus(const GF2XModulus& F) :$/;"	f	class:GF2XModulus
GF2XTransMultiplier	deplib/ntl-main/include/NTL/GF2X.h	/^struct GF2XTransMultiplier {$/;"	s
GF2XVec	deplib/ntl-main/include/NTL/GF2XVec.h	/^   GF2XVec() : v(0), len(0), bsize(0) { }$/;"	f	class:GF2XVec
GF2XVec	deplib/ntl-main/include/NTL/GF2XVec.h	/^   GF2XVec(GF2XVec&& other) noexcept : GF2XVec() $/;"	f	class:GF2XVec
GF2XVec	deplib/ntl-main/include/NTL/GF2XVec.h	/^   GF2XVec(long n, long d) : v(0), len(0), bsize(0)  { SetSize(n, d); }$/;"	f	class:GF2XVec
GF2XVec	deplib/ntl-main/include/NTL/GF2XVec.h	/^class GF2XVec {$/;"	c
GF2XVec	deplib/ntl-main/src/GF2XVec.cpp	/^GF2XVec::GF2XVec(const GF2XVec& a) : v(0), len(0), bsize(0)$/;"	f	class:GF2XVec
GF2XWatcher	deplib/ntl-main/include/NTL/GF2X.h	/^   GF2XWatcher(GF2X& _watched) : watched(_watched) {}$/;"	f	class:GF2XWatcher
GF2XWatcher	deplib/ntl-main/include/NTL/GF2X.h	/^class GF2XWatcher {$/;"	c
GF2X_BlockingFactor	deplib/ntl-main/src/GF2XFactoring.cpp	/^const long GF2X_BlockingFactor = 40;$/;"	v
GF2X_DIV_CROSS	deplib/ntl-main/src/GF2X1.cpp	/^const long GF2X_DIV_CROSS = (NTL_BITS_PER_LONG\/2)*XOVER_SCALE; $/;"	v
GF2X_INCDIR	deplib/ntl-main/src/makefile	/^GF2X_INCDIR=$(GF2X_PREFIX)\/include$/;"	m
GF2X_LIBDIR	deplib/ntl-main/src/makefile	/^GF2X_LIBDIR=$(GF2X_PREFIX)\/lib$/;"	m
GF2X_MOD_MUL	deplib/ntl-main/src/GF2X1.cpp	/^const long GF2X_MOD_MUL = 1;$/;"	v
GF2X_MOD_PENT	deplib/ntl-main/src/GF2X1.cpp	/^const long GF2X_MOD_PENT = 4;$/;"	v
GF2X_MOD_PLAIN	deplib/ntl-main/src/GF2X1.cpp	/^const long GF2X_MOD_PLAIN = 0;$/;"	v
GF2X_MOD_SPECIAL	deplib/ntl-main/src/GF2X1.cpp	/^const long GF2X_MOD_SPECIAL = 2;$/;"	v
GF2X_MOD_TRI	deplib/ntl-main/src/GF2X1.cpp	/^const long GF2X_MOD_TRI = 3;$/;"	v
GF2X_OPT_INCDIR	deplib/ntl-main/src/makefile	/^GF2X_OPT_INCDIR=# -I$(GF2X_INCDIR) # GF2X$/;"	m
GF2X_OPT_LIB	deplib/ntl-main/src/makefile	/^GF2X_OPT_LIB=# -lgf2x # GF2X$/;"	m
GF2X_OPT_LIBDIR	deplib/ntl-main/src/makefile	/^GF2X_OPT_LIBDIR=# -L$(GF2X_LIBDIR) # GF2X$/;"	m
GF2X_PREFIX	deplib/ntl-main/src/makefile	/^GF2X_PREFIX=$(DEF_PREFIX)$/;"	m
GF2X_irred_tab	deplib/ntl-main/src/GF2XFactoring.cpp	/^static int GF2X_irred_tab[][3] = $/;"	v	file:
GF2X_test	deplib/ntl-main/src/QuickTest.cpp	/^int GF2X_test()$/;"	f
GF2X_time	deplib/ntl-main/src/QuickTest.cpp	/^void GF2X_time()$/;"	f
GMP_INCDIR	deplib/ntl-main/src/makefile	/^GMP_INCDIR=$(GMP_PREFIX)\/include$/;"	m
GMP_LIBDIR	deplib/ntl-main/src/makefile	/^GMP_LIBDIR=$(GMP_PREFIX)\/lib$/;"	m
GMP_OPT_INCDIR	deplib/ntl-main/src/makefile	/^GMP_OPT_INCDIR=# -I$(GMP_INCDIR) # GMPI$/;"	m
GMP_OPT_LIB	deplib/ntl-main/src/makefile	/^GMP_OPT_LIB=-lgmp # GMP$/;"	m
GMP_OPT_LIBDIR	deplib/ntl-main/src/makefile	/^GMP_OPT_LIBDIR=# -L$(GMP_LIBDIR) # GMPL$/;"	m
GMP_PREFIX	deplib/ntl-main/src/makefile	/^GMP_PREFIX=$(DEF_PREFIX)$/;"	m
GNUC_INTEL	deplib/ntl-main/src/MakeDesc.cpp	19;"	d	file:
GP	deplib/ntl-main/src/makefile	/^GP=GetPID1.cpp GetPID2.cpp TestGetPID.cpp$/;"	m
GRegister	deplib/ntl-main/src/lip.cpp	1309;"	d	file:
GT	deplib/ntl-main/src/makefile	/^GT=GetTime0.cpp GetTime1.cpp GetTime2.cpp GetTime3.cpp GetTime4.cpp GetTime5.cpp TestGetTime.cpp$/;"	m
G_BKZStatus	deplib/ntl-main/src/G_LLL_FP.cpp	/^void G_BKZStatus(double tt, double enum_time, unsigned long NumIterations, $/;"	f	file:
G_BKZStatus	deplib/ntl-main/src/G_LLL_QP.cpp	/^void G_BKZStatus(double tt, double enum_time, unsigned long NumIterations, $/;"	f	file:
G_BKZStatus	deplib/ntl-main/src/G_LLL_RR.cpp	/^void G_BKZStatus(double tt, double enum_time, unsigned long NumIterations, $/;"	f	file:
G_BKZStatus	deplib/ntl-main/src/G_LLL_XD.cpp	/^void G_BKZStatus(double tt, double enum_time, unsigned long NumIterations, $/;"	f	file:
G_BKZ_FP	deplib/ntl-main/src/G_LLL_FP.cpp	/^long G_BKZ_FP(mat_ZZ& BB, double delta, $/;"	f
G_BKZ_FP	deplib/ntl-main/src/G_LLL_FP.cpp	/^long G_BKZ_FP(mat_ZZ& BB, mat_ZZ& UU, double delta, $/;"	f
G_BKZ_FP	deplib/ntl-main/src/G_LLL_FP.cpp	/^long G_BKZ_FP(mat_ZZ& BB, mat_ZZ* UU, double delta, $/;"	f	file:
G_BKZ_QP	deplib/ntl-main/src/G_LLL_QP.cpp	/^long G_BKZ_QP(mat_ZZ& BB, double delta, $/;"	f
G_BKZ_QP	deplib/ntl-main/src/G_LLL_QP.cpp	/^long G_BKZ_QP(mat_ZZ& BB, mat_ZZ& UU, double delta, $/;"	f
G_BKZ_QP	deplib/ntl-main/src/G_LLL_QP.cpp	/^long G_BKZ_QP(mat_ZZ& BB, mat_ZZ* UU, quad_float delta, $/;"	f	file:
G_BKZ_QP1	deplib/ntl-main/src/G_LLL_QP.cpp	/^long G_BKZ_QP1(mat_ZZ& BB, double delta, $/;"	f
G_BKZ_QP1	deplib/ntl-main/src/G_LLL_QP.cpp	/^long G_BKZ_QP1(mat_ZZ& BB, mat_ZZ& UU, double delta, $/;"	f
G_BKZ_QP1	deplib/ntl-main/src/G_LLL_QP.cpp	/^long G_BKZ_QP1(mat_ZZ& BB, mat_ZZ* UU, quad_float delta, $/;"	f	file:
G_BKZ_RR	deplib/ntl-main/src/G_LLL_RR.cpp	/^long G_BKZ_RR(mat_ZZ& BB, double delta, $/;"	f
G_BKZ_RR	deplib/ntl-main/src/G_LLL_RR.cpp	/^long G_BKZ_RR(mat_ZZ& BB, mat_ZZ& UU, double delta, $/;"	f
G_BKZ_RR	deplib/ntl-main/src/G_LLL_RR.cpp	/^long G_BKZ_RR(mat_ZZ& BB, mat_ZZ* UU, const RR& delta, $/;"	f	file:
G_BKZ_XD	deplib/ntl-main/src/G_LLL_XD.cpp	/^long G_BKZ_XD(mat_ZZ& BB, double delta, $/;"	f
G_BKZ_XD	deplib/ntl-main/src/G_LLL_XD.cpp	/^long G_BKZ_XD(mat_ZZ& BB, mat_ZZ& UU, double delta, $/;"	f
G_BKZ_XD	deplib/ntl-main/src/G_LLL_XD.cpp	/^long G_BKZ_XD(mat_ZZ& BB, mat_ZZ* UU, xdouble delta, $/;"	f	file:
G_LLLStatus	deplib/ntl-main/src/G_LLL_FP.cpp	/^static void G_LLLStatus(long max_k, double t, long m, const mat_ZZ& B)$/;"	f	file:
G_LLLStatus	deplib/ntl-main/src/G_LLL_QP.cpp	/^static void G_LLLStatus(long max_k, double t, long m, const mat_ZZ& B)$/;"	f	file:
G_LLLStatus	deplib/ntl-main/src/G_LLL_RR.cpp	/^static void G_LLLStatus(long max_k, double t, long m, const mat_ZZ& B)$/;"	f	file:
G_LLLStatus	deplib/ntl-main/src/G_LLL_XD.cpp	/^static void G_LLLStatus(long max_k, double t, long m, const mat_ZZ& B)$/;"	f	file:
G_LLL_FP	deplib/ntl-main/src/G_LLL_FP.cpp	/^long G_LLL_FP(mat_ZZ& B, double delta, long deep, LLLCheckFct check, $/;"	f
G_LLL_FP	deplib/ntl-main/src/G_LLL_FP.cpp	/^long G_LLL_FP(mat_ZZ& B, mat_ZZ& U, double delta, long deep, $/;"	f
G_LLL_FP	deplib/ntl-main/src/G_LLL_FP.cpp	/^long G_LLL_FP(mat_ZZ& B, mat_ZZ* U, double delta, long deep, $/;"	f	file:
G_LLL_QP	deplib/ntl-main/src/G_LLL_QP.cpp	/^long G_LLL_QP(mat_ZZ& B, double delta, long deep, LLLCheckFct check,$/;"	f
G_LLL_QP	deplib/ntl-main/src/G_LLL_QP.cpp	/^long G_LLL_QP(mat_ZZ& B, mat_ZZ& U, double delta, long deep, $/;"	f
G_LLL_QP	deplib/ntl-main/src/G_LLL_QP.cpp	/^long G_LLL_QP(mat_ZZ& B, mat_ZZ* U, quad_float delta, long deep, $/;"	f	file:
G_LLL_RR	deplib/ntl-main/src/G_LLL_RR.cpp	/^long G_LLL_RR(mat_ZZ& B, double delta, long deep, $/;"	f
G_LLL_RR	deplib/ntl-main/src/G_LLL_RR.cpp	/^long G_LLL_RR(mat_ZZ& B, mat_ZZ& U, double delta, long deep, $/;"	f
G_LLL_RR	deplib/ntl-main/src/G_LLL_RR.cpp	/^long G_LLL_RR(mat_ZZ& B, mat_ZZ* U, const RR& delta, long deep, $/;"	f	file:
G_LLL_XD	deplib/ntl-main/src/G_LLL_XD.cpp	/^long G_LLL_XD(mat_ZZ& B, double delta, long deep, $/;"	f
G_LLL_XD	deplib/ntl-main/src/G_LLL_XD.cpp	/^long G_LLL_XD(mat_ZZ& B, mat_ZZ& U, double delta, long deep, $/;"	f
G_LLL_XD	deplib/ntl-main/src/G_LLL_XD.cpp	/^long G_LLL_XD(mat_ZZ& B, mat_ZZ* U, xdouble delta, long deep, $/;"	f	file:
GenGermainPrime	deplib/ntl-main/src/ZZ.cpp	/^void GenGermainPrime(ZZ& n, long k, long err)$/;"	f
GenGermainPrime_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ GenGermainPrime_ZZ(long l, long err = 80) $/;"	f
GenGermainPrime_long	deplib/ntl-main/src/ZZ.cpp	/^long GenGermainPrime_long(long k, long err)$/;"	f
GenPrime	deplib/ntl-main/src/ZZ.cpp	/^void GenPrime(ZZ& n, long k, long err)$/;"	f
GenPrime_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ GenPrime_ZZ(long l, long err = 80) $/;"	f
GenPrime_long	deplib/ntl-main/src/ZZ.cpp	/^long GenPrime_long(long k, long err)$/;"	f
GenerateBabySteps	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void GenerateBabySteps(GF2EX& h1, const GF2EX& f, const GF2EX& h, long k,$/;"	f	file:
GenerateBabySteps	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void GenerateBabySteps(ZZ_pEX& h1, const ZZ_pEX& f, const ZZ_pEX& h, long k,$/;"	f	file:
GenerateBabySteps	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void GenerateBabySteps(ZZ_pX& h1, const ZZ_pX& f, const ZZ_pX& h, long k,$/;"	f	file:
GenerateBabySteps	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void GenerateBabySteps(zz_pEX& h1, const zz_pEX& f, const zz_pEX& h, long k,$/;"	f	file:
GenerateBabySteps	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void GenerateBabySteps(zz_pX& h1, const zz_pX& f, const zz_pX& h, long k,$/;"	f	file:
GenerateEncryptingTables	aes_whitebox_compiler.cc	/^void GenerateEncryptingTables(FILE* out, uint32_t* roundKey, int Nr) {$/;"	f	namespace:__anon4
GenerateGF2RandomMatrix	aes_whitebox_compiler.cc	/^NTL::mat_GF2 GenerateGF2RandomMatrix(int dimension) {$/;"	f	namespace:__anon4
GenerateGiantSteps	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void GenerateGiantSteps(const GF2EX& f, const GF2EX& h, long l, $/;"	f	file:
GenerateGiantSteps	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void GenerateGiantSteps(const ZZ_pEX& f, const ZZ_pEX& h, long l, $/;"	f	file:
GenerateGiantSteps	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void GenerateGiantSteps(const ZZ_pX& f, const ZZ_pX& h, long l, $/;"	f	file:
GenerateGiantSteps	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void GenerateGiantSteps(const zz_pEX& f, const zz_pEX& h, long l, $/;"	f	file:
GenerateGiantSteps	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void GenerateGiantSteps(const zz_pX& f, const zz_pX& h, long l, long verbose)$/;"	f	file:
GenerateRandomGF2InvertibleMatrix	aes_whitebox_compiler.cc	/^NTL::mat_GF2 GenerateRandomGF2InvertibleMatrix(int dimension) {$/;"	f	namespace:__anon4
GenerateTables	aes_whitebox_compiler.cc	/^void GenerateTables(const char* hexKey, int Nk, int Nr) {$/;"	f	namespace:__anon4
GenerateXorTable	aes_whitebox_compiler.cc	/^void GenerateXorTable(FILE* out, int Nr) {$/;"	f	namespace:__anon4
GetCoeff	deplib/ntl-main/src/GF2EX.cpp	/^void GetCoeff(GF2E& x, const GF2EX& a, long i)$/;"	f
GetCoeff	deplib/ntl-main/src/ZZX.cpp	/^void GetCoeff(ZZ& x, const ZZX& a, long i)$/;"	f
GetCoeff	deplib/ntl-main/src/ZZ_pX.cpp	/^void GetCoeff(ZZ_p& x, const ZZ_pX& a, long i)$/;"	f
GetCoeff	deplib/ntl-main/src/lzz_pX.cpp	/^void GetCoeff(zz_p& x, const zz_pX& a, long i)$/;"	f
GetCost	deplib/ntl-main/include/NTL/MatPrime.h	/^   double GetCost() const { return cost; }$/;"	f	struct:MatPrime_crt_helper
GetCurrentRandomStream	deplib/ntl-main/src/ZZ.cpp	/^RandomStream& GetCurrentRandomStream()$/;"	f
GetFFTInfo	deplib/ntl-main/include/NTL/ZZ_p.h	/^static const ZZ_pFFTInfoT* GetFFTInfo() $/;"	f	class:ZZ_p
GetFFTPrime	deplib/ntl-main/include/NTL/FFT.h	/^long GetFFTPrime(long i)$/;"	f
GetFFTPrimeInv	deplib/ntl-main/include/NTL/FFT.h	/^mulmod_t GetFFTPrimeInv(long i)$/;"	f
GetFFTPrimeRecip	deplib/ntl-main/include/NTL/FFT.h	/^double GetFFTPrimeRecip(long i)$/;"	f
GetFFT_ZZ_red_struct	deplib/ntl-main/include/NTL/lzz_p.h	/^inline const sp_ZZ_reduce_struct& GetFFT_ZZ_red_struct(long i) $/;"	f
GetMatPrime	deplib/ntl-main/include/NTL/MatPrime.h	/^long GetMatPrime(long i)$/;"	f
GetNumPrimes	deplib/ntl-main/include/NTL/MatPrime.h	/^   long GetNumPrimes() const { return NumPrimes; }$/;"	f	struct:MatPrime_crt_helper
GetNumPrimes	deplib/ntl-main/src/ZZX1.cpp	/^   long GetNumPrimes() const { return nprimes; }$/;"	f	struct:NewFastCRTHelper
GetPID	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned long GetPID() { return _ntl_GetPID(); }$/;"	f
GetThreadPool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^BasicThreadPool *GetThreadPool()$/;"	f
GetTime	deplib/ntl-main/include/NTL/tools.h	/^inline double GetTime() { return _ntl_GetTime(); }$/;"	f
GetTmpSpace	deplib/ntl-main/include/NTL/ZZ_p.h	/^static ZZ_pTmpSpaceT* GetTmpSpace()$/;"	f	class:ZZ_p
GetWallTime	deplib/ntl-main/include/NTL/tools.h	/^inline double GetWallTime() { return _ntl_GetWallTime(); }$/;"	f
GiantRefine	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void GiantRefine(vec_pair_GF2EX_long& u, const GF2EX& ff, long k, long l,$/;"	f	file:
GiantRefine	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void GiantRefine(vec_pair_ZZ_pEX_long& u, const ZZ_pEX& ff, long k, long l,$/;"	f	file:
GiantRefine	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void GiantRefine(vec_pair_ZZ_pX_long& u, const ZZ_pX& ff, long k, long l,$/;"	f	file:
GiantRefine	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void GiantRefine(vec_pair_zz_pEX_long& u, const zz_pEX& ff, long k, long l,$/;"	f	file:
GiantRefine	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void GiantRefine(vec_pair_zz_pX_long& u, const zz_pX& ff, long k, long l,$/;"	f	file:
GiantStepFile	deplib/ntl-main/src/GF2EXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL vec_GF2EX *GiantStepFile = 0;$/;"	v	file:
GiantStepFile	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL vec_ZZ_pEX *GiantStepFile=0;$/;"	v	file:
GiantStepFile	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL vec_ZZ_pX *GiantStepFile = 0;$/;"	v	file:
GiantStepFile	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL vec_zz_pEX *GiantStepFile=0;$/;"	v	file:
GiantStepFile	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL vec_zz_pX *GiantStepFile = 0;$/;"	v	file:
GivensCache_FP	deplib/ntl-main/src/G_LLL_FP.cpp	/^GivensCache_FP::GivensCache_FP(long m, long n)$/;"	f	class:GivensCache_FP
GivensCache_FP	deplib/ntl-main/src/G_LLL_FP.cpp	/^class GivensCache_FP {$/;"	c	file:
GivensCache_QP	deplib/ntl-main/src/G_LLL_QP.cpp	/^GivensCache_QP::GivensCache_QP(long m, long n)$/;"	f	class:GivensCache_QP
GivensCache_QP	deplib/ntl-main/src/G_LLL_QP.cpp	/^class GivensCache_QP {$/;"	c	file:
GivensCache_RR	deplib/ntl-main/src/G_LLL_RR.cpp	/^GivensCache_RR::GivensCache_RR(long m, long n)$/;"	f	class:GivensCache_RR
GivensCache_RR	deplib/ntl-main/src/G_LLL_RR.cpp	/^class GivensCache_RR {$/;"	c	file:
GivensCache_XD	deplib/ntl-main/src/G_LLL_XD.cpp	/^GivensCache_XD::GivensCache_XD(long m, long n)$/;"	f	class:GivensCache_XD
GivensCache_XD	deplib/ntl-main/src/G_LLL_XD.cpp	/^class GivensCache_XD {$/;"	c	file:
GivensComputeGS	deplib/ntl-main/src/G_LLL_FP.cpp	/^void GivensComputeGS(double **B1, double **mu, double **aux, long k, long n,$/;"	f	file:
GivensComputeGS	deplib/ntl-main/src/G_LLL_QP.cpp	/^void GivensComputeGS(quad_float **B1, quad_float **mu, quad_float **aux, long k, long n,$/;"	f	file:
GivensComputeGS	deplib/ntl-main/src/G_LLL_RR.cpp	/^void GivensComputeGS(mat_RR& B1, mat_RR& mu, mat_RR& aux, long k, long n,$/;"	f	file:
GivensComputeGS	deplib/ntl-main/src/G_LLL_XD.cpp	/^void GivensComputeGS(xdouble **B1, xdouble **mu, xdouble **aux, long k, long n,$/;"	f	file:
GotThem	deplib/ntl-main/src/ZZXFactoring.cpp	/^long GotThem(vec_ZZX& factors, $/;"	f	file:
GuardProxy	deplib/ntl-main/include/NTL/thread.h	/^   GuardProxy(MutexProxy& mtx) : lck(mtx.mtx, NTL_SNS defer_lock) { }$/;"	f	class:GuardProxy
GuardProxy	deplib/ntl-main/include/NTL/thread.h	/^class GuardProxy {$/;"	c
H	deplib/ntl-main/include/NTL/GF2EX.h	/^   vec_GF2EX H;$/;"	m	struct:GF2EXArgument
H	deplib/ntl-main/include/NTL/GF2X.h	/^   vec_GF2X H;$/;"	m	struct:GF2XArgument
H	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   vec_ZZ_pEX H;$/;"	m	struct:ZZ_pEXArgument
H	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   vec_ZZ_pX H;$/;"	m	struct:ZZ_pXArgument
H	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   vec_zz_pEX H;$/;"	m	struct:zz_pEXArgument
H	deplib/ntl-main/include/NTL/lzz_pX.h	/^   vec_zz_pX H;$/;"	m	struct:zz_pXArgument
HHH	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL zz_pXNewArgument *HHH = 0;$/;"	v	file:
HNF	deplib/ntl-main/src/HNF.cpp	/^void HNF(mat_ZZ& W, const mat_ZZ& A_in, const ZZ& D_in)$/;"	f
HRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   FFTRep HRep; \/\/ 2^l point rep of H$/;"	m	class:ZZ_pXModulus
HRep	deplib/ntl-main/include/NTL/lzz_pX.h	/^   fftRep HRep; \/\/ 2^l point rep of H$/;"	m	class:zz_pXModulus
HTFILES	deplib/ntl-main/src/makefile	/^HTFILES=GF2.cpp.html GF2E.cpp.html GF2EX.cpp.html GF2EXFactoring.cpp.html  \\$/;"	m
HalfGCD	deplib/ntl-main/src/GF2EX.cpp	/^void HalfGCD(GF2EX& U, GF2EX& V)$/;"	f
HalfGCD	deplib/ntl-main/src/GF2EX.cpp	/^void HalfGCD(_NTL_GF2EXMatrix& M_out, const GF2EX& U, const GF2EX& V, long d_red)$/;"	f
HalfGCD	deplib/ntl-main/src/GF2X1.cpp	/^void HalfGCD(GF2X& U, GF2X& V)$/;"	f	file:
HalfGCD	deplib/ntl-main/src/GF2X1.cpp	/^void HalfGCD(_NTL_GF2XMatrix& M_out, const GF2X& U, const GF2X& V, long d_red)$/;"	f	file:
HalfGCD	deplib/ntl-main/src/ZZ_pEX.cpp	/^void HalfGCD(ZZ_pEX& U, ZZ_pEX& V)$/;"	f
HalfGCD	deplib/ntl-main/src/ZZ_pEX.cpp	/^void HalfGCD(_NTL_ZZ_pEXMatrix& M_out, const ZZ_pEX& U, const ZZ_pEX& V, long d_red)$/;"	f
HalfGCD	deplib/ntl-main/src/ZZ_pX1.cpp	/^void HalfGCD(ZZ_pX& U, ZZ_pX& V)$/;"	f
HalfGCD	deplib/ntl-main/src/ZZ_pX1.cpp	/^void HalfGCD(ZZ_pXMatrix& M_out, const ZZ_pX& U, const ZZ_pX& V, long d_red)$/;"	f
HalfGCD	deplib/ntl-main/src/lzz_pEX.cpp	/^void HalfGCD(_NTL_zz_pEXMatrix& M_out, const zz_pEX& U, const zz_pEX& V, long d_red)$/;"	f
HalfGCD	deplib/ntl-main/src/lzz_pEX.cpp	/^void HalfGCD(zz_pEX& U, zz_pEX& V)$/;"	f
HalfGCD	deplib/ntl-main/src/lzz_pX1.cpp	/^void HalfGCD(zz_pX& U, zz_pX& V)$/;"	f
HalfGCD	deplib/ntl-main/src/lzz_pX1.cpp	/^void HalfGCD(zz_pXMatrix& M_out, const zz_pX& U, const zz_pX& V, long d_red)$/;"	f
HenselLift	deplib/ntl-main/src/ZZXFactoring.cpp	/^void HenselLift(ZZX& Gout, ZZX& Hout, ZZX& Aout, ZZX& Bout,$/;"	f	file:
HenselLift1	deplib/ntl-main/src/ZZXFactoring.cpp	/^void HenselLift1(ZZX& Gout, ZZX& Hout, $/;"	f	file:
HenselSolve1	deplib/ntl-main/include/NTL/mat_ZZ.h	/^void HenselSolve1(ZZ& d_out, vec_ZZ& x_out, const mat_ZZ& A, const vec_ZZ& b)$/;"	f
HessCharPoly	deplib/ntl-main/src/ZZ_pXCharPoly.cpp	/^void HessCharPoly(ZZ_pX& g, const ZZ_pX& a, const ZZ_pX& f)$/;"	f	file:
HessCharPoly	deplib/ntl-main/src/lzz_pXCharPoly.cpp	/^void HessCharPoly(zz_pX& g, const zz_pX& a, const zz_pX& f)$/;"	f	file:
HexInput	deplib/ntl-main/src/GF2X.cpp	/^istream & HexInput(istream& s, GF2X& a)$/;"	f	file:
HexOutput	deplib/ntl-main/include/NTL/GF2X.h	/^static NTL_CHEAP_THREAD_LOCAL long HexOutput;$/;"	m	class:GF2X
HexOutput	deplib/ntl-main/src/GF2X.cpp	/^long GF2X::HexOutput = 0;$/;"	m	class:GF2X	file:
HexOutput	deplib/ntl-main/src/GF2X.cpp	/^ostream & HexOutput(ostream& s, const GF2X& a)$/;"	f	file:
HomDivide	deplib/ntl-main/src/ZZX1.cpp	/^long HomDivide(ZZX& q, const ZZX& a, const ZZX& b)$/;"	f
HomDivide	deplib/ntl-main/src/ZZX1.cpp	/^long HomDivide(const ZZX& a, const ZZX& b)$/;"	f
HomMul	deplib/ntl-main/src/ZZX1.cpp	/^void HomMul(ZZX& x, const ZZX& a, const ZZX& b)$/;"	f
HomPseudoDiv	deplib/ntl-main/src/ZZX1.cpp	/^void HomPseudoDiv(ZZX& q, const ZZX& a, const ZZX& b)$/;"	f
HomPseudoDivRem	deplib/ntl-main/src/ZZX1.cpp	/^void HomPseudoDivRem(ZZX& q, ZZX& r, const ZZX& a, const ZZX& b)$/;"	f
HomPseudoRem	deplib/ntl-main/src/ZZX1.cpp	/^void HomPseudoRem(ZZX& r, const ZZX& a, const ZZX& b)$/;"	f
HomSqr	deplib/ntl-main/src/ZZX1.cpp	/^void HomSqr(ZZX& x, const ZZX& a)$/;"	f
INCL	deplib/ntl-main/src/makefile	/^INCL=FFT.h FFT_impl.h FacVec.h GF2.h GF2E.h GF2EX.h GF2EXFactoring.h GF2X.h  \\$/;"	m
INCLUDEDIR	deplib/ntl-main/src/makefile	/^INCLUDEDIR=$(PREFIX)\/include$/;"	m
INIT_ALLOC	deplib/ntl-main/include/NTL/tools.h	/^const INIT_ALLOC_STRUCT INIT_ALLOC = INIT_ALLOC_STRUCT();$/;"	v
INIT_ALLOC_STRUCT	deplib/ntl-main/include/NTL/tools.h	/^struct INIT_ALLOC_STRUCT { };$/;"	s
INIT_ALLOC_TYPE	deplib/ntl-main/include/NTL/tools.h	/^typedef const INIT_ALLOC_STRUCT& INIT_ALLOC_TYPE;$/;"	t
INIT_FFT	deplib/ntl-main/include/NTL/tools.h	/^const INIT_FFT_STRUCT INIT_FFT = INIT_FFT_STRUCT();$/;"	v
INIT_FFT_STRUCT	deplib/ntl-main/include/NTL/tools.h	/^struct INIT_FFT_STRUCT { };$/;"	s
INIT_FFT_TYPE	deplib/ntl-main/include/NTL/tools.h	/^typedef const INIT_FFT_STRUCT& INIT_FFT_TYPE;$/;"	t
INIT_LOOP_HOLE	deplib/ntl-main/include/NTL/tools.h	/^const INIT_LOOP_HOLE_STRUCT INIT_LOOP_HOLE = INIT_LOOP_HOLE_STRUCT();$/;"	v
INIT_LOOP_HOLE_STRUCT	deplib/ntl-main/include/NTL/tools.h	/^struct INIT_LOOP_HOLE_STRUCT { };$/;"	s
INIT_LOOP_HOLE_TYPE	deplib/ntl-main/include/NTL/tools.h	/^typedef const INIT_LOOP_HOLE_STRUCT& INIT_LOOP_HOLE_TYPE;$/;"	t
INIT_MONO	deplib/ntl-main/include/NTL/tools.h	/^const INIT_MONO_STRUCT INIT_MONO = INIT_MONO_STRUCT();$/;"	v
INIT_MONO_STRUCT	deplib/ntl-main/include/NTL/tools.h	/^struct INIT_MONO_STRUCT { };$/;"	s
INIT_MONO_TYPE	deplib/ntl-main/include/NTL/tools.h	/^typedef const INIT_MONO_STRUCT& INIT_MONO_TYPE;$/;"	t
INIT_NO_ALLOC	deplib/ntl-main/include/NTL/tools.h	/^const INIT_NO_ALLOC_STRUCT INIT_NO_ALLOC = INIT_NO_ALLOC_STRUCT();$/;"	v
INIT_NO_ALLOC_STRUCT	deplib/ntl-main/include/NTL/tools.h	/^struct INIT_NO_ALLOC_STRUCT { };$/;"	s
INIT_NO_ALLOC_TYPE	deplib/ntl-main/include/NTL/tools.h	/^typedef const INIT_NO_ALLOC_STRUCT& INIT_NO_ALLOC_TYPE;$/;"	t
INIT_SIZE	deplib/ntl-main/include/NTL/tools.h	/^const INIT_SIZE_STRUCT INIT_SIZE = INIT_SIZE_STRUCT();$/;"	v
INIT_SIZE_STRUCT	deplib/ntl-main/include/NTL/tools.h	/^struct INIT_SIZE_STRUCT { };$/;"	s
INIT_SIZE_TYPE	deplib/ntl-main/include/NTL/tools.h	/^typedef const INIT_SIZE_STRUCT& INIT_SIZE_TYPE;$/;"	t
INIT_TRANS	deplib/ntl-main/include/NTL/tools.h	/^const INIT_TRANS_STRUCT INIT_TRANS = INIT_TRANS_STRUCT();$/;"	v
INIT_TRANS_STRUCT	deplib/ntl-main/include/NTL/tools.h	/^struct INIT_TRANS_STRUCT { };$/;"	s
INIT_TRANS_TYPE	deplib/ntl-main/include/NTL/tools.h	/^typedef const INIT_TRANS_STRUCT& INIT_TRANS_TYPE;$/;"	t
INIT_USER_FFT	deplib/ntl-main/include/NTL/tools.h	/^const INIT_USER_FFT_STRUCT INIT_USER_FFT = INIT_USER_FFT_STRUCT();$/;"	v
INIT_USER_FFT_STRUCT	deplib/ntl-main/include/NTL/tools.h	/^struct INIT_USER_FFT_STRUCT { };$/;"	s
INIT_USER_FFT_TYPE	deplib/ntl-main/include/NTL/tools.h	/^typedef const INIT_USER_FFT_STRUCT& INIT_USER_FFT_TYPE;$/;"	t
INIT_VAL	deplib/ntl-main/include/NTL/tools.h	/^const INIT_VAL_STRUCT INIT_VAL = INIT_VAL_STRUCT();$/;"	v
INIT_VAL_STRUCT	deplib/ntl-main/include/NTL/tools.h	/^struct INIT_VAL_STRUCT { };$/;"	s
INIT_VAL_TYPE	deplib/ntl-main/include/NTL/tools.h	/^typedef const INIT_VAL_STRUCT& INIT_VAL_TYPE;$/;"	t
INT32MASK	deplib/ntl-main/src/ZZ.cpp	1525;"	d	file:
INT32MASK	deplib/ntl-main/src/ZZ.cpp	1527;"	d	file:
ITER	deplib/ntl-main/src/ZZ_pXTest.cpp	8;"	d	file:
ITER	deplib/ntl-main/src/lzz_pXTest.cpp	5;"	d	file:
IdentityMod	deplib/ntl-main/src/FFT.cpp	/^static inline mint_t IdentityMod(mint_t a, mint_t q) { return a; }$/;"	f	file:
IncrementalGS	deplib/ntl-main/src/LLL.cpp	/^void IncrementalGS(mat_ZZ& B, vec_long& P, vec_ZZ& D, vec_vec_ZZ& lam, $/;"	f	file:
Init	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::Init(long n)   $/;"	f	class:Vec
Init	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::Init(long n, const T *src) $/;"	f	class:Vec
Init	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::Init(long n, const T& src) $/;"	f	class:Vec
InitAndApply	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::InitAndApply(long n, F& f)   $/;"	f	class:Vec
InitCopyMove	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::InitCopyMove(long n, T *src, std::false_type)$/;"	f	class:Vec
InitCopyMove	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::InitCopyMove(long n, T *src, std::true_type)$/;"	f	class:Vec
InitFFTPrimeInfo	deplib/ntl-main/src/FFT.cpp	/^void InitFFTPrimeInfo(FFTPrimeInfo& info, long q, long w, long bigtab_index)$/;"	f
InitMatPrimeInfo	deplib/ntl-main/src/MatPrime.cpp	/^void InitMatPrimeInfo(MatPrimeInfo& info, long q)$/;"	f
InitMove	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::InitMove(long n, T *src, std::false_type)$/;"	f	class:Vec
InitMove	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::InitMove(long n, T *src, std::true_type) $/;"	f	class:Vec
InitRandomStream	deplib/ntl-main/src/ZZ.cpp	/^void InitRandomStream()$/;"	f	file:
InitTab	deplib/ntl-main/src/ZZXFactoring.cpp	/^void InitTab(lookup_tab_t& lookup_tab, const vec_ulong& ratio, long r, long k,$/;"	f	file:
InitTimeConvert	deplib/ntl-main/src/CheckMACOS_TIME.cpp	/^static inline double InitTimeConvert()$/;"	f	file:
InitTimeConvert	deplib/ntl-main/src/GetTime0.cpp	/^static inline double InitTimeConvert()$/;"	f	file:
InitTimeConvert	deplib/ntl-main/src/ctools.cpp	/^static inline double InitTimeConvert()$/;"	f	file:
InitZZIO	deplib/ntl-main/src/ZZ.cpp	/^static void InitZZIO()$/;"	f	file:
InnerProd_L	deplib/ntl-main/src/lzz_p.cpp	/^InnerProd_L(const long *ap, const zz_p *bp, long n, long d, $/;"	f
InnerProd_L	deplib/ntl-main/src/lzz_p.cpp	/^InnerProd_L(const zz_p *ap, const zz_p *bp, long n, long d, $/;"	f
InnerProd_LL	deplib/ntl-main/src/lzz_p.cpp	/^InnerProd_LL(const long *ap, const zz_p *bp, long n, long d, $/;"	f
InnerProd_LL	deplib/ntl-main/src/lzz_p.cpp	/^InnerProd_LL(const zz_p *ap, const zz_p *bp, long n, long d, $/;"	f
InnerProd_L_bound	deplib/ntl-main/include/NTL/lzz_p.h	/^InnerProd_L_bound(long d)$/;"	f
InnerProd_L_viable	deplib/ntl-main/include/NTL/lzz_p.h	/^InnerProd_L_viable(long n, long d)$/;"	f
InnerProduct	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline void InnerProduct(ref_GF2 x, const vec_GF2& a, const vec_GF2& b)$/;"	f
InnerProduct	deplib/ntl-main/src/GF2EX.cpp	/^void InnerProduct(GF2EX& x, const GF2X& v, long low, long high,$/;"	f
InnerProduct	deplib/ntl-main/src/GF2EX.cpp	/^void InnerProduct(GF2EX& x, const vec_GF2E& v, long low, long high, $/;"	f
InnerProduct	deplib/ntl-main/src/GF2X1.cpp	/^void InnerProduct(GF2X& x, const GF2X& v, long dv, long low, long high, $/;"	f
InnerProduct	deplib/ntl-main/src/LLL_FP.cpp	/^static double InnerProduct(double *a, double *b, long n)$/;"	f	file:
InnerProduct	deplib/ntl-main/src/LLL_QP.cpp	/^static quad_float InnerProduct(quad_float *a, quad_float *b, long n)$/;"	f	file:
InnerProduct	deplib/ntl-main/src/LLL_XD.cpp	/^static xdouble InnerProduct(xdouble *a, xdouble *b, long n)$/;"	f	file:
InnerProduct	deplib/ntl-main/src/WordVector.cpp	/^long InnerProduct(const WordVector& a, const WordVector& b)$/;"	f
InnerProduct	deplib/ntl-main/src/ZZ_pEX.cpp	/^void InnerProduct(ZZ_pEX& x, const vec_ZZ_p& v, long low, long high,$/;"	f
InnerProduct	deplib/ntl-main/src/ZZ_pEX.cpp	/^void InnerProduct(ZZ_pEX& x, const vec_ZZ_pE& v, long low, long high, $/;"	f
InnerProduct	deplib/ntl-main/src/ZZ_pX1.cpp	/^NTL_TBDECL(InnerProduct)(ZZ_pX& x, const vec_ZZ_p& v, long low, long high, $/;"	f
InnerProduct	deplib/ntl-main/src/ZZ_pX1.cpp	/^void InnerProduct(ZZ_pX& x, const vec_ZZ_p& v, long low, long high, $/;"	f
InnerProduct	deplib/ntl-main/src/lzz_pEX.cpp	/^void InnerProduct(zz_pEX& x, const vec_zz_p& v, long low, long high,$/;"	f
InnerProduct	deplib/ntl-main/src/lzz_pEX.cpp	/^void InnerProduct(zz_pEX& x, const vec_zz_pE& v, long low, long high, $/;"	f
InnerProduct	deplib/ntl-main/src/lzz_pX1.cpp	/^void InnerProduct(zz_pX& x, const vec_zz_p& v, long low, long high, $/;"	f
InnerProduct	deplib/ntl-main/src/vec_GF2E.cpp	/^void InnerProduct(GF2E& x, const vec_GF2E& a, const vec_GF2E& b)$/;"	f
InnerProduct	deplib/ntl-main/src/vec_GF2E.cpp	/^void InnerProduct(GF2E& x, const vec_GF2E& a, const vec_GF2E& b,$/;"	f
InnerProduct	deplib/ntl-main/src/vec_RR.cpp	/^void InnerProduct(RR& xx, const vec_RR& a, const vec_RR& b)$/;"	f
InnerProduct	deplib/ntl-main/src/vec_ZZ.cpp	/^void InnerProduct(ZZ& xx, const vec_ZZ& a, const vec_ZZ& b)$/;"	f
InnerProduct	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void InnerProduct(ZZ_p& x, const vec_ZZ_p& a, const vec_ZZ_p& b)$/;"	f
InnerProduct	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void InnerProduct(ZZ_p& x, const vec_ZZ_p& a, const vec_ZZ_p& b,$/;"	f
InnerProduct	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void InnerProduct(ZZ_pE& x, const vec_ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
InnerProduct	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void InnerProduct(ZZ_pE& x, const vec_ZZ_pE& a, const vec_ZZ_pE& b,$/;"	f
InnerProduct	deplib/ntl-main/src/vec_lzz_p.cpp	/^void InnerProduct(zz_p& x, const vec_zz_p& a, const vec_zz_p& b)$/;"	f
InnerProduct	deplib/ntl-main/src/vec_lzz_p.cpp	/^void InnerProduct(zz_p& x, const vec_zz_p& a, const vec_zz_p& b,$/;"	f
InnerProduct	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void InnerProduct(zz_pE& x, const vec_zz_pE& a, const vec_zz_pE& b)$/;"	f
InnerProduct	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void InnerProduct(zz_pE& x, const vec_zz_pE& a, const vec_zz_pE& b,$/;"	f
InputError	deplib/ntl-main/include/NTL/tools.h	/^inline void InputError(const char *msg) { TerminalError(msg); }$/;"	f
InputError	deplib/ntl-main/include/NTL/tools.h	/^inline void InputError(const char *msg) { throw InputErrorObject(msg); }$/;"	f
InputErrorObject	deplib/ntl-main/include/NTL/tools.h	/^   InputErrorObject(const char *msg) : ErrorObject(msg) { }$/;"	f	class:InputErrorObject
InputErrorObject	deplib/ntl-main/include/NTL/tools.h	/^class InputErrorObject : public ErrorObject {$/;"	c
InputPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR InputPrec(NTL_SNS istream& s, long p)$/;"	f
InputPrec	deplib/ntl-main/src/RR.cpp	/^istream& InputPrec(RR& x, istream& s, long p)$/;"	f
IntFactor	deplib/ntl-main/include/NTL/FacVec.h	/^struct IntFactor {$/;"	s
IntValToChar	deplib/ntl-main/src/tools.cpp	/^char IntValToChar(long a)$/;"	f
IntervalRefine	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void IntervalRefine(vec_pair_GF2EX_long& factors, const GF2EX& ff,$/;"	f	file:
IntervalRefine	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void IntervalRefine(vec_pair_ZZ_pEX_long& factors, const ZZ_pEX& ff,$/;"	f	file:
IntervalRefine	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void IntervalRefine(vec_pair_ZZ_pX_long& factors, const ZZ_pX& ff,$/;"	f	file:
IntervalRefine	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void IntervalRefine(vec_pair_zz_pEX_long& factors, const zz_pEX& ff,$/;"	f	file:
IntervalRefine	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void IntervalRefine(vec_pair_zz_pX_long& factors, const zz_pX& ff,$/;"	f	file:
InvMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX InvMod(const GF2EX& a, const GF2EX& f)$/;"	f
InvMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X InvMod(const GF2X& a, const GF2X& f)$/;"	f
InvMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ InvMod(const ZZ& a, const ZZ& n)$/;"	f
InvMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX InvMod(const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
InvMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX InvMod(const ZZ_pX& a,  const ZZ_pX& f)$/;"	f
InvMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX InvMod(const zz_pEX& a, const zz_pEX& f)$/;"	f
InvMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX InvMod(const zz_pX& a, const zz_pX& f)$/;"	f
InvMod	deplib/ntl-main/src/GF2EX.cpp	/^void InvMod(GF2EX& x, const GF2EX& a, const GF2EX& f)$/;"	f
InvMod	deplib/ntl-main/src/GF2X1.cpp	/^void InvMod(GF2X& c, const GF2X& a, const GF2X& f)$/;"	f
InvMod	deplib/ntl-main/src/ZZ.cpp	/^long InvMod(long a, long n)$/;"	f
InvMod	deplib/ntl-main/src/ZZ.cpp	/^void InvMod(ZZ& x, const ZZ& a, const ZZ& n)$/;"	f
InvMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void InvMod(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
InvMod	deplib/ntl-main/src/ZZ_pX.cpp	/^void InvMod(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& f)$/;"	f
InvMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void InvMod(zz_pEX& x, const zz_pEX& a, const zz_pEX& f)$/;"	f
InvMod	deplib/ntl-main/src/lzz_pX.cpp	/^void InvMod(zz_pX& x, const zz_pX& a, const zz_pX& f)$/;"	f
InvModError	deplib/ntl-main/include/NTL/tools.h	/^inline void InvModError(const char *msg) { TerminalError(msg); }$/;"	f
InvModError	deplib/ntl-main/include/NTL/tools.h	/^inline void InvModError(const char *msg) { throw ArithmeticErrorObject(msg); }$/;"	f
InvModError	deplib/ntl-main/src/ZZ.cpp	/^void InvModError(const char *s, const ZZ& a, const ZZ& n)$/;"	f
InvModErrorObject	deplib/ntl-main/include/NTL/ZZ.h	/^   InvModErrorObject(const char *s, const ZZ& a, const ZZ& n)$/;"	f	class:InvModErrorObject
InvModErrorObject	deplib/ntl-main/include/NTL/ZZ.h	/^class InvModErrorObject : public ArithmeticErrorObject {$/;"	c
InvModStatus	deplib/ntl-main/include/NTL/GF2X.h	/^inline long InvModStatus(GF2X& c, const GF2X& a, const GF2XModulus& F)$/;"	f
InvModStatus	deplib/ntl-main/include/NTL/ZZ.h	/^inline long InvModStatus(ZZ& x, const ZZ& a, const ZZ& n)$/;"	f
InvModStatus	deplib/ntl-main/src/GF2EX.cpp	/^long InvModStatus(GF2EX& x, const GF2EX& a, const GF2EX& f)$/;"	f
InvModStatus	deplib/ntl-main/src/GF2X1.cpp	/^long InvModStatus(GF2X& c, const GF2X& a, const GF2X& f)$/;"	f
InvModStatus	deplib/ntl-main/src/ZZ.cpp	/^long InvModStatus(long& x, long a, long n)$/;"	f
InvModStatus	deplib/ntl-main/src/ZZ_pEX.cpp	/^long InvModStatus(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
InvModStatus	deplib/ntl-main/src/ZZ_pX.cpp	/^long InvModStatus(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& f)$/;"	f
InvModStatus	deplib/ntl-main/src/lzz_pEX.cpp	/^long InvModStatus(zz_pEX& x, const zz_pEX& a, const zz_pEX& f)$/;"	f
InvModStatus	deplib/ntl-main/src/lzz_pX.cpp	/^long InvModStatus(zz_pX& x, const zz_pX& a, const zz_pX& f)$/;"	f
InvMul	deplib/ntl-main/src/ZZXFactoring.cpp	/^void InvMul(ZZ_pX& g, const vec_ZZ_pX& W, const vec_long& I)$/;"	f	file:
InvPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR InvPrec(const RR& a, long p)$/;"	f
InvPrec	deplib/ntl-main/src/RR.cpp	/^void InvPrec(RR& x, const RR& a, long p)$/;"	f
InvShiftRowsTab	aes_private.h	/^constexpr int InvShiftRowsTab[16] = {$/;"	m	namespace:__anon2
InvTrunc	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX InvTrunc(const GF2EX& a, long m)$/;"	f
InvTrunc	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X InvTrunc(const GF2X& a, long e)$/;"	f
InvTrunc	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX InvTrunc(const ZZX& a, long m)$/;"	f
InvTrunc	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX InvTrunc(const ZZ_pEX& a, long m)$/;"	f
InvTrunc	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX InvTrunc(const ZZ_pX& a, long m)$/;"	f
InvTrunc	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX InvTrunc(const zz_pEX& a, long m)$/;"	f
InvTrunc	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX InvTrunc(const zz_pX& a, long m)$/;"	f
InvTrunc	deplib/ntl-main/src/GF2EX.cpp	/^void InvTrunc(GF2EX& c, const GF2EX& a, long e)$/;"	f
InvTrunc	deplib/ntl-main/src/GF2X1.cpp	/^void InvTrunc(GF2X& c, const GF2X& a, long e)$/;"	f
InvTrunc	deplib/ntl-main/src/ZZX1.cpp	/^void InvTrunc(ZZX& c, const ZZX& a, long e)$/;"	f
InvTrunc	deplib/ntl-main/src/ZZ_pEX.cpp	/^void InvTrunc(ZZ_pEX& c, const ZZ_pEX& a, long e)$/;"	f
InvTrunc	deplib/ntl-main/src/ZZ_pX.cpp	/^void InvTrunc(ZZ_pX& x, const ZZ_pX& a, long m)$/;"	f
InvTrunc	deplib/ntl-main/src/lzz_pEX.cpp	/^void InvTrunc(zz_pEX& c, const zz_pEX& a, long e)$/;"	f
InvTrunc	deplib/ntl-main/src/lzz_pX.cpp	/^void InvTrunc(zz_pX& x, const zz_pX& a, long m)$/;"	f
IrredBaseCase	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long IrredBaseCase(const GF2EX& h, long q, long a, const GF2EXModulus& F)$/;"	f	file:
IrredBaseCase	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^long IrredBaseCase(const ZZ_pEX& h, long q, long a, const ZZ_pEXModulus& F)$/;"	f	file:
IrredBaseCase	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^long IrredBaseCase(const ZZ_pX& h, long q, long a, const ZZ_pXModulus& F)$/;"	f	file:
IrredBaseCase	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^long IrredBaseCase(const zz_pEX& h, long q, long a, const zz_pEXModulus& F)$/;"	f	file:
IrredBaseCase	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^long IrredBaseCase(const zz_pX& h, long q, long a, const zz_pXModulus& F)$/;"	f	file:
IrredCombine	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void IrredCombine(GF2EX& x, const GF2EX& f, const GF2EX& g)$/;"	f	file:
IrredCombine	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void IrredCombine(ZZ_pEX& x, const ZZ_pEX& f, const ZZ_pEX& g)$/;"	f	file:
IrredCombine	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void IrredCombine(ZZ_pX& x, const ZZ_pX& f, const ZZ_pX& g)$/;"	f	file:
IrredCombine	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void IrredCombine(zz_pEX& x, const zz_pEX& f, const zz_pEX& g)$/;"	f	file:
IrredCombine	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void IrredCombine(zz_pX& x, const zz_pX& f, const zz_pX& g)$/;"	f	file:
IrredPolyMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX IrredPolyMod(const GF2EX& g, const GF2EXModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX IrredPolyMod(const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X IrredPolyMod(const GF2X& g, const GF2XModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X IrredPolyMod(const GF2X& g, const GF2XModulus& F, long m)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX IrredPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX IrredPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX IrredPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX IrredPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F, long m)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void IrredPolyMod(ZZ_pX& h, const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX IrredPolyMod(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX IrredPolyMod(const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void IrredPolyMod(zz_pX& h, const zz_pX& g, const zz_pXModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX IrredPolyMod(const zz_pX& g, const zz_pXModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX IrredPolyMod(const zz_pX& g, const zz_pXModulus& F, long m)$/;"	f
IrredPolyMod	deplib/ntl-main/src/GF2EX.cpp	/^void IrredPolyMod(GF2EX& h, const GF2EX& g, const GF2EXModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/src/GF2EX.cpp	/^void IrredPolyMod(GF2EX& h, const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
IrredPolyMod	deplib/ntl-main/src/GF2X1.cpp	/^void IrredPolyMod(GF2X& h, const GF2X& g, const GF2XModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/src/GF2X1.cpp	/^void IrredPolyMod(GF2X& h, const GF2X& g, const GF2XModulus& F, long m)$/;"	f
IrredPolyMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void IrredPolyMod(ZZ_pEX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void IrredPolyMod(ZZ_pEX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
IrredPolyMod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void IrredPolyMod(ZZ_pX& h, const ZZ_pX& g, const ZZ_pXModulus& F, long m) $/;"	f
IrredPolyMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void IrredPolyMod(zz_pEX& h, const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
IrredPolyMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void IrredPolyMod(zz_pEX& h, const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
IrredPolyMod	deplib/ntl-main/src/lzz_pX1.cpp	/^void IrredPolyMod(zz_pX& h, const zz_pX& g, const zz_pXModulus& F, long m)$/;"	f
IrredPolyTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2X IrredPolyTower(const GF2EX& g, const GF2EXModulus& F)$/;"	f
IrredPolyTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2X IrredPolyTower(const GF2EX& g, const GF2EXModulus& F,$/;"	f
IrredPolyTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void IrredPolyTower(GF2X& h, const GF2EX& g, $/;"	f
IrredPolyTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pX IrredPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
IrredPolyTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pX IrredPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F,$/;"	f
IrredPolyTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void IrredPolyTower(ZZ_pX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
IrredPolyTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void IrredPolyTower(zz_pX& h, const zz_pEX& g, $/;"	f
IrredPolyTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pX IrredPolyTower(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
IrredPolyTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pX IrredPolyTower(const zz_pEX& g, const zz_pEXModulus& F,$/;"	f
IrredPolyTower	deplib/ntl-main/src/GF2EX.cpp	/^void IrredPolyTower(GF2X& h, const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
IrredPolyTower	deplib/ntl-main/src/ZZ_pEX.cpp	/^void IrredPolyTower(ZZ_pX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
IrredPolyTower	deplib/ntl-main/src/lzz_pEX.cpp	/^void IrredPolyTower(zz_pX& h, const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
IsAlphaNum	deplib/ntl-main/src/newnames.cpp	/^int IsAlphaNum(int c)$/;"	f
IsDiag	deplib/ntl-main/src/mat_GF2.cpp	/^long IsDiag(const mat_GF2& A, long n, GF2 d)$/;"	f
IsDiag	deplib/ntl-main/src/mat_GF2E.cpp	/^long IsDiag(const mat_GF2E& A, long n, const GF2E& d)$/;"	f
IsDiag	deplib/ntl-main/src/mat_RR.cpp	/^long IsDiag(const mat_RR& A, long n, const RR& d)$/;"	f
IsDiag	deplib/ntl-main/src/mat_ZZ.cpp	/^long IsDiag(const mat_ZZ& A, long n, const ZZ& d)$/;"	f
IsDiag	deplib/ntl-main/src/mat_ZZ_p.cpp	/^long IsDiag(const mat_ZZ_p& A, long n, const ZZ_p& d)$/;"	f
IsDiag	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^long IsDiag(const mat_ZZ_pE& A, long n, const ZZ_pE& d)$/;"	f
IsDiag	deplib/ntl-main/src/mat_lzz_p.cpp	/^long IsDiag(const mat_zz_p& A, long n, zz_p d)$/;"	f
IsDiag	deplib/ntl-main/src/mat_lzz_pE.cpp	/^long IsDiag(const mat_zz_pE& A, long n, const zz_pE& d)$/;"	f
IsEOFChar	deplib/ntl-main/src/tools.cpp	/^long IsEOFChar(long c)$/;"	f
IsFFTPrime	deplib/ntl-main/include/NTL/lzz_p.h	/^static bool IsFFTPrime() { return zz_pInfo->p_info != 0; }$/;"	f	class:zz_p
IsFFTPrime	deplib/ntl-main/src/FFT.cpp	/^long IsFFTPrime(long n, long& w)$/;"	f
IsFinite	deplib/ntl-main/include/NTL/tools.h	/^inline long IsFinite(double *p) { return _ntl_IsFinite(p); }$/;"	f
IsFinite	deplib/ntl-main/src/quad_float1.cpp	/^long IsFinite(quad_float *x)$/;"	f
IsIdent	deplib/ntl-main/src/mat_GF2.cpp	/^long IsIdent(const mat_GF2& A, long n)$/;"	f
IsIdent	deplib/ntl-main/src/mat_GF2E.cpp	/^long IsIdent(const mat_GF2E& A, long n)$/;"	f
IsIdent	deplib/ntl-main/src/mat_RR.cpp	/^long IsIdent(const mat_RR& A, long n)$/;"	f
IsIdent	deplib/ntl-main/src/mat_ZZ.cpp	/^long IsIdent(const mat_ZZ& A, long n)$/;"	f
IsIdent	deplib/ntl-main/src/mat_ZZ_p.cpp	/^long IsIdent(const mat_ZZ_p& A, long n)$/;"	f
IsIdent	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^long IsIdent(const mat_ZZ_pE& A, long n)$/;"	f
IsIdent	deplib/ntl-main/src/mat_lzz_p.cpp	/^long IsIdent(const mat_zz_p& A, long n)$/;"	f
IsIdent	deplib/ntl-main/src/mat_lzz_pE.cpp	/^long IsIdent(const mat_zz_pE& A, long n)$/;"	f
IsMatPrime	deplib/ntl-main/src/MatPrime.cpp	/^long IsMatPrime(long n)$/;"	f	file:
IsOdd	deplib/ntl-main/include/NTL/ZZ.h	/^inline long IsOdd(const ZZ& a)$/;"	f
IsOne	deplib/ntl-main/include/NTL/GF2.h	/^inline long IsOne(GF2 a)$/;"	f
IsOne	deplib/ntl-main/include/NTL/GF2E.h	/^inline long IsOne(const GF2E& a)$/;"	f
IsOne	deplib/ntl-main/include/NTL/ZZ.h	/^inline long IsOne(const ZZ& a)$/;"	f
IsOne	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline long IsOne(const ZZ_p& a)$/;"	f
IsOne	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long IsOne(const ZZ_pE& a)$/;"	f
IsOne	deplib/ntl-main/include/NTL/lzz_p.h	/^inline long IsOne(zz_p a)$/;"	f
IsOne	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long IsOne(const zz_pE& a)$/;"	f
IsOne	deplib/ntl-main/src/GF2EX.cpp	/^long IsOne(const GF2EX& a)$/;"	f
IsOne	deplib/ntl-main/src/GF2X.cpp	/^long IsOne(const GF2X& a)$/;"	f
IsOne	deplib/ntl-main/src/RR.cpp	/^long IsOne(const RR& a)$/;"	f
IsOne	deplib/ntl-main/src/ZZX.cpp	/^long IsOne(const ZZX& a)$/;"	f
IsOne	deplib/ntl-main/src/ZZ_pEX.cpp	/^long IsOne(const ZZ_pEX& a)$/;"	f
IsOne	deplib/ntl-main/src/ZZ_pX.cpp	/^long IsOne(const ZZ_pX& a)$/;"	f
IsOne	deplib/ntl-main/src/lzz_pEX.cpp	/^long IsOne(const zz_pEX& a)$/;"	f
IsOne	deplib/ntl-main/src/lzz_pX.cpp	/^long IsOne(const zz_pX& a)$/;"	f
IsUnitVector	deplib/ntl-main/src/mat_GF2.cpp	/^long IsUnitVector(const vec_GF2& a, long i)$/;"	f	file:
IsWhiteSpace	deplib/ntl-main/src/tools.cpp	/^long IsWhiteSpace(long a)$/;"	f
IsX	deplib/ntl-main/src/GF2EX.cpp	/^long IsX(const GF2EX& a)$/;"	f
IsX	deplib/ntl-main/src/GF2X.cpp	/^long IsX(const GF2X& a)$/;"	f
IsX	deplib/ntl-main/src/ZZX.cpp	/^long IsX(const ZZX& a)$/;"	f
IsX	deplib/ntl-main/src/ZZ_pEX.cpp	/^long IsX(const ZZ_pEX& a)$/;"	f
IsX	deplib/ntl-main/src/ZZ_pX.cpp	/^long IsX(const ZZ_pX& a)$/;"	f
IsX	deplib/ntl-main/src/lzz_pEX.cpp	/^long IsX(const zz_pEX& a)$/;"	f
IsX	deplib/ntl-main/src/lzz_pX.cpp	/^long IsX(const zz_pX& a)$/;"	f
IsZero	deplib/ntl-main/include/NTL/GF2.h	/^inline long IsZero(GF2 a)$/;"	f
IsZero	deplib/ntl-main/include/NTL/GF2E.h	/^inline long IsZero(const GF2E& a)$/;"	f
IsZero	deplib/ntl-main/include/NTL/ZZ.h	/^inline long IsZero(const ZZ& a)$/;"	f
IsZero	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline long IsZero(const ZZ_p& a)$/;"	f
IsZero	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long IsZero(const ZZ_pE& a)$/;"	f
IsZero	deplib/ntl-main/include/NTL/lzz_p.h	/^inline long IsZero(zz_p a)$/;"	f
IsZero	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long IsZero(const zz_pE& a)$/;"	f
IsZero	deplib/ntl-main/src/GF2EX.cpp	/^long IsZero(const GF2EX& a)$/;"	f
IsZero	deplib/ntl-main/src/GF2X.cpp	/^long IsZero(const GF2X& a) $/;"	f
IsZero	deplib/ntl-main/src/RR.cpp	/^long IsZero(const RR& a)$/;"	f
IsZero	deplib/ntl-main/src/ZZX.cpp	/^long IsZero(const ZZX& a)$/;"	f
IsZero	deplib/ntl-main/src/ZZ_pEX.cpp	/^long IsZero(const ZZ_pEX& a)$/;"	f
IsZero	deplib/ntl-main/src/ZZ_pX.cpp	/^long IsZero(const ZZ_pX& a)$/;"	f
IsZero	deplib/ntl-main/src/lzz_pEX.cpp	/^long IsZero(const zz_pEX& a)$/;"	f
IsZero	deplib/ntl-main/src/lzz_pX.cpp	/^long IsZero(const zz_pX& a)$/;"	f
IsZero	deplib/ntl-main/src/mat_GF2.cpp	/^long IsZero(const mat_GF2& a)$/;"	f
IsZero	deplib/ntl-main/src/mat_GF2E.cpp	/^long IsZero(const mat_GF2E& a)$/;"	f
IsZero	deplib/ntl-main/src/mat_RR.cpp	/^long IsZero(const mat_RR& a)$/;"	f
IsZero	deplib/ntl-main/src/mat_ZZ.cpp	/^long IsZero(const mat_ZZ& a)$/;"	f
IsZero	deplib/ntl-main/src/mat_ZZ_p.cpp	/^long IsZero(const mat_ZZ_p& a)$/;"	f
IsZero	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^long IsZero(const mat_ZZ_pE& a)$/;"	f
IsZero	deplib/ntl-main/src/mat_lzz_p.cpp	/^long IsZero(const mat_zz_p& a)$/;"	f
IsZero	deplib/ntl-main/src/mat_lzz_pE.cpp	/^long IsZero(const mat_zz_pE& a)$/;"	f
IsZero	deplib/ntl-main/src/vec_GF2.cpp	/^long IsZero(const vec_GF2& x)$/;"	f
IsZero	deplib/ntl-main/src/vec_GF2E.cpp	/^long IsZero(const vec_GF2E& a)$/;"	f
IsZero	deplib/ntl-main/src/vec_RR.cpp	/^long IsZero(const vec_RR& a)$/;"	f
IsZero	deplib/ntl-main/src/vec_ZZ.cpp	/^long IsZero(const vec_ZZ& a)$/;"	f
IsZero	deplib/ntl-main/src/vec_ZZ_p.cpp	/^long IsZero(const vec_ZZ_p& a)$/;"	f
IsZero	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^long IsZero(const vec_ZZ_pE& a)$/;"	f
IsZero	deplib/ntl-main/src/vec_lzz_p.cpp	/^long IsZero(const vec_zz_p& a)$/;"	f
IsZero	deplib/ntl-main/src/vec_lzz_pE.cpp	/^long IsZero(const vec_zz_pE& a)$/;"	f
IterBuild	deplib/ntl-main/src/GF2EX.cpp	/^void IterBuild(GF2E* a, long n)$/;"	f
IterBuild	deplib/ntl-main/src/ZZ_pEX.cpp	/^void IterBuild(ZZ_pE* a, long n)$/;"	f
IterBuild	deplib/ntl-main/src/ZZ_pX1.cpp	/^void IterBuild(ZZ_p* a, long n)$/;"	f
IterBuild	deplib/ntl-main/src/lzz_pEX.cpp	/^void IterBuild(zz_pE* a, long n)$/;"	f
IterBuild	deplib/ntl-main/src/lzz_pX1.cpp	/^void IterBuild(zz_p* a, long n)$/;"	f
IterComputeDegree	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long IterComputeDegree(const GF2EX& h, const GF2EXModulus& F)$/;"	f
IterComputeDegree	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^long IterComputeDegree(const ZZ_pEX& h, const ZZ_pEXModulus& F)$/;"	f
IterComputeDegree	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^long IterComputeDegree(const zz_pEX& h, const zz_pEXModulus& F)$/;"	f
IterFindFactors	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void IterFindFactors(vec_ZZ_pEX& factors, const ZZ_pEX& f,$/;"	f
IterFindFactors	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void IterFindFactors(vec_zz_pEX& factors, const zz_pEX& f,$/;"	f
IterHalfGCD	deplib/ntl-main/src/GF2EX.cpp	/^void IterHalfGCD(_NTL_GF2EXMatrix& M_out, GF2EX& U, GF2EX& V, long d_red)$/;"	f
IterHalfGCD	deplib/ntl-main/src/GF2X1.cpp	/^void IterHalfGCD(_NTL_GF2XMatrix& M_out, GF2X& U, GF2X& V, long d_red)$/;"	f	file:
IterHalfGCD	deplib/ntl-main/src/ZZ_pEX.cpp	/^void IterHalfGCD(_NTL_ZZ_pEXMatrix& M_out, ZZ_pEX& U, ZZ_pEX& V, long d_red)$/;"	f
IterHalfGCD	deplib/ntl-main/src/ZZ_pX1.cpp	/^void IterHalfGCD(ZZ_pXMatrix& M_out, ZZ_pX& U, ZZ_pX& V, long d_red)$/;"	f
IterHalfGCD	deplib/ntl-main/src/lzz_pEX.cpp	/^void IterHalfGCD(_NTL_zz_pEXMatrix& M_out, zz_pEX& U, zz_pEX& V, long d_red)$/;"	f
IterHalfGCD	deplib/ntl-main/src/lzz_pX1.cpp	/^void IterHalfGCD(zz_pXMatrix& M_out, zz_pX& U, zz_pX& V, long d_red)$/;"	f
IterIrredTest	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long IterIrredTest(const GF2EX& f)$/;"	f
IterIrredTest	deplib/ntl-main/src/GF2XFactoring.cpp	/^long IterIrredTest(const GF2X& f)$/;"	f
IterIrredTest	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^long IterIrredTest(const ZZ_pEX& f)$/;"	f
IterIrredTest	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^long IterIrredTest(const ZZ_pX& f)$/;"	f
IterIrredTest	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^long IterIrredTest(const zz_pEX& f)$/;"	f
IterIrredTest	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^long IterIrredTest(const zz_pX& f)$/;"	f
IterPower	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void IterPower(ZZ_pE& c, const ZZ_pE& a, long n)$/;"	f	file:
IterPower	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void IterPower(zz_pE& c, const zz_pE& a, long n)$/;"	f	file:
IterSqr	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void IterSqr(GF2E& c, const GF2E& a, long n)$/;"	f	file:
Jacobi	deplib/ntl-main/src/ZZ.cpp	/^long Jacobi(const ZZ& aa, const ZZ& nn)$/;"	f
KARSX	deplib/ntl-main/src/lip.cpp	823;"	d	file:
KARSX	deplib/ntl-main/src/lzz_pX.cpp	760;"	d	file:
KARX	deplib/ntl-main/src/ZZ_pX.cpp	21;"	d	file:
KARX	deplib/ntl-main/src/lip.cpp	720;"	d	file:
KARX	deplib/ntl-main/src/lzz_pX.cpp	403;"	d	file:
KarAdd	deplib/ntl-main/src/GF2EX.cpp	/^void KarAdd(GF2X *T, const GF2X *b, long sb)$/;"	f	file:
KarAdd	deplib/ntl-main/src/ZZX.cpp	/^void KarAdd(ZZ *T, const ZZ *b, long sb)$/;"	f	file:
KarAdd	deplib/ntl-main/src/lzz_pX.cpp	/^void KarAdd(zz_p *T, const zz_p *b, long sb)$/;"	f
KarCross	deplib/ntl-main/include/NTL/GF2E.h	/^   long KarCross;$/;"	m	class:GF2EInfoT
KarCross	deplib/ntl-main/include/NTL/GF2E.h	/^static long KarCross() { return GF2EInfo->KarCross; }$/;"	f	class:GF2E
KarFix	deplib/ntl-main/src/GF2EX.cpp	/^void KarFix(GF2X *c, const GF2X *b, long sb, long hsa)$/;"	f	file:
KarFix	deplib/ntl-main/src/ZZX.cpp	/^void KarFix(ZZ *c, const ZZ *b, long sb, long hsa)$/;"	f	file:
KarFix	deplib/ntl-main/src/lzz_pX.cpp	/^void KarFix(zz_p *c, const zz_p *b, long sb, long hsa)$/;"	f
KarFold	deplib/ntl-main/src/GF2EX.cpp	/^void KarFold(GF2X *T, const GF2X *b, long sb, long hsa)$/;"	f	file:
KarFold	deplib/ntl-main/src/ZZX.cpp	/^void KarFold(ZZ *T, const ZZ *b, long sb, long hsa)$/;"	f	file:
KarFold	deplib/ntl-main/src/lzz_pX.cpp	/^void KarFold(zz_p *T, const zz_p *b, long sb, long hsa)$/;"	f
KarMul	deplib/ntl-main/src/GF2EX.cpp	/^void KarMul(GF2X *c, const GF2X *a, $/;"	f	file:
KarMul	deplib/ntl-main/src/GF2X.cpp	/^void KarMul(_ntl_ulong *c, const _ntl_ulong *a, const _ntl_ulong *b, $/;"	f	file:
KarMul	deplib/ntl-main/src/ZZX.cpp	/^void KarMul(ZZ *c, const ZZ *a, $/;"	f	file:
KarMul	deplib/ntl-main/src/ZZX.cpp	/^void KarMul(ZZX& c, const ZZX& a, const ZZX& b)$/;"	f
KarMul	deplib/ntl-main/src/ZZX.cpp	/^void KarMul(ZZ_pX& c, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
KarMul	deplib/ntl-main/src/lzz_pX.cpp	/^void KarMul(zz_p *c, const zz_p *a, long sa, const zz_p *b, long sb, zz_p *stk)$/;"	f
KarMul_long	deplib/ntl-main/src/lzz_pX.cpp	/^void KarMul_long(zz_p *c, const zz_p *a, long sa, const zz_p *b, long sb, zz_p *stk)$/;"	f
KarSqr	deplib/ntl-main/src/ZZX.cpp	/^void KarSqr(ZZ *c, const ZZ *a, long sa, ZZ *stk)$/;"	f	file:
KarSqr	deplib/ntl-main/src/ZZX.cpp	/^void KarSqr(ZZX& c, const ZZX& a)$/;"	f
KarSqr	deplib/ntl-main/src/ZZX.cpp	/^void KarSqr(ZZ_pX& c, const ZZ_pX& a)$/;"	f
KarSqr	deplib/ntl-main/src/lzz_pX.cpp	/^void KarSqr(zz_p *c, const zz_p *a, long sa, zz_p *stk)$/;"	f
KarSqr_long	deplib/ntl-main/src/lzz_pX.cpp	/^void KarSqr_long(zz_p *c, const zz_p *a, long sa, zz_p *stk)$/;"	f
KarSub	deplib/ntl-main/src/ZZX.cpp	/^void KarSub(ZZ *T, const ZZ *b, long sb)$/;"	f	file:
KarSub	deplib/ntl-main/src/lzz_pX.cpp	/^void KarSub(zz_p *T, const zz_p *b, long sb)$/;"	f
KillBig	deplib/ntl-main/include/NTL/GF2X.h	/^void KillBig() { xrep.KillBig(); }$/;"	f	class:GF2X
KillBig	deplib/ntl-main/include/NTL/WordVector.h	/^   void KillBig() { if (MaxLength() > NTL_RELEASE_THRESH) kill(); }$/;"	f	class:WordVector
KillBig	deplib/ntl-main/include/NTL/ZZ.h	/^void KillBig() { if (MaxAlloc() > NTL_RELEASE_THRESH) kill(); }$/;"	f	class:ZZ
KillBig	deplib/ntl-main/include/NTL/ZZ_p.h	/^void KillBig() { _ZZ_p__rep.KillBig(); }$/;"	f	class:ZZ_p
KronMul	deplib/ntl-main/src/GF2EX.cpp	/^void KronMul(GF2EX& x, const GF2EX& a, const GF2EX& b)$/;"	f
KronSubst	deplib/ntl-main/src/GF2EX.cpp	/^void KronSubst(GF2X& aa, const GF2EX& a)$/;"	f
LCOMP	deplib/ntl-main/src/makefile	/^LCOMP= #LSTAT$/;"	m
LDFLAGS	deplib/ntl-main/src/makefile	/^LDFLAGS=$/;"	m
LDLIBS	deplib/ntl-main/src/makefile	/^LDLIBS=-lm$/;"	m
LE	deplib/ntl-main/src/ZZ.cpp	1854;"	d	file:
LIBDIR	deplib/ntl-main/src/makefile	/^LIBDIR=$(PREFIX)\/lib$/;"	m
LIBTOOL	deplib/ntl-main/src/makefile	/^LIBTOOL=libtool$/;"	m
LIBTOOL_LINK_FLAGS	deplib/ntl-main/src/makefile	/^LIBTOOL_LINK_FLAGS=$/;"	m
LIBTOOL_LINK_LIBS	deplib/ntl-main/src/makefile	/^LIBTOOL_LINK_LIBS=$/;"	m
LINK	deplib/ntl-main/src/makefile	/^LINK = $(CXX) $(NTL_INCLUDE) $(CPPFLAGS) $(CXXFLAGS) $(CXXAUTOFLAGS) $(LDFLAGS)$/;"	m
LINUX_S390X	deplib/ntl-main/include/NTL/linux_s390x.h	7;"	d
LINUX_S390X_H	deplib/ntl-main/include/NTL/linux_s390x.h	2;"	d
LLL	deplib/ntl-main/src/LLL.cpp	/^long LLL(ZZ& det, mat_ZZ& B, long a, long b, long verbose)$/;"	f
LLL	deplib/ntl-main/src/LLL.cpp	/^long LLL(ZZ& det, mat_ZZ& B, long verbose)$/;"	f
LLL	deplib/ntl-main/src/LLL.cpp	/^long LLL(ZZ& det, mat_ZZ& B, mat_ZZ& U, long a, long b, long verbose)$/;"	f
LLL	deplib/ntl-main/src/LLL.cpp	/^long LLL(ZZ& det, mat_ZZ& B, mat_ZZ& U, long verbose)$/;"	f
LLL	deplib/ntl-main/src/LLL.cpp	/^long LLL(vec_ZZ& D, mat_ZZ& B, mat_ZZ* U, long a, long b, long verbose)$/;"	f	file:
LLLCheckFct	deplib/ntl-main/include/NTL/LLL.h	/^typedef long (*LLLCheckFct)(const vec_ZZ&); $/;"	t
LLLDumpFile	deplib/ntl-main/src/LLL_FP.cpp	/^NTL_CHEAP_THREAD_LOCAL char *LLLDumpFile = 0;$/;"	v
LLLStatus	deplib/ntl-main/src/LLL_FP.cpp	/^static void LLLStatus(long max_k, double t, long m, const mat_ZZ& B)$/;"	f	file:
LLLStatus	deplib/ntl-main/src/LLL_QP.cpp	/^static void LLLStatus(long max_k, double t, long m, const mat_ZZ& B)$/;"	f	file:
LLLStatus	deplib/ntl-main/src/LLL_RR.cpp	/^static void LLLStatus(long max_k, double t, long m, const mat_ZZ& B)$/;"	f	file:
LLLStatus	deplib/ntl-main/src/LLL_XD.cpp	/^static void LLLStatus(long max_k, double t, long m, const mat_ZZ& B)$/;"	f	file:
LLLStatusInterval	deplib/ntl-main/src/LLL_FP.cpp	/^NTL_CHEAP_THREAD_LOCAL double LLLStatusInterval = 900.0;$/;"	v
LLL_FP	deplib/ntl-main/src/LLL_FP.cpp	/^long LLL_FP(mat_ZZ& B, double delta, long deep, LLLCheckFct check, $/;"	f
LLL_FP	deplib/ntl-main/src/LLL_FP.cpp	/^long LLL_FP(mat_ZZ& B, mat_ZZ& U, double delta, long deep, $/;"	f
LLL_FP	deplib/ntl-main/src/LLL_FP.cpp	/^long LLL_FP(mat_ZZ& B, mat_ZZ* U, double delta, long deep, $/;"	f	file:
LLL_QP	deplib/ntl-main/src/LLL_QP.cpp	/^long LLL_QP(mat_ZZ& B, double delta, long deep, LLLCheckFct check,$/;"	f
LLL_QP	deplib/ntl-main/src/LLL_QP.cpp	/^long LLL_QP(mat_ZZ& B, mat_ZZ& U, double delta, long deep, $/;"	f
LLL_QP	deplib/ntl-main/src/LLL_QP.cpp	/^long LLL_QP(mat_ZZ& B, mat_ZZ* U, quad_float delta, long deep, $/;"	f	file:
LLL_RR	deplib/ntl-main/src/LLL_RR.cpp	/^long LLL_RR(mat_ZZ& B, double delta, long deep, $/;"	f
LLL_RR	deplib/ntl-main/src/LLL_RR.cpp	/^long LLL_RR(mat_ZZ& B, mat_ZZ& U, double delta, long deep, $/;"	f
LLL_RR	deplib/ntl-main/src/LLL_RR.cpp	/^long LLL_RR(mat_ZZ& B, mat_ZZ* U, const RR& delta, long deep, $/;"	f	file:
LLL_XD	deplib/ntl-main/src/LLL_XD.cpp	/^long LLL_XD(mat_ZZ& B, double delta, long deep, $/;"	f
LLL_XD	deplib/ntl-main/src/LLL_XD.cpp	/^long LLL_XD(mat_ZZ& B, mat_ZZ& U, double delta, long deep, $/;"	f
LLL_XD	deplib/ntl-main/src/LLL_XD.cpp	/^long LLL_XD(mat_ZZ& B, mat_ZZ* U, xdouble delta, long deep, $/;"	f	file:
LLL_plus	deplib/ntl-main/src/LLL.cpp	/^long LLL_plus(vec_ZZ& D_out, mat_ZZ& B, long a, long b, long verbose)$/;"	f
LLL_plus	deplib/ntl-main/src/LLL.cpp	/^long LLL_plus(vec_ZZ& D_out, mat_ZZ& B, long verbose)$/;"	f
LLL_plus	deplib/ntl-main/src/LLL.cpp	/^long LLL_plus(vec_ZZ& D_out, mat_ZZ& B, mat_ZZ& U, long a, long b, long verbose)$/;"	f
LLL_plus	deplib/ntl-main/src/LLL.cpp	/^long LLL_plus(vec_ZZ& D_out, mat_ZZ& B, mat_ZZ& U, long verbose)$/;"	f
LOADU_VEC	deplib/ntl-main/src/ZZ.cpp	2979;"	d	file:
LOADU_VEC	deplib/ntl-main/src/ZZ.cpp	3033;"	d	file:
LOADU_VEC_128	deplib/ntl-main/src/ZZ.cpp	2981;"	d	file:
LOADU_VEC_128	deplib/ntl-main/src/ZZ.cpp	3035;"	d	file:
LOAD_VEC	deplib/ntl-main/src/ZZ.cpp	2978;"	d	file:
LOAD_VEC	deplib/ntl-main/src/ZZ.cpp	3032;"	d	file:
LOOP	deplib/ntl-main/src/ZZ.cpp	2236;"	d	file:
LOOP_COUNT	deplib/ntl-main/src/TestGetTime.cpp	15;"	d	file:
LastTime	deplib/ntl-main/src/G_LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double LastTime = 0;$/;"	v	file:
LastTime	deplib/ntl-main/src/G_LLL_QP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double LastTime = 0;$/;"	v	file:
LastTime	deplib/ntl-main/src/G_LLL_RR.cpp	/^static NTL_CHEAP_THREAD_LOCAL double LastTime = 0;$/;"	v	file:
LastTime	deplib/ntl-main/src/G_LLL_XD.cpp	/^static NTL_CHEAP_THREAD_LOCAL double LastTime = 0;$/;"	v	file:
LastTime	deplib/ntl-main/src/LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double LastTime = 0;$/;"	v	file:
LastTime	deplib/ntl-main/src/LLL_QP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double LastTime = 0;$/;"	v	file:
LastTime	deplib/ntl-main/src/LLL_RR.cpp	/^static NTL_CHEAP_THREAD_LOCAL double LastTime = 0;$/;"	v	file:
LastTime	deplib/ntl-main/src/LLL_XD.cpp	/^static NTL_CHEAP_THREAD_LOCAL double LastTime = 0;$/;"	v	file:
LatticeSolve	deplib/ntl-main/src/LLL.cpp	/^long LatticeSolve(vec_ZZ& x, const mat_ZZ& A, const vec_ZZ& y, long reduce)$/;"	f
Lazy	deplib/ntl-main/include/NTL/Lazy.h	/^   Lazy() : initialized(false) { }$/;"	f	class:Lazy
Lazy	deplib/ntl-main/include/NTL/Lazy.h	/^   Lazy(const Lazy& other) : initialized(false)$/;"	f	class:Lazy
Lazy	deplib/ntl-main/include/NTL/Lazy.h	/^class Lazy {$/;"	c
LazyAddMod	deplib/ntl-main/src/FFT.cpp	/^umint_t LazyAddMod(umint_t a, umint_t b, mint_t n)$/;"	f	file:
LazyAddMod	deplib/ntl-main/src/FFT.cpp	976;"	d	file:
LazyAddMod2	deplib/ntl-main/src/FFT.cpp	/^umint_t LazyAddMod2(umint_t a, umint_t b, mint_t n)$/;"	f	file:
LazyAddMod2	deplib/ntl-main/src/FFT.cpp	978;"	d	file:
LazyAddMod4	deplib/ntl-main/src/FFT.cpp	/^LazyAddMod4(umint_t x, umint_t y, mint_t m)$/;"	f	file:
LazyAddMod4	deplib/ntl-main/src/FFT.cpp	/^LazyAddMod4(umint_t x, umint_t y, umint_t m)$/;"	f	file:
LazyAddMod4	deplib/ntl-main/src/FFT.cpp	980;"	d	file:
LazyDoubleMod2	deplib/ntl-main/src/FFT.cpp	/^LazyDoubleMod2(umint_t a, mint_t n)$/;"	f	file:
LazyDoubleMod2	deplib/ntl-main/src/FFT.cpp	982;"	d	file:
LazyDoubleMod4	deplib/ntl-main/src/FFT.cpp	/^LazyDoubleMod4(umint_t a, mint_t n)$/;"	f	file:
LazyDoubleMod4	deplib/ntl-main/src/FFT.cpp	983;"	d	file:
LazyMulModPrecon	deplib/ntl-main/src/FFT.cpp	/^unsigned long LazyMulModPrecon(unsigned long a, unsigned long b, $/;"	f	file:
LazyMulModPrecon	deplib/ntl-main/src/FFT.cpp	972;"	d	file:
LazyMulModPreconQuo	deplib/ntl-main/src/FFT.cpp	/^unsigned long LazyMulModPreconQuo(unsigned long a, unsigned long b, $/;"	f	file:
LazyPrecompFFTMultipliers	deplib/ntl-main/src/FFT.cpp	/^void LazyPrecompFFTMultipliers(long k, mint_t q, mulmod_t qinv, const mint_t *root, const FFTMultipliers& tab)$/;"	f	file:
LazyPrecompFFTMultipliers	deplib/ntl-main/src/FFT.cpp	/^void LazyPrecompFFTMultipliers(long k, mint_t q, mulmod_t qinv, const mint_t *root, const pd_FFTMultipliers& tab)$/;"	f	file:
LazyPrepMulModPrecon	deplib/ntl-main/src/FFT.cpp	/^LazyPrepMulModPrecon(long b, long n, sp_inverse ninv)$/;"	f	file:
LazyPrepMulModPrecon	deplib/ntl-main/src/FFT.cpp	/^unsigned long LazyPrepMulModPrecon(long b, long n, wide_double ninv)$/;"	f	file:
LazyPrepMulModPrecon	deplib/ntl-main/src/FFT.cpp	971;"	d	file:
LazyPrepMulModPreconWithRem	deplib/ntl-main/src/FFT.cpp	/^LazyPrepMulModPreconWithRem(unsigned long& rres, long b, long n, sp_inverse ninv)$/;"	f	file:
LazyPrepMulModPreconWithRem	deplib/ntl-main/src/FFT.cpp	/^unsigned long LazyPrepMulModPreconWithRem(unsigned long& rres, long b, long n, wide_double ninv)$/;"	f	file:
LazyReduce1	deplib/ntl-main/src/FFT.cpp	/^umint_t LazyReduce1(umint_t a, mint_t q)$/;"	f	file:
LazyReduce1	deplib/ntl-main/src/FFT.cpp	974;"	d	file:
LazyReduce2	deplib/ntl-main/src/FFT.cpp	/^umint_t LazyReduce2(umint_t a, mint_t q)$/;"	f	file:
LazyReduce2	deplib/ntl-main/src/FFT.cpp	975;"	d	file:
LazySubMod	deplib/ntl-main/src/FFT.cpp	/^umint_t LazySubMod(umint_t a, umint_t b, mint_t n)$/;"	f	file:
LazySubMod	deplib/ntl-main/src/FFT.cpp	977;"	d	file:
LazySubMod2	deplib/ntl-main/src/FFT.cpp	/^umint_t LazySubMod2(umint_t a, umint_t b, mint_t n)$/;"	f	file:
LazySubMod2	deplib/ntl-main/src/FFT.cpp	979;"	d	file:
LazySubMod4	deplib/ntl-main/src/FFT.cpp	/^LazySubMod4(umint_t x, umint_t y, mint_t m)$/;"	f	file:
LazySubMod4	deplib/ntl-main/src/FFT.cpp	/^LazySubMod4(umint_t x, umint_t y, umint_t m)$/;"	f	file:
LazySubMod4	deplib/ntl-main/src/FFT.cpp	981;"	d	file:
LazyTable	deplib/ntl-main/include/NTL/LazyTable.h	/^   LazyTable() : len(0) { }$/;"	f	class:LazyTable
LazyTable	deplib/ntl-main/include/NTL/LazyTable.h	/^class LazyTable {$/;"	c
LeadCoeff	deplib/ntl-main/src/GF2EX.cpp	/^const GF2E& LeadCoeff(const GF2EX& a)$/;"	f
LeadCoeff	deplib/ntl-main/src/GF2X.cpp	/^const GF2 LeadCoeff(const GF2X& a)$/;"	f
LeadCoeff	deplib/ntl-main/src/ZZX.cpp	/^const ZZ& LeadCoeff(const ZZX& a)$/;"	f
LeadCoeff	deplib/ntl-main/src/ZZ_pEX.cpp	/^const ZZ_pE& LeadCoeff(const ZZ_pEX& a)$/;"	f
LeadCoeff	deplib/ntl-main/src/ZZ_pX.cpp	/^const ZZ_p& LeadCoeff(const ZZ_pX& a)$/;"	f
LeadCoeff	deplib/ntl-main/src/lzz_pEX.cpp	/^const zz_pE& LeadCoeff(const zz_pEX& a)$/;"	f
LeadCoeff	deplib/ntl-main/src/lzz_pX.cpp	/^const zz_p LeadCoeff(const zz_pX& a)$/;"	f
LeftRotate	deplib/ntl-main/src/ZZX1.cpp	/^LeftRotate(ZZ& a, const ZZ& b, long e, const ZZ& p, long n, ZZ& scratch)$/;"	f	file:
LeftRotate_lip_impl	deplib/ntl-main/include/NTL/ZZ.h	/^LeftRotate_lip_impl(ZZ& a, const ZZ& b, long e, const ZZ& p, long n, ZZ& scratch)$/;"	f
LeftShift	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX LeftShift(const GF2EX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X LeftShift(const GF2X& a, long n)$/;"	f
LeftShift	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ LeftShift(const ZZ& a, long k)$/;"	f
LeftShift	deplib/ntl-main/include/NTL/ZZ.h	/^inline void LeftShift(ZZ& x, const ZZ& a, long k)$/;"	f
LeftShift	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX LeftShift(const ZZX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX LeftShift(const ZZ_pEX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX LeftShift(const ZZ_pX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX LeftShift(const zz_pEX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX LeftShift(const zz_pX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/src/GF2EX.cpp	/^void LeftShift(GF2EX& x, const GF2EX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/src/GF2X.cpp	/^void LeftShift(GF2X& c, const GF2X& a, long n)$/;"	f
LeftShift	deplib/ntl-main/src/ZZX1.cpp	/^void LeftShift(ZZX& x, const ZZX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/src/ZZ_pEX.cpp	/^void LeftShift(ZZ_pEX& x, const ZZ_pEX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/src/ZZ_pX1.cpp	/^void LeftShift(ZZ_pX& x, const ZZ_pX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/src/lzz_pEX.cpp	/^void LeftShift(zz_pEX& x, const zz_pEX& a, long n)$/;"	f
LeftShift	deplib/ntl-main/src/lzz_pX1.cpp	/^void LeftShift(zz_pX& x, const zz_pX& a, long n)$/;"	f
Lg2	deplib/ntl-main/src/RR.cpp	/^long Lg2(const RR& x)$/;"	f
LocalGetCurrentRandomStream	deplib/ntl-main/src/ZZ.cpp	/^RandomStream& LocalGetCurrentRandomStream()$/;"	f	file:
LocalInfoT	deplib/ntl-main/src/ZZXFactoring.cpp	/^struct LocalInfoT {$/;"	s	file:
Log2	deplib/ntl-main/src/ZZ.cpp	/^double Log2(double x)$/;"	f	file:
LogicError	deplib/ntl-main/include/NTL/tools.h	/^inline void LogicError(const char *msg) { TerminalError(msg); }$/;"	f
LogicError	deplib/ntl-main/include/NTL/tools.h	/^inline void LogicError(const char *msg) { throw LogicErrorObject(msg); }$/;"	f
LogicErrorObject	deplib/ntl-main/include/NTL/tools.h	/^   LogicErrorObject(const char *msg) : ErrorObject(msg) { }$/;"	f	class:LogicErrorObject
LogicErrorObject	deplib/ntl-main/include/NTL/tools.h	/^class LogicErrorObject : public ErrorObject {$/;"	c
LongDoublePrecision	deplib/ntl-main/src/MakeDesc.cpp	/^long LongDoublePrecision()$/;"	f
LoopHole	deplib/ntl-main/include/NTL/GF2E.h	/^GF2X& LoopHole() { return _GF2E__rep; }$/;"	f	class:GF2E
LoopHole	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ& LoopHole() { return _ZZ_p__rep; }$/;"	f	class:ZZ_p
LoopHole	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pX& LoopHole() { return _ZZ_pE__rep; }$/;"	f	class:ZZ_pE
LoopHole	deplib/ntl-main/include/NTL/lzz_p.h	/^long& LoopHole() { return _zz_p__rep; }$/;"	f	class:zz_p
LoopHole	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pX& LoopHole() { return _zz_pE__rep; }$/;"	f	class:zz_pE
LowLevelPowerMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline void LowLevelPowerMod(ZZ& x, const ZZ& a, const ZZ& e, const ZZ& n)$/;"	f
MAJ	deplib/ntl-main/src/ZZ.cpp	1598;"	d	file:
MAKE10	deplib/ntl-main/src/ZZ.cpp	2170;"	d	file:
MAKE12	deplib/ntl-main/src/ZZ.cpp	2175;"	d	file:
MAKE16	deplib/ntl-main/src/ZZ.cpp	2180;"	d	file:
MAKE4	deplib/ntl-main/src/ZZ.cpp	2155;"	d	file:
MAKE6	deplib/ntl-main/src/ZZ.cpp	2158;"	d	file:
MAKE7	deplib/ntl-main/src/ZZ.cpp	2162;"	d	file:
MAKE8	deplib/ntl-main/src/ZZ.cpp	2166;"	d	file:
MASK64	deplib/ntl-main/include/NTL/linux_s390x.h	14;"	d
MASK8	deplib/ntl-main/src/GF2X1.cpp	264;"	d	file:
MAT_BLK_SZ	deplib/ntl-main/src/mat_lzz_p.cpp	632;"	d	file:
MAX	deplib/ntl-main/src/CheckThreads.cpp	179;"	d	file:
MAX_DBL_INT	deplib/ntl-main/src/mat_lzz_p.cpp	639;"	d	file:
MBL	aes_whitebox_tables.cc	/^constexpr uint32_t MBL[13][16][256] = {$/;"	m	namespace:__anon5	file:
MD	deplib/ntl-main/src/makefile	/^MD=MakeDesc.cpp MakeDescAux.cpp newnames.cpp gen_gmp_aux.cpp gf2x_version_1_2_or_later_required.cpp$/;"	m
MIN	deplib/ntl-main/src/CheckThreads.cpp	178;"	d	file:
MIN_SETL	deplib/ntl-main/src/lip.cpp	1373;"	d	file:
MSA8	deplib/ntl-main/include/NTL/linux_s390x.h	12;"	d
MUL_ADD	deplib/ntl-main/src/mat_lzz_p.cpp	652;"	d	file:
MUL_ADD	deplib/ntl-main/src/mat_lzz_p.cpp	654;"	d	file:
MUL_ADD512	deplib/ntl-main/src/mat_lzz_p.cpp	659;"	d	file:
MakeCloneable	deplib/ntl-main/include/NTL/SmartPtr.h	/^CloneablePtr<T> MakeCloneable(Args&&... args)$/;"	f
MakeCloneableAux	deplib/ntl-main/include/NTL/SmartPtr.h	/^   MakeCloneableAux(Args&&... args) : d(std::forward<Args>(args)...) { }$/;"	f	class:MakeCloneableAux
MakeCloneableAux	deplib/ntl-main/include/NTL/SmartPtr.h	/^class MakeCloneableAux : public CloneablePtrControl {$/;"	c
MakeFacList	deplib/ntl-main/src/ZZXFactoring.cpp	/^void MakeFacList(vec_long& v, long m)$/;"	f	file:
MakeMatrix	deplib/ntl-main/include/NTL/matrix.h	/^void MakeMatrix(Mat<T>& x, const Vec< Vec<T> >& a)  $/;"	f
MakeMatrixStatus	deplib/ntl-main/include/NTL/matrix.h	/^bool MakeMatrixStatus(Mat<T>& x, const Vec< Vec<T> >& a)  $/;"	f
MakeMonic	deplib/ntl-main/src/GF2EX.cpp	/^void MakeMonic(GF2EX& x)$/;"	f
MakeMonic	deplib/ntl-main/src/ZZ_pEX.cpp	/^void MakeMonic(ZZ_pEX& x)$/;"	f
MakeMonic	deplib/ntl-main/src/ZZ_pX1.cpp	/^void MakeMonic(ZZ_pX& x)$/;"	f
MakeMonic	deplib/ntl-main/src/lzz_pEX.cpp	/^void MakeMonic(zz_pEX& x)$/;"	f
MakeMonic	deplib/ntl-main/src/lzz_pX1.cpp	/^void MakeMonic(zz_pX& x)$/;"	f
MakeOdd	deplib/ntl-main/include/NTL/ZZ.h	/^inline long MakeOdd(ZZ& x)$/;"	f
MakeRR	deplib/ntl-main/include/NTL/RR.h	/^inline RR MakeRR(const ZZ& a,  long e)$/;"	f
MakeRR	deplib/ntl-main/src/RR.cpp	/^void MakeRR(RR& z, const ZZ& a,  long e)$/;"	f
MakeRRPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR MakeRRPrec(const ZZ& a, long e, long p)$/;"	f
MakeRRPrec	deplib/ntl-main/src/RR.cpp	/^void MakeRRPrec(RR& x, const ZZ& a, long e, long p)$/;"	f
MakeRaw	deplib/ntl-main/include/NTL/SmartPtr.h	/^T* MakeRaw(Args&&... args) { $/;"	f
MakeRawArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^T *MakeRawArray(long n)$/;"	f
MakeSmart	deplib/ntl-main/include/NTL/SmartPtr.h	/^SmartPtr<T> MakeSmart(Args&&... args)$/;"	f
MakeSmartAux	deplib/ntl-main/include/NTL/SmartPtr.h	/^   MakeSmartAux(Args&&... args) : d(std::forward<Args>(args)...) { }$/;"	f	class:MakeSmartAux
MakeSmartAux	deplib/ntl-main/include/NTL/SmartPtr.h	/^class MakeSmartAux : public SmartPtrControl {$/;"	c
Mat	deplib/ntl-main/include/NTL/matrix.h	/^   Mat() : _mat__numcols(0) { }  $/;"	f	class:Mat
Mat	deplib/ntl-main/include/NTL/matrix.h	/^   Mat(Mat& x, INIT_TRANS_TYPE) :  $/;"	f	class:Mat
Mat	deplib/ntl-main/include/NTL/matrix.h	/^   Mat(Mat&& other) noexcept : Mat() $/;"	f	class:Mat
Mat	deplib/ntl-main/include/NTL/matrix.h	/^Mat<T>::Mat(INIT_SIZE_TYPE, long n, long m) : _mat__numcols(0)$/;"	f	class:Mat
Mat	deplib/ntl-main/include/NTL/matrix.h	/^Mat<T>::Mat(const Mat& src) : $/;"	f	class:Mat
Mat	deplib/ntl-main/include/NTL/matrix.h	/^class Mat {  $/;"	c
MatPrimeInfo	deplib/ntl-main/include/NTL/MatPrime.h	/^struct MatPrimeInfo {$/;"	s
MatPrimeTables	deplib/ntl-main/src/MatPrime.cpp	/^MatPrimeTablesType MatPrimeTables;$/;"	v
MatPrimeTablesType	deplib/ntl-main/include/NTL/MatPrime.h	/^typedef LazyTable<MatPrimeInfo, NTL_MAX_MATPRIMES> MatPrimeTablesType;$/;"	t
MatPrime_crt_helper	deplib/ntl-main/include/NTL/MatPrime.h	/^struct MatPrime_crt_helper {$/;"	s
MatPrime_crt_helper_deleter	deplib/ntl-main/src/MatPrime.cpp	/^void MatPrime_crt_helper_deleter(MatPrime_crt_helper* p)$/;"	f
MatPrime_crt_helper_deleter_policy	deplib/ntl-main/include/NTL/ZZ_p.h	/^   struct MatPrime_crt_helper_deleter_policy {$/;"	s	class:ZZ_pInfoT
MatPrime_crt_helper_info	deplib/ntl-main/include/NTL/ZZ_p.h	/^   Lazy<MatPrime_crt_helper,MatPrime_crt_helper_deleter_policy> MatPrime_crt_helper_info;$/;"	m	class:ZZ_pInfoT
MatPrime_crt_helper_scratch	deplib/ntl-main/include/NTL/MatPrime.h	/^struct MatPrime_crt_helper_scratch {$/;"	s
MatPrime_residue_t	deplib/ntl-main/include/NTL/MatPrime.h	/^typedef int MatPrime_residue_t;$/;"	t
MaxAlloc	deplib/ntl-main/include/NTL/ZZ.h	/^long MaxAlloc() const$/;"	f	class:ZZ
MaxBits	deplib/ntl-main/src/ZZX.cpp	/^long MaxBits(const ZZX& f)$/;"	f
MaxBits	deplib/ntl-main/src/mat_ZZ.cpp	/^long MaxBits(const mat_ZZ& A)$/;"	f	file:
MaxK	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long MaxK;             \/\/ maximum space allocated$/;"	m	class:FFTRep
MaxK	deplib/ntl-main/include/NTL/lzz_pX.h	/^   long MaxK;             \/\/ maximum space allocated$/;"	m	class:fftRep
MaxLength	deplib/ntl-main/include/NTL/WordVector.h	/^   long MaxLength() const $/;"	f	class:WordVector
MaxLength	deplib/ntl-main/include/NTL/vec_GF2.h	/^   long MaxLength() const { return _maxlen >> 1; }  $/;"	f	class:Vec
MaxLength	deplib/ntl-main/include/NTL/vector.h	/^   long MaxLength() const $/;"	f	class:Vec
MaxN	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long MaxN;$/;"	m	class:ZZ_pXModRep
MaxRoot	deplib/ntl-main/include/NTL/ZZ_p.h	/^   long MaxRoot;  $/;"	m	class:ZZ_pFFTInfoT
MaxRoot	deplib/ntl-main/include/NTL/lzz_p.h	/^   long MaxRoot;$/;"	m	class:zz_pInfoT
MaxSize	deplib/ntl-main/src/ZZX1.cpp	/^long MaxSize(const ZZX& a)$/;"	f	file:
MemoryError	deplib/ntl-main/include/NTL/tools.h	/^inline void MemoryError() { TerminalError("out of memory"); }$/;"	f
MemoryError	deplib/ntl-main/include/NTL/tools.h	/^inline void MemoryError() { throw NTL_SNS bad_alloc(); }$/;"	f
MemoryError	deplib/ntl-main/src/CheckThreads.cpp	/^void MemoryError() { TerminalError("out of memory"); }$/;"	f
MillerWitness	deplib/ntl-main/src/ZZ.cpp	/^long MillerWitness(const ZZ& n, const ZZ& x)$/;"	f
MillerWitness_sp	deplib/ntl-main/src/ZZ.cpp	/^long MillerWitness_sp(long n, long x)$/;"	f	file:
MinPolyInternal	deplib/ntl-main/src/GF2X1.cpp	/^void MinPolyInternal(GF2X& h, const GF2X& x, long m)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX MinPolyMod(const GF2EX& g, const GF2EXModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX MinPolyMod(const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X MinPolyMod(const GF2X& g, const GF2XModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X MinPolyMod(const GF2X& g, const GF2XModulus& F, long m)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX MinPolyMod(const ZZX& a, const ZZX& f)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MinPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MinPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX MinPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX MinPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F, long m)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void MinPolyMod(ZZ_pX& h, const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX MinPolyMod(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX MinPolyMod(const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void MinPolyMod(zz_pX& h, const zz_pX& g, const zz_pXModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX MinPolyMod(const zz_pX& g, const zz_pXModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX MinPolyMod(const zz_pX& g, const zz_pXModulus& F, long m)$/;"	f
MinPolyMod	deplib/ntl-main/src/GF2EX.cpp	/^void MinPolyMod(GF2EX& hh, const GF2EX& g, const GF2EXModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/src/GF2EX.cpp	/^void MinPolyMod(GF2EX& hh, const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
MinPolyMod	deplib/ntl-main/src/GF2X1.cpp	/^void MinPolyMod(GF2X& hh, const GF2X& g, const GF2XModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/src/GF2X1.cpp	/^void MinPolyMod(GF2X& hh, const GF2X& g, const GF2XModulus& F, long m)$/;"	f
MinPolyMod	deplib/ntl-main/src/ZZX1.cpp	/^void MinPolyMod(ZZX& gg, const ZZX& a, const ZZX& f)$/;"	f
MinPolyMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void MinPolyMod(ZZ_pEX& hh, const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void MinPolyMod(ZZ_pEX& hh, const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
MinPolyMod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void MinPolyMod(ZZ_pX& hh, const ZZ_pX& g, const ZZ_pXModulus& F, long m) $/;"	f
MinPolyMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void MinPolyMod(zz_pEX& hh, const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
MinPolyMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void MinPolyMod(zz_pEX& hh, const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
MinPolyMod	deplib/ntl-main/src/lzz_pX1.cpp	/^void MinPolyMod(zz_pX& hh, const zz_pX& g, const zz_pXModulus& F, long m)$/;"	f
MinPolySeq	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX MinPolySeq(const vec_GF2E& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X MinPolySeq(const vec_GF2& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MinPolySeq(const vec_ZZ_pE& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX MinPolySeq(const vec_ZZ_p& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX MinPolySeq(const vec_zz_pE& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX MinPolySeq(const vec_zz_p& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/src/GF2EX.cpp	/^void MinPolySeq(GF2EX& h, const vec_GF2E& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/src/GF2X1.cpp	/^void MinPolySeq(GF2X& h, const vec_GF2& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/src/ZZ_pEX.cpp	/^void MinPolySeq(ZZ_pEX& h, const vec_ZZ_pE& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/src/ZZ_pX1.cpp	/^void MinPolySeq(ZZ_pX& h, const vec_ZZ_p& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/src/lzz_pEX.cpp	/^void MinPolySeq(zz_pEX& h, const vec_zz_pE& a, long m)$/;"	f
MinPolySeq	deplib/ntl-main/src/lzz_pX1.cpp	/^void MinPolySeq(zz_pX& h, const vec_zz_p& a, long m)$/;"	f
MinPolyTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2X MinPolyTower(const GF2EX& g, const GF2EXModulus& F)$/;"	f
MinPolyTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2X MinPolyTower(const GF2EX& g, const GF2EXModulus& F,$/;"	f
MinPolyTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void MinPolyTower(GF2X& h, const GF2EX& g, $/;"	f
MinPolyTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pX MinPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
MinPolyTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pX MinPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F,$/;"	f
MinPolyTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void MinPolyTower(ZZ_pX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
MinPolyTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void MinPolyTower(zz_pX& h, const zz_pEX& g, $/;"	f
MinPolyTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pX MinPolyTower(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
MinPolyTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pX MinPolyTower(const zz_pEX& g, const zz_pEXModulus& F,$/;"	f
MinPolyTower	deplib/ntl-main/src/GF2EX.cpp	/^void MinPolyTower(GF2X& hh, const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
MinPolyTower	deplib/ntl-main/src/ZZ_pEX.cpp	/^void MinPolyTower(ZZ_pX& hh, const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
MinPolyTower	deplib/ntl-main/src/lzz_pEX.cpp	/^void MinPolyTower(zz_pX& hh, const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
MinusMModP	deplib/ntl-main/include/NTL/MatPrime.h	/^   ZZ MinusMModP;  \/\/  -M mod p, M = product of primes$/;"	m	struct:MatPrime_crt_helper
MinusMModP	deplib/ntl-main/include/NTL/ZZ_p.h	/^   ZZ MinusMModP;  \/\/  -M mod p, M = product of primes$/;"	m	class:ZZ_pFFTInfoT
MinusMModP	deplib/ntl-main/include/NTL/lzz_p.h	/^   long MinusMModP;  \/\/  -M mod p, M = product of primes$/;"	m	class:zz_pInfoT
MinusMModPpinv	deplib/ntl-main/include/NTL/lzz_p.h	/^   mulmod_precon_t MinusMModPpinv;$/;"	m	class:zz_pInfoT
MixColumns	aes_private.h	/^inline void MixColumns(uint8_t state[16]) {$/;"	f	namespace:__anon2
MixedMul	deplib/ntl-main/src/mat_ZZ.cpp	/^void MixedMul(vec_ZZ& x, const vec_zz_p& a, const mat_ZZ& B)$/;"	f	file:
ModCross	deplib/ntl-main/include/NTL/GF2E.h	/^   long ModCross;$/;"	m	class:GF2EInfoT
ModCross	deplib/ntl-main/include/NTL/GF2E.h	/^static long ModCross() { return GF2EInfo->ModCross; }$/;"	f	class:GF2E
ModCross	deplib/ntl-main/include/NTL/ZZ_pE.h	/^static long ModCross() { return 8; }$/;"	f	class:ZZ_pE
ModCross	deplib/ntl-main/include/NTL/lzz_pE.h	/^static long ModCross() { return 8; }$/;"	f	class:zz_pE
ModularRepBuf	deplib/ntl-main/src/ZZ_pX.cpp	/^vec_long& ModularRepBuf()$/;"	f	file:
ModulusInverse	deplib/ntl-main/include/NTL/lzz_p.h	/^mulmod_t ModulusInverse() const { return ptr->pinv; }$/;"	f	class:zz_pContext
ModulusInverse	deplib/ntl-main/include/NTL/lzz_p.h	/^static mulmod_t ModulusInverse() { return zz_pInfo->pinv; }$/;"	f	class:zz_p
ModulusSize	deplib/ntl-main/include/NTL/ZZ_p.h	/^static long ModulusSize() { return ZZ_pInfo->size; }$/;"	f	class:ZZ_p
Mul1	deplib/ntl-main/src/GF2X.cpp	/^void Mul1(_ntl_ulong *cp, const _ntl_ulong *bp, long sb, _ntl_ulong a)$/;"	f	file:
Mul1_short	deplib/ntl-main/src/GF2X.cpp	/^void Mul1_short(_ntl_ulong *cp, const _ntl_ulong *bp, long sb, _ntl_ulong a)$/;"	f	file:
MulAdd	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble MulAdd(const xdouble& a, const xdouble& b, $/;"	f
MulAdd	deplib/ntl-main/src/mat_ZZ.cpp	/^void MulAdd(vec_ZZ& x, const ZZ& prod, const vec_zz_p& h)$/;"	f	file:
MulAdd	deplib/ntl-main/src/xdouble.cpp	/^void MulAdd(xdouble& z, const xdouble& a, const xdouble& b, const xdouble& c)$/;"	f
MulAddBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void MulAddBlock(double *x, const double *y, const double *z)$/;"	f	file:
MulAddBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void MulAddBlock(long *x, const long *y, const long *z, $/;"	f	file:
MulAddBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void MulAddBlock(unsigned long *x, const unsigned long *y, const unsigned long *z)$/;"	f	file:
MulAddDiv	deplib/ntl-main/src/LLL.cpp	/^static void MulAddDiv(ZZ& c, const ZZ& c1, const ZZ& c2, $/;"	f	file:
MulAddTo	deplib/ntl-main/include/NTL/ZZ.h	/^MulAddTo(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
MulAddTo	deplib/ntl-main/include/NTL/ZZ.h	/^MulAddTo(ZZ& x, const ZZ& a, long b)$/;"	f
MulAux	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL_static(MulAux)(ZZ_p* xp, const ZZ_p* ap, const ZZ_p& t, long n)$/;"	f
MulAux	deplib/ntl-main/src/ZZ_pX.cpp	/^static void MulAux(ZZ_p* xp, const ZZ_p* ap, const ZZ_p& t, long n)$/;"	f	file:
MulByX	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X MulByX(const GF2X& a) $/;"	f
MulByX	deplib/ntl-main/src/GF2X.cpp	/^void MulByX(GF2X& x, const GF2X& a)$/;"	f
MulByXMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX MulByXMod(const GF2EX& a, const GF2EX& f)$/;"	f
MulByXMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X MulByXMod(const GF2X& a, const GF2X& f)$/;"	f
MulByXMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X MulByXMod(const GF2X& a, const GF2XModulus& F)$/;"	f
MulByXMod	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX MulByXMod(const ZZX& a, const ZZX& f)$/;"	f
MulByXMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MulByXMod(const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
MulByXMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX MulByXMod(const ZZ_pX& a,  const ZZ_pX& f)$/;"	f
MulByXMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX MulByXMod(const zz_pEX& a, const zz_pEX& f)$/;"	f
MulByXMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX MulByXMod(const zz_pX& a, const zz_pX& f)$/;"	f
MulByXMod	deplib/ntl-main/src/GF2EX.cpp	/^void MulByXMod(GF2EX& h, const GF2EX& a, const GF2EX& f)$/;"	f
MulByXMod	deplib/ntl-main/src/GF2X1.cpp	/^void MulByXMod(GF2X& c, const GF2X& a, const GF2XModulus& F)$/;"	f
MulByXMod	deplib/ntl-main/src/GF2X1.cpp	/^void MulByXMod(GF2X& h, const GF2X& a, const GF2X& f)$/;"	f
MulByXMod	deplib/ntl-main/src/ZZX1.cpp	/^void MulByXMod(ZZX& h, const ZZX& a, const ZZX& f)$/;"	f
MulByXMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void MulByXMod(ZZ_pEX& h, const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
MulByXMod	deplib/ntl-main/src/ZZ_pX.cpp	/^void MulByXMod(ZZ_pX& h, const ZZ_pX& a, const ZZ_pX& f)$/;"	f
MulByXMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void MulByXMod(zz_pEX& h, const zz_pEX& a, const zz_pEX& f)$/;"	f
MulByXMod	deplib/ntl-main/src/lzz_pX.cpp	/^void MulByXMod(zz_pX& h, const zz_pX& a, const zz_pX& f)$/;"	f
MulByXModAux	deplib/ntl-main/src/GF2EX.cpp	/^void MulByXModAux(GF2EX& h, const GF2EX& a, const GF2EX& f)$/;"	f	file:
MulByXModAux	deplib/ntl-main/src/GF2X1.cpp	/^void MulByXModAux(GF2X& c, const GF2X& a, const GF2X& f)$/;"	f	file:
MulByXModAux	deplib/ntl-main/src/ZZX1.cpp	/^void MulByXModAux(ZZX& h, const ZZX& a, const ZZX& f)$/;"	f	file:
MulByXModAux	deplib/ntl-main/src/ZZ_pEX.cpp	/^void MulByXModAux(ZZ_pEX& h, const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f	file:
MulByXModAux	deplib/ntl-main/src/ZZ_pX.cpp	/^void MulByXModAux(ZZ_pX& h, const ZZ_pX& a, const ZZ_pX& f)$/;"	f	file:
MulByXModAux	deplib/ntl-main/src/lzz_pEX.cpp	/^void MulByXModAux(zz_pEX& h, const zz_pEX& a, const zz_pEX& f)$/;"	f	file:
MulByXModAux	deplib/ntl-main/src/lzz_pX.cpp	/^void MulByXModAux(zz_pX& h, const zz_pX& a, const zz_pX& f)$/;"	f	file:
MulByXModAux1	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL_static(MulByXModAux1)(long n, ZZ_p *hh, const ZZ_p* aa, const ZZ_p *ff, const ZZ_p& z)$/;"	f
MulByXModAux1	deplib/ntl-main/src/ZZ_pX.cpp	/^static void MulByXModAux1(long n, ZZ_p *hh, const ZZ_p* aa, const ZZ_p *ff, const ZZ_p& z)$/;"	f	file:
MulByXPlusY	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void MulByXPlusY(vec_GF2EX& h, const GF2EX& f, const GF2EX& g)$/;"	f	file:
MulByXPlusY	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void MulByXPlusY(vec_ZZ_pEX& h, const ZZ_pEX& f, const ZZ_pEX& g)$/;"	f	file:
MulByXPlusY	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void MulByXPlusY(vec_ZZ_pX& h, const ZZ_pX& f, const ZZ_pX& g)$/;"	f	file:
MulByXPlusY	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void MulByXPlusY(vec_zz_pEX& h, const zz_pEX& f, const zz_pEX& g)$/;"	f	file:
MulByXPlusY	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void MulByXPlusY(vec_zz_pX& h, const zz_pX& f, const zz_pX& g)$/;"	f	file:
MulDivRem	deplib/ntl-main/include/NTL/sp_arith.h	/^long MulDivRem(long& qres, long a, long b, long n,  sp_muldivrem_struct bninv)$/;"	f
MulDivRem	deplib/ntl-main/include/NTL/sp_arith.h	/^long MulDivRem(long& qres, long a, long b, long n, wide_double bninv)$/;"	f
MulMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX MulMod(const GF2EX& a, const GF2EX& b, const GF2EX& f)$/;"	f
MulMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX MulMod(const GF2EX& a, const GF2EX& b, const GF2EXModulus& F)$/;"	f
MulMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X MulMod(const GF2X& a, const GF2X& b, const GF2X& f)$/;"	f
MulMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X MulMod(const GF2X& a, const GF2X& b, const GF2XModulus& F)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ MulMod(const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ MulMod(const ZZ& a, long b, const ZZ& n)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ MulMod(long a, const ZZ& b, const ZZ& n)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline void MulMod(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline void MulMod(ZZ& x, const ZZ& a, long b, const ZZ& n)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline void MulMod(ZZ& x, long a, const ZZ& b, const ZZ& n)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX MulMod(const ZZX& a, const ZZX& b, const ZZX& f)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MulMod(const ZZ_pEX& a, const ZZ_pEX& b, $/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MulMod(const ZZ_pEX& a, const ZZ_pEX& b, const ZZ_pEX& f)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX MulMod(const ZZ_pX& a, const ZZ_pX& b, const ZZ_pX& f)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX MulMod(const ZZ_pX& a, const ZZ_pX& b, const ZZ_pXModulus& F)$/;"	f
MulMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX MulMod(const ZZ_pX& a, const ZZ_pXMultiplier& B,$/;"	f
MulMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX MulMod(const zz_pEX& a, const zz_pEX& b, $/;"	f
MulMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX MulMod(const zz_pEX& a, const zz_pEX& b, const zz_pEX& f)$/;"	f
MulMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX MulMod(const zz_pX& a, const zz_pX& b, const zz_pX& f)$/;"	f
MulMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX MulMod(const zz_pX& a, const zz_pX& b, const zz_pXModulus& F)$/;"	f
MulMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX MulMod(const zz_pX& a, const zz_pXMultiplier& B,$/;"	f
MulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^MulMod(long a, long b, long n, sp_inverse ninv)$/;"	f
MulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^long MulMod(long a, long b, long n)$/;"	f
MulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^long MulMod(long a, long b, long n, wide_double ninv)$/;"	f
MulMod	deplib/ntl-main/src/GF2EX.cpp	/^void MulMod(GF2EX& c, const GF2EX& a, const GF2EX& b, const GF2EXModulus& F)$/;"	f
MulMod	deplib/ntl-main/src/GF2EX.cpp	/^void MulMod(GF2EX& x, const GF2EX& a, const GF2EX& b, const GF2EX& f)$/;"	f
MulMod	deplib/ntl-main/src/GF2X1.cpp	/^void MulMod(GF2X& c, const GF2X& a, const GF2X& b, const GF2X& f)$/;"	f
MulMod	deplib/ntl-main/src/GF2X1.cpp	/^void MulMod(GF2X& c, const GF2X& a, const GF2X& b, const GF2XModulus& F)$/;"	f
MulMod	deplib/ntl-main/src/ZZX1.cpp	/^void MulMod(ZZX& x, const ZZX& a, const ZZX& b, const ZZX& f)$/;"	f
MulMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void MulMod(ZZ_pEX& c, const ZZ_pEX& a, const ZZ_pEX& b, const ZZ_pEXModulus& F)$/;"	f
MulMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void MulMod(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEX& b, const ZZ_pEX& f)$/;"	f
MulMod	deplib/ntl-main/src/ZZ_pX.cpp	/^void MulMod(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b, const ZZ_pX& f)$/;"	f
MulMod	deplib/ntl-main/src/ZZ_pX.cpp	/^void MulMod(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b, const ZZ_pXModulus& F)$/;"	f
MulMod	deplib/ntl-main/src/ZZ_pX.cpp	/^void MulMod(ZZ_pX& x, const ZZ_pX& a, const ZZ_pXMultiplier& B,$/;"	f
MulMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void MulMod(zz_pEX& c, const zz_pEX& a, const zz_pEX& b, const zz_pEXModulus& F)$/;"	f
MulMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void MulMod(zz_pEX& x, const zz_pEX& a, const zz_pEX& b, const zz_pEX& f)$/;"	f
MulMod	deplib/ntl-main/src/lzz_pX.cpp	/^void MulMod(zz_pX& x, const zz_pX& a, const zz_pX& b, const zz_pX& f)$/;"	f
MulMod	deplib/ntl-main/src/lzz_pX.cpp	/^void MulMod(zz_pX& x, const zz_pX& a, const zz_pX& b, const zz_pXModulus& F)$/;"	f
MulMod	deplib/ntl-main/src/lzz_pX.cpp	/^void MulMod(zz_pX& x, const zz_pX& a, const zz_pXMultiplier& B,$/;"	f
MulMod2	deplib/ntl-main/include/NTL/sp_arith.h	/^inline long MulMod2(long a, long b, long n, wide_double bninv)$/;"	f
MulMod2_legacy	deplib/ntl-main/include/NTL/sp_arith.h	/^long MulMod2_legacy(long a, long b, long n, wide_double bninv)$/;"	f
MulModPrecon	deplib/ntl-main/include/NTL/sp_arith.h	/^inline long MulModPrecon(long a, long b, long n, unsigned long bninv)$/;"	f
MulModPrecon	deplib/ntl-main/include/NTL/sp_arith.h	/^inline long MulModPrecon(long a, long b, long n, wide_double bninv)$/;"	f
MulModPreconWithQuo	deplib/ntl-main/include/NTL/sp_arith.h	/^inline long MulModPreconWithQuo(long& qq, long a, long b, long n, wide_double bninv)$/;"	f
MulModPreconWithQuo	deplib/ntl-main/include/NTL/sp_arith.h	/^inline long MulModPreconWithQuo(long& qres, long a, long b, long n, unsigned long bninv)$/;"	f
MulModWithQuo	deplib/ntl-main/include/NTL/sp_arith.h	/^MulModWithQuo(long& qres, long a, long b, long n, sp_inverse ninv)$/;"	f
MulModWithQuo	deplib/ntl-main/include/NTL/sp_arith.h	/^long MulModWithQuo(long& qres, long a, long b, long n, wide_double ninv)$/;"	f
MulPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR MulPrec(const RR& a, const RR& b, long p)$/;"	f
MulPrec	deplib/ntl-main/src/RR.cpp	/^void MulPrec(RR& x, const RR& a, const RR& b, long p)$/;"	f
MulSub	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble MulSub(const xdouble& a, const xdouble& b, $/;"	f
MulSub	deplib/ntl-main/src/xdouble.cpp	/^void MulSub(xdouble& z, const xdouble& a, const xdouble& b, const xdouble& c)$/;"	f
MulSubDiv	deplib/ntl-main/src/LLL.cpp	/^static void MulSubDiv(ZZ& c, const ZZ& c1, const ZZ& c2, $/;"	f	file:
MulSubFrom	deplib/ntl-main/include/NTL/ZZ.h	/^MulSubFrom(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
MulSubFrom	deplib/ntl-main/include/NTL/ZZ.h	/^MulSubFrom(ZZ& x, const ZZ& a, long b)$/;"	f
MulSubFrom	deplib/ntl-main/src/LLL.cpp	/^static void MulSubFrom(vec_ZZ& c, const vec_ZZ& c2, const ZZ& x)$/;"	f	file:
MulSubFrom	deplib/ntl-main/src/LLL.cpp	/^static void MulSubFrom(vec_ZZ& c, const vec_ZZ& c2, long x)$/;"	f	file:
MulTab	deplib/ntl-main/src/FFT.cpp	/^   FFTMultipliers MulTab;$/;"	m	class:FFTMulTabs	file:
MulTrunc	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX MulTrunc(const GF2EX& a, const GF2EX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X MulTrunc(const GF2X& a, const GF2X& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX MulTrunc(const ZZX& a, const ZZX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX MulTrunc(const ZZ_pEX& a, const ZZ_pEX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX MulTrunc(const ZZ_pX& a, const ZZ_pX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX MulTrunc(const zz_pEX& a, const zz_pEX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX MulTrunc(const zz_pX& a, const zz_pX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/src/GF2EX.cpp	/^void MulTrunc(GF2EX& x, const GF2EX& a, const GF2EX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/src/GF2X1.cpp	/^void MulTrunc(GF2X& c, const GF2X& a, const GF2X& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/src/ZZX1.cpp	/^void MulTrunc(ZZX& x, const ZZX& a, const ZZX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/src/ZZ_pEX.cpp	/^void MulTrunc(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/src/ZZ_pX1.cpp	/^void MulTrunc(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/src/lzz_pEX.cpp	/^void MulTrunc(zz_pEX& x, const zz_pEX& a, const zz_pEX& b, long n)$/;"	f
MulTrunc	deplib/ntl-main/src/lzz_pX1.cpp	/^void MulTrunc(zz_pX& x, const zz_pX& a, const zz_pX& b, long n)$/;"	f
MultiLift	deplib/ntl-main/src/ZZXFactoring.cpp	/^void MultiLift(vec_ZZX& A, const vec_zz_pX& a, const ZZX& f, long e,$/;"	f
MultiThreadedGenGermainPrime	deplib/ntl-main/src/ZZ.cpp	/^void MultiThreadedGenGermainPrime(ZZ& n, long k, long err)$/;"	f
MultiThreadedRandomPrime	deplib/ntl-main/src/ZZ.cpp	/^void MultiThreadedRandomPrime(ZZ& n, long l, long NumTrials)$/;"	f	file:
MustAlloc	deplib/ntl-main/src/lip.cpp	/^inline long MustAlloc(_ntl_gbigint c, long len)  $/;"	f	file:
MustRestore	deplib/ntl-main/include/NTL/GF2E.h	/^bool MustRestore;$/;"	m	class:GF2EBak
MustRestore	deplib/ntl-main/include/NTL/ZZ_p.h	/^bool MustRestore;$/;"	m	class:ZZ_pBak
MustRestore	deplib/ntl-main/include/NTL/ZZ_pE.h	/^bool MustRestore;$/;"	m	class:ZZ_pEBak
MustRestore	deplib/ntl-main/include/NTL/lzz_p.h	/^bool MustRestore;$/;"	m	class:zz_pBak
MustRestore	deplib/ntl-main/include/NTL/lzz_pE.h	/^bool MustRestore;$/;"	m	class:zz_pEBak
MutexProxy	deplib/ntl-main/include/NTL/thread.h	/^   MutexProxy() { }$/;"	f	class:MutexProxy
MutexProxy	deplib/ntl-main/include/NTL/thread.h	/^class MutexProxy { $/;"	c
N	deplib/ntl-main/src/lip.cpp	/^   _ntl_gbigint_wrapped N;$/;"	m	class:_ntl_reduce_struct_montgomery	file:
N	deplib/ntl-main/src/lip.cpp	/^   _ntl_gbigint_wrapped N;$/;"	m	class:_ntl_reduce_struct_plain	file:
NDFromFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(NDFromFFTRep)(ZZ_pX& x, const FFTRep& y, long lo, long hi, FFTRep& z)$/;"	f
NDFromFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void NDFromFFTRep(ZZ_pX& x, FFTRep& y, long lo, long hi)$/;"	f
NDFromFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void NDFromFFTRep(ZZ_pX& x, const FFTRep& y, long lo, long hi, FFTRep& z)$/;"	f
NDFromfftRep	deplib/ntl-main/src/lzz_pX.cpp	/^void NDFromfftRep(zz_pX& x, const fftRep& y, long lo, long hi, fftRep& z)$/;"	f
NDFromfftRep	deplib/ntl-main/src/lzz_pX.cpp	/^void NDFromfftRep(zz_pX& x, fftRep& y, long lo, long hi)$/;"	f
NOCONTRACT	deplib/ntl-main/src/makefile	/^NOCONTRACT=-ffp-contract=off -DNTL_CONTRACTION_FIXED$/;"	m
NONCE	deplib/ntl-main/src/ZZ.cpp	2973;"	d	file:
NONCE	deplib/ntl-main/src/ZZ.cpp	3027;"	d	file:
NO_INLINE	deplib/ntl-main/src/quad_float.cpp	95;"	d	file:
NTL	deplib/ntl-main/src/GF2EXDivCross.cpp	/^namespace NTL {$/;"	n	file:
NTL	deplib/ntl-main/src/GF2EXGCDCross.cpp	/^namespace NTL {$/;"	n	file:
NTL	deplib/ntl-main/src/GF2EXKarCross.cpp	/^namespace NTL {$/;"	n	file:
NTL	deplib/ntl-main/src/GF2EXModCross.cpp	/^namespace NTL {$/;"	n	file:
NTL	deplib/ntl-main/src/ZZ_pXTest.cpp	/^namespace NTL {$/;"	n	file:
NTL	deplib/ntl-main/src/lzz_pXTest.cpp	/^namespace NTL {$/;"	n	file:
NTLThreadPool_ptr	deplib/ntl-main/src/BasicThreadPool.cpp	/^NTL_CHEAP_THREAD_LOCAL BasicThreadPool *NTLThreadPool_ptr = 0;$/;"	v
NTL_ALIGNED_LOCAL_ARRAY	deplib/ntl-main/include/NTL/ctools.h	502;"	d
NTL_ALT1_BB_MUL_CODE0	deplib/ntl-main/include/NTL/mach_desc.h	610;"	d
NTL_ALT1_BB_MUL_CODE1	deplib/ntl-main/include/NTL/mach_desc.h	653;"	d
NTL_ALT1_BB_MUL_CODE2	deplib/ntl-main/include/NTL/mach_desc.h	702;"	d
NTL_ALT1_HALF_BB_MUL_CODE0	deplib/ntl-main/include/NTL/mach_desc.h	797;"	d
NTL_ALT1_SHORT_BB_MUL_CODE1	deplib/ntl-main/include/NTL/mach_desc.h	751;"	d
NTL_ALT_BB_MUL_CODE0	deplib/ntl-main/include/NTL/mach_desc.h	244;"	d
NTL_ALT_BB_MUL_CODE1	deplib/ntl-main/include/NTL/mach_desc.h	317;"	d
NTL_ALT_BB_MUL_CODE2	deplib/ntl-main/include/NTL/mach_desc.h	396;"	d
NTL_ALT_HALF_BB_MUL_CODE0	deplib/ntl-main/include/NTL/mach_desc.h	551;"	d
NTL_ALT_SHORT_BB_MUL_CODE1	deplib/ntl-main/include/NTL/mach_desc.h	475;"	d
NTL_ALWAYS_INLINE	deplib/ntl-main/include/NTL/tools.h	440;"	d
NTL_ALWAYS_INLINE	deplib/ntl-main/include/NTL/tools.h	445;"	d
NTL_ARGTYPE	deplib/ntl-main/include/NTL/SmartPtr.h	813;"	d
NTL_ARGTYPES	deplib/ntl-main/include/NTL/SmartPtr.h	814;"	d
NTL_ARITH_RIGHT_SHIFT	deplib/ntl-main/include/NTL/mach_desc.h	11;"	d
NTL_AVX512_BYTE_ALIGN	deplib/ntl-main/include/NTL/ctools.h	512;"	d
NTL_AVX512_LOCAL_ARRAY	deplib/ntl-main/include/NTL/ctools.h	514;"	d
NTL_AVX_BYTE_ALIGN	deplib/ntl-main/include/NTL/ctools.h	507;"	d
NTL_AVX_DBL_ALIGN	deplib/ntl-main/include/NTL/ctools.h	508;"	d
NTL_AVX_LOCAL_ARRAY	deplib/ntl-main/include/NTL/ctools.h	510;"	d
NTL_BASIC_MALLOC	deplib/ntl-main/include/NTL/ctools.h	214;"	d
NTL_BASIC_SNS_MALLOC	deplib/ntl-main/include/NTL/ctools.h	240;"	d
NTL_BB_MUL1_BITS	deplib/ntl-main/include/NTL/mach_desc.h	824;"	d
NTL_BB_MUL_CODE0	deplib/ntl-main/include/NTL/mach_desc.h	28;"	d
NTL_BB_MUL_CODE1	deplib/ntl-main/include/NTL/mach_desc.h	71;"	d
NTL_BB_MUL_CODE2	deplib/ntl-main/include/NTL/mach_desc.h	120;"	d
NTL_BB_REV_CODE	deplib/ntl-main/include/NTL/mach_desc.h	841;"	d
NTL_BB_SQR_CODE	deplib/ntl-main/include/NTL/mach_desc.h	828;"	d
NTL_BIG_POINTERS	deplib/ntl-main/include/NTL/mach_desc.h	23;"	d
NTL_BITS_PER_INT	deplib/ntl-main/include/NTL/mach_desc.h	9;"	d
NTL_BITS_PER_INT32	deplib/ntl-main/include/NTL/ctools.h	123;"	d
NTL_BITS_PER_INT32	deplib/ntl-main/include/NTL/ctools.h	131;"	d
NTL_BITS_PER_LIMB_T	deplib/ntl-main/include/NTL/ZZ_limbs.h	21;"	d
NTL_BITS_PER_LIMB_T	deplib/ntl-main/include/NTL/gmp_aux.h	2;"	d
NTL_BITS_PER_LIMB_T	deplib/ntl-main/include/NTL/lip.h	128;"	d
NTL_BITS_PER_LONG	deplib/ntl-main/include/NTL/mach_desc.h	5;"	d
NTL_BITS_PER_NONCE	deplib/ntl-main/include/NTL/ZZ.h	1178;"	d
NTL_BITS_PER_NONCE	deplib/ntl-main/include/NTL/ZZ.h	1180;"	d
NTL_BITS_PER_SIZE_T	deplib/ntl-main/include/NTL/mach_desc.h	10;"	d
NTL_BasicThreadPool__H	deplib/ntl-main/include/NTL/BasicThreadPool.h	3;"	d
NTL_CHEAP_THREAD_LOCAL	deplib/ntl-main/include/NTL/ctools.h	342;"	d
NTL_CHEAP_THREAD_LOCAL	deplib/ntl-main/include/NTL/ctools.h	344;"	d
NTL_CHEAP_THREAD_LOCAL	deplib/ntl-main/include/NTL/ctools.h	350;"	d
NTL_CHEAP_THREAD_LOCAL	deplib/ntl-main/src/CheckThreads.cpp	27;"	d	file:
NTL_CHEAP_THREAD_LOCAL	deplib/ntl-main/src/CheckThreads.cpp	29;"	d	file:
NTL_CLEAN_PTR	deplib/ntl-main/include/NTL/config.h	207;"	d
NTL_CLIENT	deplib/ntl-main/include/NTL/tools.h	93;"	d
NTL_CLOSE_NNS	deplib/ntl-main/include/NTL/tools.h	64;"	d
NTL_CLOSE_NNS	deplib/ntl-main/include/NTL/tools.h	84;"	d
NTL_CRT_ALTCODE	deplib/ntl-main/include/NTL/config.h	455;"	d
NTL_CSR_DOWN	deplib/ntl-main/src/pd_FFT.cpp	40;"	d	file:
NTL_CSR_MASK	deplib/ntl-main/src/pd_FFT.cpp	43;"	d	file:
NTL_CSR_NEAREST	deplib/ntl-main/src/pd_FFT.cpp	39;"	d	file:
NTL_CSR_TRUNC	deplib/ntl-main/src/pd_FFT.cpp	42;"	d	file:
NTL_CSR_UP	deplib/ntl-main/src/pd_FFT.cpp	41;"	d	file:
NTL_CXX_STANDARD	deplib/ntl-main/include/NTL/ctools.h	27;"	d
NTL_CXX_STANDARD	deplib/ntl-main/include/NTL/ctools.h	29;"	d
NTL_CXX_STANDARD	deplib/ntl-main/include/NTL/ctools.h	31;"	d
NTL_DECLARE_RELOCATABLE	deplib/ntl-main/include/NTL/tools.h	1163;"	d
NTL_DECLARE_RELOCATABLE_WHEN	deplib/ntl-main/include/NTL/pair.h	/^template<class S, class T> NTL_DECLARE_RELOCATABLE_WHEN((Pair<S,T>*))$/;"	f
NTL_DECLARE_RELOCATABLE_WHEN	deplib/ntl-main/include/NTL/tools.h	1045;"	d
NTL_DECLARE_RELOCATABLE_WHEN	deplib/ntl-main/include/NTL/tools.h	1150;"	d
NTL_DEFAULT	deplib/ntl-main/include/NTL/tools.h	1175;"	d
NTL_DEFAULT	deplib/ntl-main/include/NTL/tools.h	1179;"	d
NTL_DEFAULT_ALIGN	deplib/ntl-main/include/NTL/ctools.h	517;"	d
NTL_DEFINE_COPIED_MAKE	deplib/ntl-main/include/NTL/SmartPtr.h	1304;"	d
NTL_DEFINE_MAKECLONEABLE	deplib/ntl-main/include/NTL/SmartPtr.h	916;"	d
NTL_DEFINE_MAKERAW	deplib/ntl-main/include/NTL/SmartPtr.h	948;"	d
NTL_DEFINE_MAKESMART	deplib/ntl-main/include/NTL/SmartPtr.h	872;"	d
NTL_DEFINE_MAKESMART	deplib/ntl-main/include/NTL/SmartPtr.h	888;"	d
NTL_DEFINE_OPTIONAL_VAL_MAKE	deplib/ntl-main/include/NTL/SmartPtr.h	1486;"	d
NTL_DEFINE_SCALAR_MOVE	deplib/ntl-main/include/NTL/ctools.h	415;"	d
NTL_DEFINE_SMART_CONSTRUCTOR	deplib/ntl-main/include/NTL/SmartPtr.h	860;"	d
NTL_DEFINE_SWAP	deplib/ntl-main/include/NTL/ctools.h	380;"	d
NTL_DEFINE_UNIQUE_MAKE	deplib/ntl-main/include/NTL/SmartPtr.h	1119;"	d
NTL_DETAILS_PTHREAD	deplib/ntl-main/include/NTL/tools.h	641;"	d
NTL_DETAILS_PTHREAD	deplib/ntl-main/src/CheckThreads.cpp	33;"	d	file:
NTL_DISABLE_MOVE_ASSIGN	deplib/ntl-main/include/NTL/config.h	159;"	d
NTL_DOUBLE_PRECISION	deplib/ntl-main/include/NTL/mach_desc.h	14;"	d
NTL_EFF_BB_MUL_CODE0	deplib/ntl-main/src/GF2X.cpp	533;"	d	file:
NTL_EFF_BB_MUL_CODE0	deplib/ntl-main/src/GF2X.cpp	541;"	d	file:
NTL_EFF_BB_MUL_CODE0	deplib/ntl-main/src/GF2X.cpp	549;"	d	file:
NTL_EFF_BB_MUL_CODE1	deplib/ntl-main/src/GF2X.cpp	534;"	d	file:
NTL_EFF_BB_MUL_CODE1	deplib/ntl-main/src/GF2X.cpp	542;"	d	file:
NTL_EFF_BB_MUL_CODE1	deplib/ntl-main/src/GF2X.cpp	550;"	d	file:
NTL_EFF_BB_MUL_CODE2	deplib/ntl-main/src/GF2X.cpp	535;"	d	file:
NTL_EFF_BB_MUL_CODE2	deplib/ntl-main/src/GF2X.cpp	543;"	d	file:
NTL_EFF_BB_MUL_CODE2	deplib/ntl-main/src/GF2X.cpp	551;"	d	file:
NTL_EFF_HALF_BB_MUL_CODE0	deplib/ntl-main/src/GF2X.cpp	537;"	d	file:
NTL_EFF_HALF_BB_MUL_CODE0	deplib/ntl-main/src/GF2X.cpp	545;"	d	file:
NTL_EFF_HALF_BB_MUL_CODE0	deplib/ntl-main/src/GF2X.cpp	553;"	d	file:
NTL_EFF_SHORT_BB_MUL_CODE1	deplib/ntl-main/src/GF2X.cpp	536;"	d	file:
NTL_EFF_SHORT_BB_MUL_CODE1	deplib/ntl-main/src/GF2X.cpp	544;"	d	file:
NTL_EFF_SHORT_BB_MUL_CODE1	deplib/ntl-main/src/GF2X.cpp	552;"	d	file:
NTL_EMPTY_ARG	deplib/ntl-main/include/NTL/tools.h	750;"	d
NTL_EMPTY_ARG	deplib/ntl-main/src/CheckThreads.cpp	138;"	d	file:
NTL_END_IMPL	deplib/ntl-main/include/NTL/tools.h	75;"	d
NTL_END_IMPL	deplib/ntl-main/include/NTL/tools.h	89;"	d
NTL_EXEC_DIVIDE	deplib/ntl-main/include/NTL/BasicThreadPool.h	764;"	d
NTL_EXEC_INDEX	deplib/ntl-main/include/NTL/BasicThreadPool.h	740;"	d
NTL_EXEC_INDEX_END	deplib/ntl-main/include/NTL/BasicThreadPool.h	746;"	d
NTL_EXEC_RANGE	deplib/ntl-main/include/NTL/BasicThreadPool.h	718;"	d
NTL_EXEC_RANGE_END	deplib/ntl-main/include/NTL/BasicThreadPool.h	724;"	d
NTL_EXT_DOUBLE	deplib/ntl-main/include/NTL/mach_desc.h	21;"	d
NTL_FAKE_NOEXCEPT	deplib/ntl-main/include/NTL/ctools.h	41;"	d
NTL_FAKE_NOEXCEPT	deplib/ntl-main/include/NTL/ctools.h	43;"	d
NTL_FAKE_NOEXCEPT	deplib/ntl-main/include/NTL/ctools.h	49;"	d
NTL_FDOUBLE_PRECISION	deplib/ntl-main/include/NTL/mach_desc.h	15;"	d
NTL_FFTFudge	deplib/ntl-main/include/NTL/FFT.h	15;"	d
NTL_FFTMaxRoot	deplib/ntl-main/include/NTL/FFT.h	28;"	d
NTL_FFTMaxRootBnd	deplib/ntl-main/include/NTL/FFT.h	23;"	d
NTL_FFT_BIGTAB	deplib/ntl-main/include/NTL/config.h	397;"	d
NTL_FFT_BIGTAB_LIMIT	deplib/ntl-main/src/FFT.cpp	246;"	d	file:
NTL_FFT_BIGTAB_MAXROOT	deplib/ntl-main/src/FFT.cpp	247;"	d	file:
NTL_FFT_BIGTAB_MINROOT	deplib/ntl-main/src/FFT.cpp	248;"	d	file:
NTL_FFT_LAZYMUL	deplib/ntl-main/include/NTL/config.h	410;"	d
NTL_FFT_LAZYMUL	deplib/ntl-main/src/FFT.cpp	512;"	d	file:
NTL_FFT_RDUP	deplib/ntl-main/include/NTL/FFT_impl.h	21;"	d
NTL_FFT_USEBUF	deplib/ntl-main/src/FFT.cpp	530;"	d	file:
NTL_FFT__H	deplib/ntl-main/include/NTL/FFT.h	3;"	d
NTL_FFT_impl__H	deplib/ntl-main/include/NTL/FFT_impl.h	3;"	d
NTL_FILE_THRESH	deplib/ntl-main/include/NTL/tools.h	155;"	d
NTL_FMA_DETECTED	deplib/ntl-main/include/NTL/mach_desc.h	22;"	d
NTL_FMP_OUTER_LOOP	deplib/ntl-main/src/lzz_pX.cpp	1539;"	d	file:
NTL_FMR_LOOP_BODY	deplib/ntl-main/src/lzz_pX.cpp	1527;"	d	file:
NTL_FOREACH_ARG	deplib/ntl-main/include/NTL/SmartPtr.h	805;"	d
NTL_FOREACH_ARG1	deplib/ntl-main/include/NTL/SmartPtr.h	808;"	d
NTL_FRADIX	deplib/ntl-main/include/NTL/lip.h	124;"	d
NTL_FRADIX_INV	deplib/ntl-main/include/NTL/lip.h	108;"	d
NTL_FRADIX_INV	deplib/ntl-main/include/NTL/lip.h	125;"	d
NTL_FacVec__H	deplib/ntl-main/include/NTL/FacVec.h	3;"	d
NTL_GAP_BITS	deplib/ntl-main/src/lip.cpp	7279;"	d	file:
NTL_GAP_BITS	deplib/ntl-main/src/lip.cpp	7285;"	d	file:
NTL_GAP_BITS	deplib/ntl-main/src/lip.cpp	7286;"	d	file:
NTL_GEXEC_RANGE	deplib/ntl-main/include/NTL/BasicThreadPool.h	729;"	d
NTL_GEXEC_RANGE_END	deplib/ntl-main/include/NTL/BasicThreadPool.h	735;"	d
NTL_GF2EXFactoring__H	deplib/ntl-main/include/NTL/GF2EXFactoring.h	4;"	d
NTL_GF2EX_HalfGCD_CROSSOVER	deplib/ntl-main/src/GF2EX.cpp	1442;"	d	file:
NTL_GF2EX__H	deplib/ntl-main/include/NTL/GF2EX.h	4;"	d
NTL_GF2E__H	deplib/ntl-main/include/NTL/GF2E.h	4;"	d
NTL_GF2XFactoring__H	deplib/ntl-main/include/NTL/GF2XFactoring.h	2;"	d
NTL_GF2XRegister	deplib/ntl-main/include/NTL/GF2X.h	803;"	d
NTL_GF2XVec__H	deplib/ntl-main/include/NTL/GF2XVec.h	2;"	d
NTL_GF2X_ALTCODE1	deplib/ntl-main/include/NTL/config.h	492;"	d
NTL_GF2X_BERMASS_CROSSOVER	deplib/ntl-main/src/GF2X1.cpp	31;"	d	file:
NTL_GF2X_GCD_CROSSOVER	deplib/ntl-main/src/GF2X1.cpp	29;"	d	file:
NTL_GF2X_HalfGCD_CROSSOVER	deplib/ntl-main/src/GF2X1.cpp	33;"	d	file:
NTL_GF2X_LIB	deplib/ntl-main/src/GF2X.cpp	8;"	d	file:
NTL_GF2X_LIB	deplib/ntl-main/src/GF2X1.cpp	14;"	d	file:
NTL_GF2X__H	deplib/ntl-main/include/NTL/GF2X.h	3;"	d
NTL_GF2__H	deplib/ntl-main/include/NTL/GF2.h	3;"	d
NTL_GMP_LIP	deplib/ntl-main/include/NTL/config.h	101;"	d
NTL_GNUC_INTEL	deplib/ntl-main/include/NTL/ctools.h	13;"	d
NTL_HALF_BB_MUL_CODE0	deplib/ntl-main/include/NTL/mach_desc.h	215;"	d
NTL_HAVE_AES_NI	deplib/ntl-main/include/NTL/HAVE_AES_NI.h	2;"	d
NTL_HAVE_ALIGNED_ARRAY	deplib/ntl-main/include/NTL/HAVE_ALIGNED_ARRAY.h	2;"	d
NTL_HAVE_ALIGNED_ARRAY	deplib/ntl-main/src/CheckALIGNED_ARRAY.cpp	3;"	d	file:
NTL_HAVE_AVX	deplib/ntl-main/include/NTL/HAVE_AVX.h	2;"	d
NTL_HAVE_AVX2	deplib/ntl-main/include/NTL/HAVE_AVX2.h	2;"	d
NTL_HAVE_AVX512F	deplib/ntl-main/src/mat_lzz_p.cpp	629;"	d	file:
NTL_HAVE_BUILTIN_CLZL	deplib/ntl-main/include/NTL/HAVE_BUILTIN_CLZL.h	2;"	d
NTL_HAVE_CHRONO_TIME	deplib/ntl-main/include/NTL/HAVE_CHRONO_TIME.h	2;"	d
NTL_HAVE_COPY_TRAITS2	deplib/ntl-main/include/NTL/HAVE_COPY_TRAITS2.h	2;"	d
NTL_HAVE_FMA	deplib/ntl-main/include/NTL/HAVE_FMA.h	2;"	d
NTL_HAVE_LL_TYPE	deplib/ntl-main/include/NTL/HAVE_LL_TYPE.h	2;"	d
NTL_HAVE_LL_TYPE	deplib/ntl-main/include/NTL/ctools.h	20;"	d
NTL_HAVE_LL_TYPE	deplib/ntl-main/src/CheckLL_TYPE.cpp	3;"	d	file:
NTL_HAVE_MULMOD_T	deplib/ntl-main/include/NTL/sp_arith.h	39;"	d
NTL_HAVE_PCLMUL	deplib/ntl-main/include/NTL/HAVE_PCLMUL.h	2;"	d
NTL_HAVE_POSIX_TIME	deplib/ntl-main/include/NTL/HAVE_POSIX_TIME.h	2;"	d
NTL_HAVE_SP_LL_ROUTINES	deplib/ntl-main/include/NTL/sp_arith.h	1005;"	d
NTL_HAVE_SSSE3	deplib/ntl-main/include/NTL/HAVE_SSSE3.h	2;"	d
NTL_HNF__H	deplib/ntl-main/include/NTL/HNF.h	3;"	d
NTL_IMPORT	deplib/ntl-main/include/NTL/BasicThreadPool.h	759;"	d
NTL_IMPORT_FROM_STD	deplib/ntl-main/include/NTL/tools.h	40;"	d
NTL_INCLUDE	deplib/ntl-main/src/makefile	/^NTL_INCLUDE = -I..\/include -I.$/;"	m
NTL_INIT_DIVIDE	deplib/ntl-main/include/NTL/BasicThreadPool.h	762;"	d
NTL_INLINE	deplib/ntl-main/src/GF2X.cpp	20;"	d	file:
NTL_INLINE	deplib/ntl-main/src/GF2X.cpp	33;"	d	file:
NTL_INPUT_CHECK_ERR	deplib/ntl-main/include/NTL/tools.h	139;"	d
NTL_INPUT_CHECK_RET	deplib/ntl-main/include/NTL/tools.h	146;"	d
NTL_INPUT_ERROR	deplib/ntl-main/include/NTL/tools.h	118;"	d
NTL_KEEP_NONZERO_0	deplib/ntl-main/include/NTL/SmartPtr.h	794;"	d
NTL_KEEP_NONZERO_1	deplib/ntl-main/include/NTL/SmartPtr.h	795;"	d
NTL_KEEP_NONZERO_2	deplib/ntl-main/include/NTL/SmartPtr.h	796;"	d
NTL_KEEP_NONZERO_3	deplib/ntl-main/include/NTL/SmartPtr.h	797;"	d
NTL_KEEP_NONZERO_4	deplib/ntl-main/include/NTL/SmartPtr.h	798;"	d
NTL_KEEP_NONZERO_5	deplib/ntl-main/include/NTL/SmartPtr.h	799;"	d
NTL_KEEP_NONZERO_6	deplib/ntl-main/include/NTL/SmartPtr.h	800;"	d
NTL_KEEP_NONZERO_7	deplib/ntl-main/include/NTL/SmartPtr.h	801;"	d
NTL_KEEP_NONZERO_8	deplib/ntl-main/include/NTL/SmartPtr.h	802;"	d
NTL_KEEP_NONZERO_9	deplib/ntl-main/include/NTL/SmartPtr.h	803;"	d
NTL_LG2_PDSZ	deplib/ntl-main/include/NTL/FFT_impl.h	16;"	d
NTL_LIMB_MASK	deplib/ntl-main/src/lip.cpp	76;"	d	file:
NTL_LLL__H	deplib/ntl-main/include/NTL/LLL.h	2;"	d
NTL_LONGDOUBLE_OK	deplib/ntl-main/include/NTL/mach_desc.h	16;"	d
NTL_LONGDOUBLE_PRECISION	deplib/ntl-main/include/NTL/mach_desc.h	17;"	d
NTL_LONGDOUBLE_SP_MULMOD	deplib/ntl-main/include/NTL/lip.h	54;"	d
NTL_LONGLONG_SP_MULMOD	deplib/ntl-main/include/NTL/lip.h	32;"	d
NTL_LazyTable__H	deplib/ntl-main/include/NTL/LazyTable.h	3;"	d
NTL_Lazy__H	deplib/ntl-main/include/NTL/Lazy.h	78;"	d
NTL_MAJOR_VERSION	deplib/ntl-main/include/NTL/version.h	7;"	d
NTL_MALLOC	deplib/ntl-main/include/NTL/ctools.h	218;"	d
NTL_MALLOC	deplib/ntl-main/include/NTL/ctools.h	223;"	d
NTL_MAX_ALLOC_BLOCK	deplib/ntl-main/include/NTL/ctools.h	298;"	d
NTL_MAX_FFTPRIMES	deplib/ntl-main/include/NTL/FFT.h	80;"	d
NTL_MAX_INT	deplib/ntl-main/include/NTL/mach_desc.h	8;"	d
NTL_MAX_LONG	deplib/ntl-main/include/NTL/mach_desc.h	7;"	d
NTL_MAX_MATPRIMES	deplib/ntl-main/include/NTL/MatPrime.h	53;"	d
NTL_MINOR_VERSION	deplib/ntl-main/include/NTL/version.h	8;"	d
NTL_MIN_INT	deplib/ntl-main/include/NTL/mach_desc.h	25;"	d
NTL_MIN_LONG	deplib/ntl-main/include/NTL/mach_desc.h	24;"	d
NTL_MORE_ARGTYPES	deplib/ntl-main/include/NTL/SmartPtr.h	815;"	d
NTL_MORE_PASSTYPES	deplib/ntl-main/include/NTL/SmartPtr.h	822;"	d
NTL_MPN	deplib/ntl-main/src/lip.cpp	59;"	d	file:
NTL_MatPrimeFudge	deplib/ntl-main/include/NTL/MatPrime.h	14;"	d
NTL_MatPrimeLimit	deplib/ntl-main/include/NTL/MatPrime.h	18;"	d
NTL_MatPrime_HALF_SIZE_STRATEGY	deplib/ntl-main/include/NTL/MatPrime.h	41;"	d
NTL_MatPrime_NBITS	deplib/ntl-main/include/NTL/MatPrime.h	24;"	d
NTL_MatPrime_NBITS	deplib/ntl-main/include/NTL/MatPrime.h	31;"	d
NTL_MatPrime__H	deplib/ntl-main/include/NTL/MatPrime.h	3;"	d
NTL_NAIL_BITS	deplib/ntl-main/src/lip.cpp	74;"	d	file:
NTL_NAMESPACE	deplib/ntl-main/include/NTL/tools.h	62;"	d
NTL_NAMESPACE	deplib/ntl-main/include/NTL/tools.h	82;"	d
NTL_NBITS	deplib/ntl-main/include/NTL/lip.h	115;"	d
NTL_NBITSH	deplib/ntl-main/include/NTL/lip.h	104;"	d
NTL_NBITSH	deplib/ntl-main/include/NTL/lip.h	119;"	d
NTL_NBITS_MAX	deplib/ntl-main/include/NTL/mach_desc.h	12;"	d
NTL_NEW_FFT_THRESH	deplib/ntl-main/src/FFT.cpp	1295;"	d	file:
NTL_NEW_OP	deplib/ntl-main/include/NTL/new.h	7;"	d
NTL_NNS	deplib/ntl-main/include/NTL/tools.h	66;"	d
NTL_NNS	deplib/ntl-main/include/NTL/tools.h	86;"	d
NTL_NOEXCEPT	deplib/ntl-main/include/NTL/ctools.h	38;"	d
NTL_NOEXCEPT	deplib/ntl-main/include/NTL/ctools.h	48;"	d
NTL_NO_INIT_TRANS	deplib/ntl-main/include/NTL/config.h	265;"	d
NTL_NO_X86_FIX	deplib/ntl-main/include/NTL/config.h	299;"	d
NTL_NSP_BOUND	deplib/ntl-main/include/NTL/lip.h	137;"	d
NTL_NSP_BOUND	deplib/ntl-main/include/NTL/lip.h	98;"	d
NTL_NSP_NBITS	deplib/ntl-main/include/NTL/lip.h	136;"	d
NTL_NSP_NBITS	deplib/ntl-main/include/NTL/lip.h	82;"	d
NTL_NSP_NBITS	deplib/ntl-main/include/NTL/lip.h	84;"	d
NTL_NSP_NBITS	deplib/ntl-main/include/NTL/lip.h	85;"	d
NTL_NUMBITS_BPL	deplib/ntl-main/include/NTL/mach_desc.h	6;"	d
NTL_OPEN_NNS	deplib/ntl-main/include/NTL/tools.h	63;"	d
NTL_OPEN_NNS	deplib/ntl-main/include/NTL/tools.h	83;"	d
NTL_OPT_RETURN	deplib/ntl-main/include/NTL/tools.h	201;"	d
NTL_OPT_RETURN	deplib/ntl-main/include/NTL/tools.h	203;"	d
NTL_OVERFLOW	deplib/ntl-main/include/NTL/ctools.h	179;"	d
NTL_OVERFLOW1	deplib/ntl-main/include/NTL/ctools.h	198;"	d
NTL_OVFBND	deplib/ntl-main/include/NTL/ctools.h	150;"	d
NTL_OVFBND1	deplib/ntl-main/include/NTL/ctools.h	163;"	d
NTL_OVFBND1	deplib/ntl-main/include/NTL/ctools.h	165;"	d
NTL_PACKAGE	deplib/ntl-main/include/NTL/PackageInfo.h	1;"	d
NTL_PASSARG	deplib/ntl-main/include/NTL/SmartPtr.h	824;"	d
NTL_PASSARGS	deplib/ntl-main/include/NTL/SmartPtr.h	825;"	d
NTL_PASSTYPE	deplib/ntl-main/include/NTL/SmartPtr.h	820;"	d
NTL_PASSTYPES	deplib/ntl-main/include/NTL/SmartPtr.h	821;"	d
NTL_PASTE_TOKENS	deplib/ntl-main/include/NTL/ctools.h	140;"	d
NTL_PASTE_TOKENS2	deplib/ntl-main/include/NTL/ctools.h	139;"	d
NTL_PDSZ	deplib/ntl-main/include/NTL/FFT_impl.h	22;"	d
NTL_PD_FFT_THRESH	deplib/ntl-main/src/pd_FFT.cpp	196;"	d	file:
NTL_PD__H	deplib/ntl-main/include/NTL/PD.h	2;"	d
NTL_POST_SHIFT	deplib/ntl-main/include/NTL/sp_arith.h	561;"	d
NTL_POST_SHIFT	deplib/ntl-main/include/NTL/sp_arith.h	571;"	d
NTL_PRE_SHIFT1	deplib/ntl-main/include/NTL/sp_arith.h	560;"	d
NTL_PRE_SHIFT1	deplib/ntl-main/include/NTL/sp_arith.h	570;"	d
NTL_PRE_SHIFT2	deplib/ntl-main/include/NTL/sp_arith.h	563;"	d
NTL_PRE_SHIFT2	deplib/ntl-main/include/NTL/sp_arith.h	573;"	d
NTL_PRG_KEYLEN	deplib/ntl-main/include/NTL/ZZ.h	1076;"	d
NTL_PRIME_BND	deplib/ntl-main/include/NTL/ZZ.h	1659;"	d
NTL_PRIME_BND	deplib/ntl-main/include/NTL/ZZ.h	1661;"	d
NTL_PROVIDES_SS_LIP_IMPL	deplib/ntl-main/include/NTL/lip.h	710;"	d
NTL_PROVIDES_TRUNC_FFT	deplib/ntl-main/include/NTL/FFT.h	13;"	d
NTL_QUAD_FLOAT_SPLIT	deplib/ntl-main/include/NTL/mach_desc.h	20;"	d
NTL_RADIX	deplib/ntl-main/include/NTL/lip.h	103;"	d
NTL_RADIX	deplib/ntl-main/include/NTL/lip.h	118;"	d
NTL_RADIXM	deplib/ntl-main/include/NTL/lip.h	105;"	d
NTL_RADIXM	deplib/ntl-main/include/NTL/lip.h	120;"	d
NTL_RADIXROOT	deplib/ntl-main/include/NTL/lip.h	106;"	d
NTL_RADIXROOT	deplib/ntl-main/include/NTL/lip.h	121;"	d
NTL_RADIXROOTM	deplib/ntl-main/include/NTL/lip.h	107;"	d
NTL_RADIXROOTM	deplib/ntl-main/include/NTL/lip.h	122;"	d
NTL_RANGE_CHECK_CODE	deplib/ntl-main/include/NTL/vector.h	31;"	d
NTL_RANGE_CHECK_CODE	deplib/ntl-main/include/NTL/vector.h	33;"	d
NTL_REALLOC	deplib/ntl-main/include/NTL/ctools.h	269;"	d
NTL_RELEASE_THRESH	deplib/ntl-main/include/NTL/ctools.h	355;"	d
NTL_RELOC_TAG	deplib/ntl-main/include/NTL/tools.h	1043;"	d
NTL_RELOC_TAG	deplib/ntl-main/include/NTL/tools.h	1148;"	d
NTL_REPEATER_0	deplib/ntl-main/include/NTL/SmartPtr.h	772;"	d
NTL_REPEATER_1	deplib/ntl-main/include/NTL/SmartPtr.h	773;"	d
NTL_REPEATER_2	deplib/ntl-main/include/NTL/SmartPtr.h	774;"	d
NTL_REPEATER_3	deplib/ntl-main/include/NTL/SmartPtr.h	775;"	d
NTL_REPEATER_4	deplib/ntl-main/include/NTL/SmartPtr.h	776;"	d
NTL_REPEATER_5	deplib/ntl-main/include/NTL/SmartPtr.h	777;"	d
NTL_REPEATER_6	deplib/ntl-main/include/NTL/SmartPtr.h	778;"	d
NTL_REPEATER_7	deplib/ntl-main/include/NTL/SmartPtr.h	779;"	d
NTL_REPEATER_8	deplib/ntl-main/include/NTL/SmartPtr.h	780;"	d
NTL_REPEATER_9	deplib/ntl-main/include/NTL/SmartPtr.h	781;"	d
NTL_RESTRICT	deplib/ntl-main/include/NTL/tools.h	439;"	d
NTL_RESTRICT	deplib/ntl-main/include/NTL/tools.h	444;"	d
NTL_REVISION	deplib/ntl-main/include/NTL/version.h	9;"	d
NTL_RR__H	deplib/ntl-main/include/NTL/RR.h	2;"	d
NTL_SAFE_VECTORS	deplib/ntl-main/include/NTL/config.h	218;"	d
NTL_SCOPE	deplib/ntl-main/include/NTL/tools.h	616;"	d
NTL_SCOPE	deplib/ntl-main/include/NTL/tools.h	632;"	d
NTL_SEPARATOR_0	deplib/ntl-main/include/NTL/SmartPtr.h	783;"	d
NTL_SEPARATOR_1	deplib/ntl-main/include/NTL/SmartPtr.h	784;"	d
NTL_SEPARATOR_2	deplib/ntl-main/include/NTL/SmartPtr.h	785;"	d
NTL_SEPARATOR_3	deplib/ntl-main/include/NTL/SmartPtr.h	786;"	d
NTL_SEPARATOR_4	deplib/ntl-main/include/NTL/SmartPtr.h	787;"	d
NTL_SEPARATOR_5	deplib/ntl-main/include/NTL/SmartPtr.h	788;"	d
NTL_SEPARATOR_6	deplib/ntl-main/include/NTL/SmartPtr.h	789;"	d
NTL_SEPARATOR_7	deplib/ntl-main/include/NTL/SmartPtr.h	790;"	d
NTL_SEPARATOR_8	deplib/ntl-main/include/NTL/SmartPtr.h	791;"	d
NTL_SEPARATOR_9	deplib/ntl-main/include/NTL/SmartPtr.h	792;"	d
NTL_SHORT_BB_MUL_CODE1	deplib/ntl-main/include/NTL/mach_desc.h	169;"	d
NTL_SNS	deplib/ntl-main/include/NTL/tools.h	37;"	d
NTL_SNS_MALLOC	deplib/ntl-main/include/NTL/ctools.h	245;"	d
NTL_SNS_MALLOC	deplib/ntl-main/include/NTL/ctools.h	251;"	d
NTL_SNS_REALLOC	deplib/ntl-main/include/NTL/ctools.h	285;"	d
NTL_SPMM_ULL	deplib/ntl-main/include/NTL/config.h	375;"	d
NTL_SPMM_ULL_VIABLE	deplib/ntl-main/include/NTL/sp_arith.h	43;"	d
NTL_SP_BOUND	deplib/ntl-main/include/NTL/lip.h	134;"	d
NTL_SP_BOUND	deplib/ntl-main/include/NTL/lip.h	97;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	133;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	40;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	42;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	47;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	48;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	56;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	61;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	62;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	69;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	78;"	d
NTL_SP_NBITS	deplib/ntl-main/include/NTL/lip.h	79;"	d
NTL_START_IMPL	deplib/ntl-main/include/NTL/tools.h	72;"	d
NTL_START_IMPL	deplib/ntl-main/include/NTL/tools.h	88;"	d
NTL_STD_CXX11	deplib/ntl-main/include/NTL/config.h	141;"	d
NTL_STRINGIFY	deplib/ntl-main/include/NTL/ctools.h	142;"	d
NTL_STRINGIFY_AUX	deplib/ntl-main/include/NTL/ctools.h	143;"	d
NTL_SmartPtr__H	deplib/ntl-main/include/NTL/SmartPtr.h	4;"	d
NTL_TBDECL	deplib/ntl-main/include/NTL/BasicThreadPool.h	756;"	d
NTL_TBDECL_static	deplib/ntl-main/include/NTL/BasicThreadPool.h	757;"	d
NTL_TBL_CRT	deplib/ntl-main/src/lip.cpp	1223;"	d	file:
NTL_TBL_REM	deplib/ntl-main/include/NTL/config.h	441;"	d
NTL_TBL_REM	deplib/ntl-main/src/lip.cpp	1240;"	d	file:
NTL_THREADS	deplib/ntl-main/include/NTL/config.h	72;"	d
NTL_THREAD_BOOST	deplib/ntl-main/include/NTL/config.h	91;"	d
NTL_THREAD_LOCAL	deplib/ntl-main/include/NTL/ctools.h	339;"	d
NTL_THREAD_LOCAL	deplib/ntl-main/include/NTL/ctools.h	349;"	d
NTL_THREAD_LOCAL	deplib/ntl-main/src/CheckThreads.cpp	24;"	d	file:
NTL_TLS_GLOBAL_ACCESS	deplib/ntl-main/include/NTL/tools.h	764;"	d
NTL_TLS_GLOBAL_ACCESS	deplib/ntl-main/src/CheckThreads.cpp	152;"	d	file:
NTL_TLS_GLOBAL_DECL	deplib/ntl-main/include/NTL/tools.h	762;"	d
NTL_TLS_GLOBAL_DECL	deplib/ntl-main/src/CheckThreads.cpp	150;"	d	file:
NTL_TLS_GLOBAL_DECL_INIT	deplib/ntl-main/include/NTL/tools.h	753;"	d
NTL_TLS_GLOBAL_DECL_INIT	deplib/ntl-main/src/CheckThreads.cpp	141;"	d	file:
NTL_TLS_HACK	deplib/ntl-main/include/NTL/config.h	63;"	d
NTL_TLS_LOCAL	deplib/ntl-main/include/NTL/tools.h	751;"	d
NTL_TLS_LOCAL	deplib/ntl-main/src/CheckThreads.cpp	139;"	d	file:
NTL_TLS_LOCAL_INIT	deplib/ntl-main/include/NTL/tools.h	723;"	d
NTL_TLS_LOCAL_INIT	deplib/ntl-main/src/CheckThreads.cpp	111;"	d	file:
NTL_UINT_TO_INT	deplib/ntl-main/include/NTL/ctools.h	322;"	d
NTL_ULL_TYPE	deplib/ntl-main/include/NTL/ctools.h	103;"	d
NTL_ULL_TYPE	deplib/ntl-main/include/NTL/ctools.h	73;"	d
NTL_ULL_TYPE	deplib/ntl-main/include/NTL/ctools.h	77;"	d
NTL_ULL_TYPE	deplib/ntl-main/include/NTL/ctools.h	81;"	d
NTL_ULL_TYPE	deplib/ntl-main/include/NTL/ctools.h	85;"	d
NTL_ULL_TYPE	deplib/ntl-main/include/NTL/ctools.h	91;"	d
NTL_ULONG_TO_LONG	deplib/ntl-main/include/NTL/ctools.h	307;"	d
NTL_UNWRAPARG	deplib/ntl-main/include/NTL/SmartPtr.h	827;"	d
NTL_UNWRAPARGS	deplib/ntl-main/include/NTL/SmartPtr.h	828;"	d
NTL_UPTRINT_T	deplib/ntl-main/include/NTL/ctools.h	453;"	d
NTL_UPTRINT_T	deplib/ntl-main/include/NTL/ctools.h	462;"	d
NTL_USE_MM_MATMUL	deplib/ntl-main/src/mat_ZZ_p.cpp	21;"	d	file:
NTL_USE_NNS	deplib/ntl-main/include/NTL/tools.h	65;"	d
NTL_USE_NNS	deplib/ntl-main/include/NTL/tools.h	85;"	d
NTL_USE_SNS	deplib/ntl-main/include/NTL/tools.h	38;"	d
NTL_USE_ZZ_pXNewArgument	deplib/ntl-main/include/NTL/ZZ_pX.h	1146;"	d
NTL_VARARG	deplib/ntl-main/include/NTL/SmartPtr.h	817;"	d
NTL_VARARGS	deplib/ntl-main/include/NTL/SmartPtr.h	818;"	d
NTL_VECTOR_HEADER_SIZE	deplib/ntl-main/include/NTL/vector.h	25;"	d
NTL_VEC_HEAD	deplib/ntl-main/include/NTL/vector.h	27;"	d
NTL_VERSION	deplib/ntl-main/include/NTL/version.h	5;"	d
NTL_VIABLE_LL	deplib/ntl-main/src/lip.cpp	51;"	d	file:
NTL_VectorInputBlock	deplib/ntl-main/include/NTL/vector.h	46;"	d
NTL_VectorMinAlloc	deplib/ntl-main/include/NTL/vector.h	40;"	d
NTL_WIDE_DOUBLE_DP	deplib/ntl-main/include/NTL/mach_desc.h	19;"	d
NTL_WIDE_DOUBLE_LDP	deplib/ntl-main/include/NTL/mach_desc.h	18;"	d
NTL_WIDE_DOUBLE_PRECISION	deplib/ntl-main/include/NTL/sp_arith.h	373;"	d
NTL_WIDE_DOUBLE_PRECISION	deplib/ntl-main/include/NTL/sp_arith.h	384;"	d
NTL_WIDE_DOUBLE_PRECISION	deplib/ntl-main/include/NTL/sp_arith.h	390;"	d
NTL_WIDE_FDOUBLE_PRECISION	deplib/ntl-main/include/NTL/sp_arith.h	374;"	d
NTL_WIDE_FDOUBLE_PRECISION	deplib/ntl-main/include/NTL/sp_arith.h	385;"	d
NTL_WIDE_FDOUBLE_PRECISION	deplib/ntl-main/include/NTL/sp_arith.h	391;"	d
NTL_WNBITS_MAX	deplib/ntl-main/include/NTL/mach_desc.h	13;"	d
NTL_WSP_BOUND	deplib/ntl-main/include/NTL/lip.h	140;"	d
NTL_WSP_BOUND	deplib/ntl-main/include/NTL/lip.h	99;"	d
NTL_WSP_NBITS	deplib/ntl-main/include/NTL/lip.h	139;"	d
NTL_WSP_NBITS	deplib/ntl-main/include/NTL/lip.h	88;"	d
NTL_WSP_NBITS	deplib/ntl-main/include/NTL/lip.h	93;"	d
NTL_WSP_NBITS	deplib/ntl-main/include/NTL/lip.h	94;"	d
NTL_WV_RANGE_CHECK_CODE	deplib/ntl-main/include/NTL/WordVector.h	30;"	d
NTL_WordVectorInputBlock	deplib/ntl-main/include/NTL/WordVector.h	44;"	d
NTL_WordVectorMinAlloc	deplib/ntl-main/include/NTL/WordVector.h	38;"	d
NTL_WordVector__H	deplib/ntl-main/include/NTL/WordVector.h	3;"	d
NTL_X86_FIX	deplib/ntl-main/src/quad_float.cpp	61;"	d	file:
NTL_XD_BOUND	deplib/ntl-main/include/NTL/xdouble.h	24;"	d
NTL_XD_BOUND_INV	deplib/ntl-main/include/NTL/xdouble.h	25;"	d
NTL_XD_HBOUND	deplib/ntl-main/include/NTL/xdouble.h	12;"	d
NTL_XD_HBOUND_INV	deplib/ntl-main/include/NTL/xdouble.h	22;"	d
NTL_XD_HBOUND_LOG	deplib/ntl-main/include/NTL/xdouble.h	13;"	d
NTL_ZZRegister	deplib/ntl-main/include/NTL/ZZ.h	190;"	d
NTL_ZZVec__H	deplib/ntl-main/include/NTL/ZZVec.h	2;"	d
NTL_ZZXFactoring__H	deplib/ntl-main/include/NTL/ZZXFactoring.h	2;"	d
NTL_ZZX__H	deplib/ntl-main/include/NTL/ZZX.h	3;"	d
NTL_ZZ_FRADIX	deplib/ntl-main/include/NTL/gmp_aux.h	3;"	d
NTL_ZZ_FRADIX	deplib/ntl-main/include/NTL/lip.h	130;"	d
NTL_ZZ_FRADIX_INV	deplib/ntl-main/src/lip.cpp	81;"	d	file:
NTL_ZZ_NBITS	deplib/ntl-main/include/NTL/gmp_aux.h	1;"	d
NTL_ZZ_NBITS	deplib/ntl-main/include/NTL/lip.h	129;"	d
NTL_ZZ_RADIX	deplib/ntl-main/src/lip.cpp	78;"	d	file:
NTL_ZZ_WIDE_FRADIX	deplib/ntl-main/include/NTL/lip.h	131;"	d
NTL_ZZ__H	deplib/ntl-main/include/NTL/ZZ.h	4;"	d
NTL_ZZ_limbs__H	deplib/ntl-main/include/NTL/ZZ_limbs.h	2;"	d
NTL_ZZ_pEXFactoring__H	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	3;"	d
NTL_ZZ_pEX_GCD_CROSSOVER	deplib/ntl-main/src/ZZ_pEX.cpp	2036;"	d	file:
NTL_ZZ_pEX_HalfGCD_CROSSOVER	deplib/ntl-main/src/ZZ_pEX.cpp	2035;"	d	file:
NTL_ZZ_pEX__H	deplib/ntl-main/include/NTL/ZZ_pEX.h	3;"	d
NTL_ZZ_pE__H	deplib/ntl-main/include/NTL/ZZ_pE.h	3;"	d
NTL_ZZ_pRegister	deplib/ntl-main/include/NTL/ZZ_p.h	559;"	d
NTL_ZZ_pXFactoring__H	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	4;"	d
NTL_ZZ_pX_BERMASS_CROSSOVER	deplib/ntl-main/include/NTL/ZZ_pX.h	32;"	d
NTL_ZZ_pX_DIV_CROSSOVER	deplib/ntl-main/include/NTL/ZZ_pX.h	29;"	d
NTL_ZZ_pX_FFT_CROSSOVER	deplib/ntl-main/include/NTL/ZZ_pX.h	27;"	d
NTL_ZZ_pX_GCD_CROSSOVER	deplib/ntl-main/include/NTL/ZZ_pX.h	31;"	d
NTL_ZZ_pX_HalfGCD_CROSSOVER	deplib/ntl-main/include/NTL/ZZ_pX.h	30;"	d
NTL_ZZ_pX_NEWTON_CROSSOVER	deplib/ntl-main/include/NTL/ZZ_pX.h	28;"	d
NTL_ZZ_pX_TRACE_CROSSOVER	deplib/ntl-main/include/NTL/ZZ_pX.h	33;"	d
NTL_ZZ_pX__H	deplib/ntl-main/include/NTL/ZZ_pX.h	4;"	d
NTL_ZZ_p__H	deplib/ntl-main/include/NTL/ZZ_p.h	4;"	d
NTL_config__H	deplib/ntl-main/include/NTL/config.h	3;"	d
NTL_ctools__H	deplib/ntl-main/include/NTL/ctools.h	3;"	d
NTL_fileio__H	deplib/ntl-main/include/NTL/fileio.h	3;"	d
NTL_g_lip__H	deplib/ntl-main/include/NTL/lip.h	3;"	d
NTL_mach_desc__H	deplib/ntl-main/include/NTL/mach_desc.h	2;"	d
NTL_mat_GF2E__H	deplib/ntl-main/include/NTL/mat_GF2E.h	3;"	d
NTL_mat_GF2__H	deplib/ntl-main/include/NTL/mat_GF2.h	3;"	d
NTL_mat_RR__H	deplib/ntl-main/include/NTL/mat_RR.h	3;"	d
NTL_mat_ZZ__H	deplib/ntl-main/include/NTL/mat_ZZ.h	3;"	d
NTL_mat_ZZ_pE__H	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	3;"	d
NTL_mat_ZZ_p__H	deplib/ntl-main/include/NTL/mat_ZZ_p.h	3;"	d
NTL_mat_poly_ZZ__H	deplib/ntl-main/include/NTL/mat_poly_ZZ.h	3;"	d
NTL_mat_poly_ZZ_p__H	deplib/ntl-main/include/NTL/mat_poly_ZZ_p.h	3;"	d
NTL_mat_poly_zz_p__H	deplib/ntl-main/include/NTL/mat_poly_lzz_p.h	3;"	d
NTL_mat_zz_pE__H	deplib/ntl-main/include/NTL/mat_lzz_pE.h	3;"	d
NTL_mat_zz_p__H	deplib/ntl-main/include/NTL/mat_lzz_p.h	3;"	d
NTL_matrix__H	deplib/ntl-main/include/NTL/matrix.h	2;"	d
NTL_new__H	deplib/ntl-main/include/NTL/new.h	3;"	d
NTL_pair_GF2EX_long__H	deplib/ntl-main/include/NTL/pair_GF2EX_long.h	3;"	d
NTL_pair_GF2X_long__H	deplib/ntl-main/include/NTL/pair_GF2X_long.h	3;"	d
NTL_pair_ZZX_long__H	deplib/ntl-main/include/NTL/pair_ZZX_long.h	3;"	d
NTL_pair_ZZ_pEX_long__H	deplib/ntl-main/include/NTL/pair_ZZ_pEX_long.h	3;"	d
NTL_pair_ZZ_pX_long__H	deplib/ntl-main/include/NTL/pair_ZZ_pX_long.h	3;"	d
NTL_pair__H	deplib/ntl-main/include/NTL/pair.h	3;"	d
NTL_pair_zz_pEX_long__H	deplib/ntl-main/include/NTL/pair_lzz_pEX_long.h	3;"	d
NTL_pair_zz_pX_long__H	deplib/ntl-main/include/NTL/pair_lzz_pX_long.h	3;"	d
NTL_pd_FFT__H	deplib/ntl-main/include/NTL/pd_FFT.h	3;"	d
NTL_quad_float__H	deplib/ntl-main/include/NTL/quad_float.h	3;"	d
NTL_sp_arith__H	deplib/ntl-main/include/NTL/sp_arith.h	4;"	d
NTL_thread__H	deplib/ntl-main/include/NTL/thread.h	3;"	d
NTL_tools__H	deplib/ntl-main/include/NTL/tools.h	6;"	d
NTL_vec_GF2E__H	deplib/ntl-main/include/NTL/vec_GF2E.h	3;"	d
NTL_vec_GF2XVec__H	deplib/ntl-main/include/NTL/vec_GF2XVec.h	3;"	d
NTL_vec_GF2__H	deplib/ntl-main/include/NTL/vec_GF2.h	3;"	d
NTL_vec_RR__H	deplib/ntl-main/include/NTL/vec_RR.h	3;"	d
NTL_vec_ZZVec__H	deplib/ntl-main/include/NTL/vec_ZZVec.h	3;"	d
NTL_vec_ZZ__H	deplib/ntl-main/include/NTL/vec_ZZ.h	3;"	d
NTL_vec_ZZ_pE__H	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	3;"	d
NTL_vec_ZZ_p__H	deplib/ntl-main/include/NTL/vec_ZZ_p.h	3;"	d
NTL_vec_double__H	deplib/ntl-main/include/NTL/vec_double.h	3;"	d
NTL_vec_long__H	deplib/ntl-main/include/NTL/vec_long.h	3;"	d
NTL_vec_quad_float__H	deplib/ntl-main/include/NTL/vec_quad_float.h	3;"	d
NTL_vec_ulong__H	deplib/ntl-main/include/NTL/vec_ulong.h	3;"	d
NTL_vec_vec_GF2E__H	deplib/ntl-main/include/NTL/vec_vec_GF2E.h	3;"	d
NTL_vec_vec_GF2__H	deplib/ntl-main/include/NTL/vec_vec_GF2.h	3;"	d
NTL_vec_vec_RR__H	deplib/ntl-main/include/NTL/vec_vec_RR.h	3;"	d
NTL_vec_vec_ZZ__H	deplib/ntl-main/include/NTL/vec_vec_ZZ.h	3;"	d
NTL_vec_vec_ZZ_pE__H	deplib/ntl-main/include/NTL/vec_vec_ZZ_pE.h	3;"	d
NTL_vec_vec_ZZ_p__H	deplib/ntl-main/include/NTL/vec_vec_ZZ_p.h	3;"	d
NTL_vec_vec_long__H	deplib/ntl-main/include/NTL/vec_vec_long.h	3;"	d
NTL_vec_vec_ulong__H	deplib/ntl-main/include/NTL/vec_vec_ulong.h	3;"	d
NTL_vec_vec_zz_pE__H	deplib/ntl-main/include/NTL/vec_vec_lzz_pE.h	3;"	d
NTL_vec_vec_zz_p__H	deplib/ntl-main/include/NTL/vec_vec_lzz_p.h	3;"	d
NTL_vec_xdouble__H	deplib/ntl-main/include/NTL/vec_xdouble.h	3;"	d
NTL_vec_zz_pE__H	deplib/ntl-main/include/NTL/vec_lzz_pE.h	3;"	d
NTL_vec_zz_p__H	deplib/ntl-main/include/NTL/vec_lzz_p.h	3;"	d
NTL_vector__H	deplib/ntl-main/include/NTL/vector.h	3;"	d
NTL_version__H	deplib/ntl-main/include/NTL/version.h	3;"	d
NTL_xdouble__H	deplib/ntl-main/include/NTL/xdouble.h	2;"	d
NTL_zz_pEXFactoring__H	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	3;"	d
NTL_zz_pEX_GCD_CROSSOVER	deplib/ntl-main/src/lzz_pEX.cpp	2040;"	d	file:
NTL_zz_pEX_HalfGCD_CROSSOVER	deplib/ntl-main/src/lzz_pEX.cpp	2039;"	d	file:
NTL_zz_pEX__H	deplib/ntl-main/include/NTL/lzz_pEX.h	3;"	d
NTL_zz_pE__H	deplib/ntl-main/include/NTL/lzz_pE.h	3;"	d
NTL_zz_pRegister	deplib/ntl-main/include/NTL/lzz_p.h	155;"	d
NTL_zz_pXFactoring__H	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	4;"	d
NTL_zz_pX_BERMASS_CROSSOVER	deplib/ntl-main/include/NTL/lzz_pX.h	22;"	d
NTL_zz_pX_DIV_CROSSOVER	deplib/ntl-main/include/NTL/lzz_pX.h	19;"	d
NTL_zz_pX_GCD_CROSSOVER	deplib/ntl-main/include/NTL/lzz_pX.h	21;"	d
NTL_zz_pX_HalfGCD_CROSSOVER	deplib/ntl-main/include/NTL/lzz_pX.h	20;"	d
NTL_zz_pX_MOD_CROSSOVER	deplib/ntl-main/include/NTL/lzz_pX.h	16;"	d
NTL_zz_pX_MUL_CROSSOVER	deplib/ntl-main/include/NTL/lzz_pX.h	17;"	d
NTL_zz_pX_NEWTON_CROSSOVER	deplib/ntl-main/include/NTL/lzz_pX.h	18;"	d
NTL_zz_pX_TRACE_CROSSOVER	deplib/ntl-main/include/NTL/lzz_pX.h	23;"	d
NTL_zz_pX__H	deplib/ntl-main/include/NTL/lzz_pX.h	3;"	d
NTL_zz_p__H	deplib/ntl-main/include/NTL/lzz_p.h	3;"	d
NVx	deplib/ntl-main/src/ZZ.cpp	2127;"	d	file:
NVxV_DEC	deplib/ntl-main/src/ZZ.cpp	2130;"	d	file:
NVxV_NOWRAP	deplib/ntl-main/src/ZZ.cpp	2132;"	d	file:
NVxV_WRAP	deplib/ntl-main/src/ZZ.cpp	2134;"	d	file:
NearVector	deplib/ntl-main/src/LLL_RR.cpp	/^void NearVector(vec_ZZ& ww, const mat_ZZ& BB, const vec_ZZ& a)$/;"	f
NegateMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ NegateMod(const ZZ& a, const ZZ& n)$/;"	f
NegateMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline void NegateMod(ZZ& x, const ZZ& a, const ZZ& n)$/;"	f
NegateMod	deplib/ntl-main/include/NTL/sp_arith.h	/^long NegateMod(long a, long n)$/;"	f
NegatePrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR NegatePrec(const RR& a, long p)$/;"	f
NegatePrec	deplib/ntl-main/src/RR.cpp	/^void NegatePrec(RR& x, const RR& a, long p)$/;"	f
NewAddFactor	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void NewAddFactor(vec_pair_GF2EX_long& u, const GF2EX& g, long m, long verbose)$/;"	f	file:
NewAddFactor	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void NewAddFactor(vec_pair_ZZ_pEX_long& u, const ZZ_pEX& g, long m, long verbose)$/;"	f	file:
NewAddFactor	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void NewAddFactor(vec_pair_ZZ_pX_long& u, const ZZ_pX& g, long m, long verbose)$/;"	f	file:
NewAddFactor	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void NewAddFactor(vec_pair_zz_pEX_long& u, const zz_pEX& g, long m, long verbose)$/;"	f	file:
NewAddFactor	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void NewAddFactor(vec_pair_zz_pX_long& u, const zz_pX& g, long m, long verbose)$/;"	f	file:
NewDDF	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline vec_pair_GF2EX_long NewDDF(const GF2EX& f, const GF2EX& h,$/;"	f
NewDDF	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline vec_pair_ZZ_pEX_long NewDDF(const ZZ_pEX& f, const ZZ_pEX& h,$/;"	f
NewDDF	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline vec_pair_ZZ_pX_long NewDDF(const ZZ_pX& f, const ZZ_pX& h,$/;"	f
NewDDF	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline vec_pair_zz_pEX_long NewDDF(const zz_pEX& f, const zz_pEX& h,$/;"	f
NewDDF	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline vec_pair_zz_pX_long NewDDF(const zz_pX& f, const zz_pX& h,$/;"	f
NewDDF	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void NewDDF(vec_pair_GF2EX_long& factors,$/;"	f
NewDDF	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void NewDDF(vec_pair_ZZ_pEX_long& factors,$/;"	f
NewDDF	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void NewDDF(vec_pair_ZZ_pX_long& factors,$/;"	f
NewDDF	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void NewDDF(vec_pair_zz_pEX_long& factors,$/;"	f
NewDDF	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void NewDDF(vec_pair_zz_pX_long& factors,$/;"	f
NewFastCRTHelper	deplib/ntl-main/src/ZZX1.cpp	/^NewFastCRTHelper::NewFastCRTHelper(long bound) $/;"	f	class:NewFastCRTHelper
NewFastCRTHelper	deplib/ntl-main/src/ZZX1.cpp	/^struct NewFastCRTHelper {$/;"	s	file:
NewFastCRTHelperScratch	deplib/ntl-main/src/ZZX1.cpp	/^struct NewFastCRTHelperScratch {$/;"	s	file:
NewProcessTable	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void NewProcessTable(vec_pair_GF2EX_long& u, GF2EX& f, const GF2EXModulus& F,$/;"	f	file:
NewProcessTable	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void NewProcessTable(vec_pair_ZZ_pEX_long& u, ZZ_pEX& f, const ZZ_pEXModulus& F,$/;"	f	file:
NewProcessTable	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void NewProcessTable(vec_pair_ZZ_pX_long& u, ZZ_pX& f, const ZZ_pXModulus& F,$/;"	f	file:
NewProcessTable	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void NewProcessTable(vec_pair_zz_pEX_long& u, zz_pEX& f, const zz_pEXModulus& F,$/;"	f	file:
NewProcessTable	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void NewProcessTable(vec_pair_zz_pX_long& u, zz_pX& f, const zz_pXModulus& F,$/;"	f	file:
NewtonInv	deplib/ntl-main/src/ZZ_pEX.cpp	/^void NewtonInv(ZZ_pEX& c, const ZZ_pEX& a, long e)$/;"	f
NewtonInv	deplib/ntl-main/src/lzz_pEX.cpp	/^void NewtonInv(zz_pEX& c, const zz_pEX& a, long e)$/;"	f
NewtonInvTrunc	deplib/ntl-main/src/GF2EX.cpp	/^void NewtonInvTrunc(GF2EX& c, const GF2EX& a, long e)$/;"	f
NewtonInvTrunc	deplib/ntl-main/src/GF2X1.cpp	/^void NewtonInvTrunc(GF2X& c, const GF2X& a, long e)$/;"	f
NewtonInvTrunc	deplib/ntl-main/src/ZZX1.cpp	/^void NewtonInvTrunc(ZZX& c, const ZZX& a, long e)$/;"	f
NewtonInvTrunc	deplib/ntl-main/src/ZZ_pX.cpp	/^void NewtonInvTrunc(ZZ_pX& x, const ZZ_pX& a, long m)$/;"	f
NewtonInvTrunc	deplib/ntl-main/src/lzz_pX.cpp	/^void NewtonInvTrunc(zz_pX& x, const zz_pX& a, long m)$/;"	f
NextFFTPrime	deplib/ntl-main/src/FFT.cpp	/^void NextFFTPrime(long& q, long& w, long index)$/;"	f	file:
NextMatPrime	deplib/ntl-main/src/MatPrime.cpp	/^void NextMatPrime(long& q, long index)$/;"	f	file:
NextPowerOfTwo	deplib/ntl-main/src/ZZ.cpp	/^long NextPowerOfTwo(long m)$/;"	f
NextPrime	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ NextPrime(const ZZ& m, long NumTrials=10)$/;"	f
NextPrime	deplib/ntl-main/src/ZZ.cpp	/^long NextPrime(long m, long NumTrials)$/;"	f
NextPrime	deplib/ntl-main/src/ZZ.cpp	/^void NextPrime(ZZ& n, const ZZ& m, long NumTrials)$/;"	f
Node	deplib/ntl-main/include/NTL/tools.h	/^   Node() : next(0) { }$/;"	f	struct:details_pthread::Node
Node	deplib/ntl-main/include/NTL/tools.h	/^struct Node {$/;"	s	namespace:details_pthread
Node	deplib/ntl-main/src/CheckThreads.cpp	/^   Node() : next(0) { }$/;"	f	struct:details_pthread::Node
Node	deplib/ntl-main/src/CheckThreads.cpp	/^struct Node {$/;"	s	namespace:details_pthread	file:
NormMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2E NormMod(const GF2EX& a, const GF2EX& f)$/;"	f
NormMod	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZ NormMod(const ZZX& a, const ZZX& f, long deterministic=0)$/;"	f
NormMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pE NormMod(const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
NormMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_p NormMod(const ZZ_pX& a, const ZZ_pX& f)$/;"	f
NormMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pE NormMod(const zz_pEX& a, const zz_pEX& f)$/;"	f
NormMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_p NormMod(const zz_pX& a, const zz_pX& f)$/;"	f
NormMod	deplib/ntl-main/src/GF2EX.cpp	/^void NormMod(GF2E& x, const GF2EX& a, const GF2EX& f)$/;"	f
NormMod	deplib/ntl-main/src/ZZX1.cpp	/^void NormMod(ZZ& x, const ZZX& a, const ZZX& f, long deterministic)$/;"	f
NormMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void NormMod(ZZ_pE& x, const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
NormMod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void NormMod(ZZ_p& x, const ZZ_pX& a, const ZZ_pX& f)$/;"	f
NormMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void NormMod(zz_pE& x, const zz_pEX& a, const zz_pEX& f)$/;"	f
NormMod	deplib/ntl-main/src/lzz_pX1.cpp	/^void NormMod(zz_p& x, const zz_pX& a, const zz_pX& f)$/;"	f
NormalizedModulus	deplib/ntl-main/include/NTL/sp_arith.h	/^NormalizedModulus(sp_inverse ninv) { return ninv.shamt == 0; }$/;"	f
NormalizedModulus	deplib/ntl-main/include/NTL/sp_arith.h	/^inline bool NormalizedModulus(wide_double ninv) { return true; }$/;"	f
NormalizedMulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^NormalizedMulMod(long a, long b, long n, sp_inverse ninv)$/;"	f
NormalizedMulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^long NormalizedMulMod(long a, long b, long n, wide_double ninv)$/;"	f
Nr	aes_whitebox_tables.cc	/^constexpr int Nr = 14;$/;"	m	namespace:__anon5	file:
NullSpace	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void NullSpace(long& r, vec_long& D, vec_GF2XVec& M, long verbose)$/;"	f	file:
NullSpace	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void NullSpace(long& r, vec_long& D, vec_ZZVec& M, long verbose)$/;"	f	file:
NullSpace	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void NullSpace(long& r, vec_long& D, vec_vec_zz_p& M, long verbose)$/;"	f	file:
NumBits	deplib/ntl-main/include/NTL/GF2X.h	/^inline long NumBits(const GF2X& a)$/;"	f
NumBits	deplib/ntl-main/include/NTL/ZZ.h	/^inline long NumBits(const ZZ& a)$/;"	f
NumBits	deplib/ntl-main/include/NTL/ZZ.h	/^long NumBits(long a)$/;"	f
NumBytes	deplib/ntl-main/include/NTL/GF2X.h	/^inline long NumBytes(const GF2X& a)$/;"	f
NumBytes	deplib/ntl-main/include/NTL/ZZ.h	/^long NumBytes(const ZZ& a)$/;"	f
NumBytes	deplib/ntl-main/include/NTL/ZZ.h	/^long NumBytes(long a)$/;"	f
NumCols	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^   long NumCols() const $/;"	f	struct:mat_ZZ_p_opaque
NumCols	deplib/ntl-main/include/NTL/matrix.h	/^   long NumCols() const { return _mat__numcols; }  $/;"	f	class:Mat
NumCols	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   long NumCols() const$/;"	f	struct:mat_ZZ_p_opaque_body_crt
NumCols	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   long NumCols() const$/;"	f	struct:mat_ZZ_p_opaque_body_plain
NumCols	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long NumCols() const { return ncols; }$/;"	f	struct:const_mat_window_zz_p
NumCols	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long NumCols() const { return ncols; }$/;"	f	struct:mat_window_zz_p
NumFacs	deplib/ntl-main/src/MoreFacTest.cpp	/^long NumFacs(const vec_pair_ZZX_long& v)$/;"	f
NumFactors	deplib/ntl-main/src/ZZXFactoring.cpp	/^   long NumFactors;$/;"	m	struct:LocalInfoT	file:
NumFactors	deplib/ntl-main/src/ZZXFactoring.cpp	/^long NumFactors(const vec_long& pat)$/;"	f	file:
NumIntervals	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   long NumIntervals() const { return nintervals; }$/;"	f	struct:PartitionInfo
NumNames	deplib/ntl-main/src/newnames.cpp	19;"	d	file:
NumPrimes	deplib/ntl-main/include/NTL/MatPrime.h	/^   long NumPrimes;$/;"	m	struct:MatPrime_crt_helper
NumPrimes	deplib/ntl-main/include/NTL/ZZ_p.h	/^   long NumPrimes;$/;"	m	class:ZZ_pFFTInfoT
NumPrimes	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long NumPrimes; $/;"	m	class:FFTRep
NumPrimes	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long NumPrimes; $/;"	m	class:ZZ_pXModRep
NumPrimes	deplib/ntl-main/include/NTL/lzz_p.h	/^   long NumPrimes;$/;"	m	class:zz_pInfoT
NumPrimes	deplib/ntl-main/include/NTL/lzz_pX.h	/^   long NumPrimes;$/;"	m	class:fftRep
NumPrimes	deplib/ntl-main/src/ZZXFactoring.cpp	/^   long NumPrimes;$/;"	m	struct:LocalInfoT	file:
NumRows	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^   long NumRows() const $/;"	f	struct:mat_ZZ_p_opaque
NumRows	deplib/ntl-main/include/NTL/matrix.h	/^   long NumRows() const { return _mat__rep.length(); }  $/;"	f	class:Mat
NumRows	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   long NumRows() const$/;"	f	struct:mat_ZZ_p_opaque_body_crt
NumRows	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   long NumRows() const$/;"	f	struct:mat_ZZ_p_opaque_body_plain
NumRows	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long NumRows() const { return nrows; }$/;"	f	struct:const_mat_window_zz_p
NumRows	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long NumRows() const { return nrows; }$/;"	f	struct:mat_window_zz_p
NumSwaps	deplib/ntl-main/src/G_LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL unsigned long NumSwaps = 0;$/;"	v	file:
NumSwaps	deplib/ntl-main/src/G_LLL_QP.cpp	/^static NTL_CHEAP_THREAD_LOCAL unsigned long NumSwaps = 0;$/;"	v	file:
NumSwaps	deplib/ntl-main/src/G_LLL_RR.cpp	/^static NTL_CHEAP_THREAD_LOCAL unsigned long NumSwaps = 0;$/;"	v	file:
NumSwaps	deplib/ntl-main/src/G_LLL_XD.cpp	/^static NTL_CHEAP_THREAD_LOCAL unsigned long NumSwaps = 0;$/;"	v	file:
NumSwaps	deplib/ntl-main/src/LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL unsigned long NumSwaps = 0;$/;"	v	file:
NumSwaps	deplib/ntl-main/src/LLL_QP.cpp	/^static NTL_CHEAP_THREAD_LOCAL unsigned long NumSwaps = 0;$/;"	v	file:
NumSwaps	deplib/ntl-main/src/LLL_RR.cpp	/^static NTL_CHEAP_THREAD_LOCAL unsigned long NumSwaps = 0;$/;"	v	file:
NumSwaps	deplib/ntl-main/src/LLL_XD.cpp	/^static NTL_CHEAP_THREAD_LOCAL unsigned long NumSwaps = 0;$/;"	v	file:
NumThreads	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  long NumThreads() const { return nthreads; }$/;"	f	class:BasicThreadPool
NumTwos	deplib/ntl-main/include/NTL/ZZ.h	/^inline long NumTwos(const ZZ& x)$/;"	f
OBJ	deplib/ntl-main/src/makefile	/^OBJ=FFT.o FacVec.o GF2.o GF2E.o GF2EX.o GF2EXFactoring.o GF2X.o GF2X1.o  \\$/;"	m
OFF64	deplib/ntl-main/include/NTL/linux_s390x.h	17;"	d
ONEP	deplib/ntl-main/src/lip.cpp	/^inline long ONEP(_ntl_gbigint p)$/;"	f	file:
ONE_STEP	deplib/ntl-main/src/mat_lzz_p.cpp	2218;"	d	file:
ONE_STEP_L	deplib/ntl-main/src/mat_lzz_p.cpp	1587;"	d	file:
OldGCD	deplib/ntl-main/src/GF2X1.cpp	/^void OldGCD(GF2X& d, const GF2X& a, const GF2X& b)$/;"	f
OldGenGermainPrime	deplib/ntl-main/src/ZZ.cpp	/^void OldGenGermainPrime(ZZ& n, long k, long err)$/;"	f
OldHexOutput	deplib/ntl-main/include/NTL/GF2X.h	/^   long OldHexOutput;$/;"	m	class:GF2XHexOutputPush
OldMinPolyInternal	deplib/ntl-main/src/GF2X1.cpp	/^void OldMinPolyInternal(GF2X& h, const GF2X& x, long m)$/;"	f
OldMul	deplib/ntl-main/src/GF2X.cpp	/^void OldMul(GF2X& c, const GF2X& a, const GF2X& b)$/;"	f
OldN	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL long OldN = 0;$/;"	v	file:
OldRandomPrime	deplib/ntl-main/src/ZZ.cpp	/^void OldRandomPrime(ZZ& n, long l, long NumTrials)$/;"	f
OldXGCD	deplib/ntl-main/src/GF2X1.cpp	/^void OldXGCD(GF2X& d, GF2X& s, GF2X& t, const GF2X& a, const GF2X& b)$/;"	f
OpenRead	deplib/ntl-main/src/fileio.cpp	/^void OpenRead(ifstream& s, const char *name)$/;"	f
OpenWrite	deplib/ntl-main/src/fileio.cpp	/^void OpenWrite(ofstream& s, const char *name)$/;"	f
OpenWrite	deplib/ntl-main/src/fileio.cpp	/^void OpenWrite(ofstream& s, const char *name, FileList& flist)$/;"	f
OptWinSize	deplib/ntl-main/src/GF2EX.cpp	/^long OptWinSize(long n)$/;"	f	file:
OptWinSize	deplib/ntl-main/src/GF2X1.cpp	/^long OptWinSize(long n)$/;"	f	file:
OptWinSize	deplib/ntl-main/src/ZZ_pEX.cpp	/^long OptWinSize(long n)$/;"	f	file:
OptWinSize	deplib/ntl-main/src/lip.cpp	/^long OptWinSize(long n)$/;"	f	file:
OptWinSize	deplib/ntl-main/src/lzz_pEX.cpp	/^long OptWinSize(long n)$/;"	f	file:
OptionalVal	deplib/ntl-main/include/NTL/SmartPtr.h	/^   OptionalVal() { }$/;"	f	class:OptionalVal
OptionalVal	deplib/ntl-main/include/NTL/SmartPtr.h	/^   OptionalVal(OptionalVal&& other) noexcept : OptionalVal() $/;"	f	class:OptionalVal
OptionalVal	deplib/ntl-main/include/NTL/SmartPtr.h	/^   OptionalVal(const OptionalVal& other) $/;"	f	class:OptionalVal
OptionalVal	deplib/ntl-main/include/NTL/SmartPtr.h	/^   explicit OptionalVal(T *p) : dp(p) { }$/;"	f	class:OptionalVal
OptionalVal	deplib/ntl-main/include/NTL/SmartPtr.h	/^class OptionalVal {$/;"	c
OutputPrecision	deplib/ntl-main/include/NTL/RR.h	/^static long OutputPrecision() { return oprec; }$/;"	f	class:RR
OutputPrecision	deplib/ntl-main/include/NTL/quad_float.h	/^  static long OutputPrecision() { return oprec; }$/;"	f	class:quad_float
OutputPrecision	deplib/ntl-main/include/NTL/xdouble.h	/^static long OutputPrecision() { return oprec; }$/;"	f	class:xdouble
PAR_THRESH	deplib/ntl-main/src/ZZ_pX.cpp	26;"	d	file:
PAR_THRESH	deplib/ntl-main/src/mat_GF2E.cpp	14;"	d	file:
PAR_THRESH	deplib/ntl-main/src/mat_ZZ_p.cpp	26;"	d	file:
PAR_THRESH	deplib/ntl-main/src/mat_ZZ_pE.cpp	10;"	d	file:
PAR_THRESH	deplib/ntl-main/src/mat_lzz_p.cpp	18;"	d	file:
PAR_THRESH	deplib/ntl-main/src/mat_lzz_pE.cpp	15;"	d	file:
PAR_THRESH	deplib/ntl-main/src/vec_ZZ_p.cpp	9;"	d	file:
PAR_THRESH1	deplib/ntl-main/src/ZZ_pX.cpp	28;"	d	file:
PAR_THRESH_SQ	deplib/ntl-main/src/mat_lzz_p.cpp	17;"	d	file:
PD	deplib/ntl-main/include/NTL/PD.h	/^   PD() { }$/;"	f	struct:PD
PD	deplib/ntl-main/include/NTL/PD.h	/^   PD(__m128d _data) : data(_data) { }$/;"	f	struct:PD
PD	deplib/ntl-main/include/NTL/PD.h	/^   PD(__m256d _data) : data(_data) { }$/;"	f	struct:PD
PD	deplib/ntl-main/include/NTL/PD.h	/^   PD(__m512d _data) : data(_data) { }$/;"	f	struct:PD
PD	deplib/ntl-main/include/NTL/PD.h	/^   PD(double d0, double d1)$/;"	f	struct:PD
PD	deplib/ntl-main/include/NTL/PD.h	/^   PD(double d0, double d1, double d2, double d3)$/;"	f	struct:PD
PD	deplib/ntl-main/include/NTL/PD.h	/^   PD(double d0, double d1, double d2, double d3,$/;"	f	struct:PD
PD	deplib/ntl-main/include/NTL/PD.h	/^   PD(double x) : data(_mm256_set1_pd(x)) { }$/;"	f	struct:PD
PD	deplib/ntl-main/include/NTL/PD.h	/^   PD(double x) : data(_mm512_set1_pd(x)) { }$/;"	f	struct:PD
PD	deplib/ntl-main/include/NTL/PD.h	/^   PD(double x) : data(_mm_set1_pd(x)) { }$/;"	f	struct:PD
PD	deplib/ntl-main/include/NTL/PD.h	/^struct PD {$/;"	s
PD	deplib/ntl-main/include/NTL/PD.h	/^struct PD<2> {$/;"	s
PD	deplib/ntl-main/include/NTL/PD.h	/^struct PD<4> {$/;"	s
PD	deplib/ntl-main/include/NTL/PD.h	/^struct PD<8> {$/;"	s
PDLD	deplib/ntl-main/src/pd_FFT.cpp	210;"	d	file:
PDLGSZ	deplib/ntl-main/src/pd_FFT.cpp	198;"	d	file:
PDSZ	deplib/ntl-main/src/pd_FFT.cpp	199;"	d	file:
PD_MIN_K	deplib/ntl-main/src/FFT.cpp	3030;"	d	file:
PREFIX	deplib/ntl-main/src/makefile	/^PREFIX=$(DEF_PREFIX)$/;"	m
PROGS	deplib/ntl-main/src/makefile	/^PROGS=QuickTest ZZTest SSMulTest ZZ_pXTest lzz_pXTest BerlekampTest CanZassTest \\$/;"	m
PUTU32	deplib/ntl-main/src/ZZ.cpp	2647;"	d	file:
PUTU32	deplib/ntl-main/src/ZZ.cpp	2650;"	d	file:
Pair	deplib/ntl-main/include/NTL/pair.h	/^   Pair() { }  $/;"	f	class:Pair
Pair	deplib/ntl-main/include/NTL/pair.h	/^   Pair(const S& x, const T& y) : a(x), b(y) { }  $/;"	f	class:Pair
Pair	deplib/ntl-main/include/NTL/pair.h	/^class Pair {  $/;"	c
PartitionInfo	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   PartitionInfo(long sz, long nt = AvailableThreads()) $/;"	f	struct:PartitionInfo
PartitionInfo	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^struct PartitionInfo {$/;"	s
PentDiv21	deplib/ntl-main/src/GF2X1.cpp	/^void PentDiv21(GF2X& q, const GF2X& a, long n, long k3, long k2, long k1)$/;"	f	file:
PentDivRem21	deplib/ntl-main/src/GF2X1.cpp	/^void PentDivRem21(GF2X& q, GF2X& r, const GF2X& a, long n, $/;"	f	file:
PentDivRemX1	deplib/ntl-main/src/GF2X1.cpp	/^void PentDivRemX1(GF2X& q, GF2X& r, const GF2X& aa, long n, $/;"	f	file:
PentDivX1	deplib/ntl-main/src/GF2X1.cpp	/^void PentDivX1(GF2X& q, const GF2X& aa, long n, long k3, long k2, long k1)$/;"	f	file:
PentReduce	deplib/ntl-main/src/GF2X1.cpp	/^void PentReduce(GF2X& x, const GF2X& a, long n, long k3, long k2, long k1)$/;"	f	file:
PlainDiv	deplib/ntl-main/src/GF2EX.cpp	/^void PlainDiv(GF2EX& q, const GF2EX& a, const GF2EX& b)$/;"	f
PlainDiv	deplib/ntl-main/src/GF2X1.cpp	/^void PlainDiv(GF2X& q, const GF2X& a, const GF2X& b)$/;"	f
PlainDiv	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PlainDiv(ZZ_pEX& q, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
PlainDiv	deplib/ntl-main/src/ZZ_pX.cpp	/^void PlainDiv(ZZ_pX& q, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
PlainDiv	deplib/ntl-main/src/lzz_pEX.cpp	/^void PlainDiv(zz_pEX& q, const zz_pEX& a, const zz_pEX& b)$/;"	f
PlainDiv	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainDiv(zz_pX& q, const zz_pX& a, const zz_pX& b)$/;"	f
PlainDivRem	deplib/ntl-main/src/GF2EX.cpp	/^void PlainDivRem(GF2EX& q, GF2EX& r, const GF2EX& a, const GF2EX& b)$/;"	f
PlainDivRem	deplib/ntl-main/src/GF2EX.cpp	/^void PlainDivRem(GF2EX& q, GF2EX& r, const GF2EX& a, const GF2EX& b, GF2XVec& x)$/;"	f
PlainDivRem	deplib/ntl-main/src/GF2X1.cpp	/^void PlainDivRem(GF2X& q, GF2X& r, const GF2X& a, const GF2X& b)$/;"	f
PlainDivRem	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PlainDivRem(ZZ_pEX& q, ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
PlainDivRem	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PlainDivRem(ZZ_pEX& q, ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEX& b, $/;"	f
PlainDivRem	deplib/ntl-main/src/ZZ_pX.cpp	/^void PlainDivRem(ZZ_pX& q, ZZ_pX& r, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
PlainDivRem	deplib/ntl-main/src/ZZ_pX.cpp	/^void PlainDivRem(ZZ_pX& q, ZZ_pX& r, const ZZ_pX& a, const ZZ_pX& b, ZZVec& x)$/;"	f
PlainDivRem	deplib/ntl-main/src/lzz_pEX.cpp	/^void PlainDivRem(zz_pEX& q, zz_pEX& r, const zz_pEX& a, const zz_pEX& b)$/;"	f
PlainDivRem	deplib/ntl-main/src/lzz_pEX.cpp	/^void PlainDivRem(zz_pEX& q, zz_pEX& r, const zz_pEX& a, const zz_pEX& b, $/;"	f
PlainDivRem	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainDivRem(zz_pX& q, zz_pX& r, const zz_pX& a, const zz_pX& b)$/;"	f
PlainDivide	deplib/ntl-main/src/ZZX1.cpp	/^long PlainDivide(ZZX& qq, const ZZX& aa, const ZZX& bb)$/;"	f
PlainDivide	deplib/ntl-main/src/ZZX1.cpp	/^long PlainDivide(const ZZX& a, const ZZX& b)$/;"	f
PlainFrobeniusMap	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void PlainFrobeniusMap(GF2EX& h, const GF2EXModulus& F)$/;"	f
PlainGCD	deplib/ntl-main/src/GF2EX.cpp	/^void PlainGCD(GF2EX& x, const GF2EX& a, const GF2EX& b)$/;"	f
PlainGCD	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PlainGCD(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
PlainGCD	deplib/ntl-main/src/ZZ_pX.cpp	/^void PlainGCD(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
PlainGCD	deplib/ntl-main/src/lzz_pEX.cpp	/^void PlainGCD(zz_pEX& x, const zz_pEX& a, const zz_pEX& b)$/;"	f
PlainGCD	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainGCD(zz_pX& x, const zz_pX& a, const zz_pX& b)$/;"	f
PlainInvTrunc	deplib/ntl-main/src/ZZ_pX.cpp	/^void PlainInvTrunc(ZZ_pX& x, const ZZ_pX& a, long m)$/;"	f
PlainInvTrunc	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainInvTrunc(zz_pX& x, const zz_pX& a, long m)$/;"	f
PlainMul	deplib/ntl-main/src/GF2EX.cpp	/^void PlainMul(GF2EX& x, const GF2EX& a, const GF2EX& b)$/;"	f
PlainMul	deplib/ntl-main/src/ZZX.cpp	/^void PlainMul(ZZ *xp, const ZZ *ap, long sa, const ZZ *bp, long sb)$/;"	f	file:
PlainMul	deplib/ntl-main/src/ZZX.cpp	/^void PlainMul(ZZX& x, const ZZX& a, const ZZX& b)$/;"	f
PlainMul	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PlainMul(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
PlainMul	deplib/ntl-main/src/ZZ_pX.cpp	/^void PlainMul(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
PlainMul	deplib/ntl-main/src/lzz_pEX.cpp	/^void PlainMul(zz_pEX& x, const zz_pEX& a, const zz_pEX& b)$/;"	f
PlainMul	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainMul(zz_p *xp, const zz_p *ap, long sa, const zz_p *bp, long sb)$/;"	f
PlainMul	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainMul(zz_pX& c, const zz_pX& a, const zz_pX& b)$/;"	f
PlainMul1	deplib/ntl-main/src/GF2EX.cpp	/^void PlainMul1(GF2X *xp, const GF2X *ap, long sa, const GF2X& b)$/;"	f	file:
PlainMul1	deplib/ntl-main/src/ZZX.cpp	/^static void PlainMul1(ZZ *xp, const ZZ *ap, long sa, const ZZ& b)$/;"	f	file:
PlainMulTrunc	deplib/ntl-main/src/ZZ_pX1.cpp	/^void PlainMulTrunc(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b, long n)$/;"	f
PlainMulTrunc	deplib/ntl-main/src/lzz_pX1.cpp	/^void PlainMulTrunc(zz_pX& x, const zz_pX& a, const zz_pX& b, long n)$/;"	f
PlainMul_long	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainMul_long(zz_p *xp, const zz_p *ap, long sa, const zz_p *bp, long sb)$/;"	f
PlainPseudoDiv	deplib/ntl-main/src/ZZX1.cpp	/^void PlainPseudoDiv(ZZX& q, const ZZX& a, const ZZX& b)$/;"	f
PlainPseudoDivRem	deplib/ntl-main/src/ZZX1.cpp	/^void PlainPseudoDivRem(ZZX& q, ZZX& r, const ZZX& a, const ZZX& b)$/;"	f
PlainPseudoRem	deplib/ntl-main/src/ZZX1.cpp	/^void PlainPseudoRem(ZZX& r, const ZZX& a, const ZZX& b)$/;"	f
PlainRem	deplib/ntl-main/src/GF2EX.cpp	/^void PlainRem(GF2EX& r, const GF2EX& a, const GF2EX& b)$/;"	f
PlainRem	deplib/ntl-main/src/GF2EX.cpp	/^void PlainRem(GF2EX& r, const GF2EX& a, const GF2EX& b, GF2XVec& x)$/;"	f
PlainRem	deplib/ntl-main/src/GF2X1.cpp	/^void PlainRem(GF2X& r, const GF2X& a, const GF2X& b)$/;"	f
PlainRem	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PlainRem(ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
PlainRem	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PlainRem(ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEX& b, vec_ZZ_pX& x)$/;"	f
PlainRem	deplib/ntl-main/src/ZZ_pX.cpp	/^void PlainRem(ZZ_pX& r, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
PlainRem	deplib/ntl-main/src/ZZ_pX.cpp	/^void PlainRem(ZZ_pX& r, const ZZ_pX& a, const ZZ_pX& b, ZZVec& x)$/;"	f
PlainRem	deplib/ntl-main/src/lzz_pEX.cpp	/^void PlainRem(zz_pEX& r, const zz_pEX& a, const zz_pEX& b)$/;"	f
PlainRem	deplib/ntl-main/src/lzz_pEX.cpp	/^void PlainRem(zz_pEX& r, const zz_pEX& a, const zz_pEX& b, vec_zz_pX& x)$/;"	f
PlainRem	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainRem(zz_pX& r, const zz_pX& a, const zz_pX& b)$/;"	f
PlainResultant	deplib/ntl-main/src/GF2EX.cpp	/^void PlainResultant(GF2E& rres, const GF2EX& a, const GF2EX& b)$/;"	f
PlainResultant	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PlainResultant(ZZ_pE& rres, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
PlainResultant	deplib/ntl-main/src/ZZ_pX1.cpp	/^void PlainResultant(ZZ_p& rres, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
PlainResultant	deplib/ntl-main/src/lzz_pEX.cpp	/^void PlainResultant(zz_pE& rres, const zz_pEX& a, const zz_pEX& b)$/;"	f
PlainResultant	deplib/ntl-main/src/lzz_pX1.cpp	/^void PlainResultant(zz_p& rres, const zz_pX& a, const zz_pX& b)$/;"	f
PlainSqr	deplib/ntl-main/src/ZZX.cpp	/^void PlainSqr(ZZ* xp, const ZZ* ap, long sa)$/;"	f
PlainSqr	deplib/ntl-main/src/ZZX.cpp	/^void PlainSqr(ZZX& x, const ZZX& a)$/;"	f
PlainSqr	deplib/ntl-main/src/ZZ_pX.cpp	/^void PlainSqr(ZZ_pX& x, const ZZ_pX& a)$/;"	f
PlainSqr	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainSqr(zz_p *xp, const zz_p *ap, long sa)$/;"	f
PlainSqr	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainSqr(zz_pX& c, const zz_pX& a)$/;"	f
PlainSqrTrunc	deplib/ntl-main/src/ZZ_pX1.cpp	/^void PlainSqrTrunc(ZZ_pX& x, const ZZ_pX& a, long n)$/;"	f
PlainSqrTrunc	deplib/ntl-main/src/lzz_pX1.cpp	/^void PlainSqrTrunc(zz_pX& x, const zz_pX& a, long n)$/;"	f
PlainSqr_long	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainSqr_long(zz_p *xp, const zz_p *ap, long sa)$/;"	f
PlainTraceVec	deplib/ntl-main/src/GF2EX.cpp	/^void PlainTraceVec(vec_GF2E& S, const GF2EX& ff)$/;"	f
PlainTraceVec	deplib/ntl-main/src/GF2X1.cpp	/^void PlainTraceVec(vec_GF2& S, const GF2X& f)$/;"	f	file:
PlainTraceVec	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PlainTraceVec(vec_ZZ_pE& S, const ZZ_pEX& ff)$/;"	f
PlainTraceVec	deplib/ntl-main/src/ZZ_pX1.cpp	/^void PlainTraceVec(vec_ZZ_p& S, const ZZ_pX& ff)$/;"	f
PlainTraceVec	deplib/ntl-main/src/lzz_pEX.cpp	/^void PlainTraceVec(vec_zz_pE& S, const zz_pEX& ff)$/;"	f
PlainTraceVec	deplib/ntl-main/src/lzz_pX1.cpp	/^void PlainTraceVec(vec_zz_p& S, const zz_pX& ff)$/;"	f
PlainUpdateMap	deplib/ntl-main/src/ZZ_pX1.cpp	/^void PlainUpdateMap(vec_ZZ_p& xx, const vec_ZZ_p& a, $/;"	f
PlainUpdateMap	deplib/ntl-main/src/lzz_pX1.cpp	/^void PlainUpdateMap(vec_zz_p& xx, const vec_zz_p& a, $/;"	f
PlainXGCD	deplib/ntl-main/src/ZZ_pX.cpp	/^void PlainXGCD(ZZ_pX& d, ZZ_pX& s, ZZ_pX& t, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
PlainXGCD	deplib/ntl-main/src/lzz_pX.cpp	/^void PlainXGCD(zz_pX& d, zz_pX& s, zz_pX& t, const zz_pX& a, const zz_pX& b)$/;"	f
PolyEval	deplib/ntl-main/src/ZZXFactoring.cpp	/^ZZ PolyEval(const ZZX& f, const ZZ& a)$/;"	f	file:
PossibleDegrees	deplib/ntl-main/src/ZZXFactoring.cpp	/^   ZZ PossibleDegrees;$/;"	m	struct:LocalInfoT	file:
PowerCompose	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline GF2EX PowerCompose(const GF2EX& a, long d, const GF2EXModulus& F)$/;"	f
PowerCompose	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pEX PowerCompose(const ZZ_pEX& a, long d, const ZZ_pEXModulus& F)$/;"	f
PowerCompose	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_pX PowerCompose(const ZZ_pX& a, long d, const ZZ_pXModulus& F)$/;"	f
PowerCompose	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline zz_pEX PowerCompose(const zz_pEX& a, long d, const zz_pEXModulus& F)$/;"	f
PowerCompose	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline zz_pX PowerCompose(const zz_pX& a, long d, const zz_pXModulus& F)$/;"	f
PowerCompose	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void PowerCompose(GF2EX& y, const GF2EX& h, long q, const GF2EXModulus& F)$/;"	f
PowerCompose	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void PowerCompose(ZZ_pEX& y, const ZZ_pEX& h, long q, const ZZ_pEXModulus& F)$/;"	f
PowerCompose	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void PowerCompose(ZZ_pX& y, const ZZ_pX& h, long q, const ZZ_pXModulus& F)$/;"	f
PowerCompose	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void PowerCompose(zz_pEX& y, const zz_pEX& h, long q, const zz_pEXModulus& F)$/;"	f
PowerCompose	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void PowerCompose(zz_pX& y, const zz_pX& h, long q, const zz_pXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX PowerMod(const GF2EX& g, const ZZ& e, const GF2EXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX PowerMod(const GF2EX& g, long e, const GF2EXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void PowerMod(GF2EX& h, const GF2EX& g, long e, const GF2EXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X PowerMod(const GF2X& g, const ZZ& e, const GF2XModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X PowerMod(const GF2X& g, long e, const GF2XModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline void PowerMod(GF2X& x, const GF2X& g, long e, const GF2XModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ PowerMod(const ZZ& a, const ZZ& e, const ZZ& n)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ PowerMod(const ZZ& a, long e, const ZZ& n)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline void PowerMod(ZZ& x, const ZZ& a, long e, const ZZ& n)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX PowerMod(const ZZ_pEX& g, const ZZ& e, $/;"	f
PowerMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX PowerMod(const ZZ_pEX& g, long e, const ZZ_pEXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void PowerMod(ZZ_pEX& h, const ZZ_pEX& g, long e, $/;"	f
PowerMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerMod(const ZZ_pX& a, const ZZ& e, const ZZ_pXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerMod(const ZZ_pX& a, long e, const ZZ_pXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void PowerMod(ZZ_pX& x, const ZZ_pX& a, long e, const ZZ_pXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void PowerMod(zz_pEX& h, const zz_pEX& g, long e, $/;"	f
PowerMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX PowerMod(const zz_pEX& g, const ZZ& e, $/;"	f
PowerMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX PowerMod(const zz_pEX& g, long e, const zz_pEXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void PowerMod(zz_pX& x, const zz_pX& a, long e, const zz_pXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX PowerMod(const zz_pX& a, const ZZ& e, const zz_pXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX PowerMod(const zz_pX& a, long e, const zz_pXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/src/GF2EX.cpp	/^void PowerMod(GF2EX& h, const GF2EX& g, const ZZ& e, const GF2EXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/src/GF2X1.cpp	/^void PowerMod(GF2X& h, const GF2X& g, const ZZ& e, const GF2XModulus& F)$/;"	f
PowerMod	deplib/ntl-main/src/ZZ.cpp	/^long PowerMod(long a, long ee, long n)$/;"	f
PowerMod	deplib/ntl-main/src/ZZ.cpp	/^void PowerMod(ZZ& x, const ZZ& a, const ZZ& e, const ZZ& n)$/;"	f
PowerMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PowerMod(ZZ_pEX& h, const ZZ_pEX& g, const ZZ& e, const ZZ_pEXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/src/ZZ_pX.cpp	/^void PowerMod(ZZ_pX& h, const ZZ_pX& g, const ZZ& e, const ZZ_pXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void PowerMod(zz_pEX& h, const zz_pEX& g, const ZZ& e, const zz_pEXModulus& F)$/;"	f
PowerMod	deplib/ntl-main/src/lzz_pX.cpp	/^void PowerMod(zz_pX& h, const zz_pX& g, const ZZ& e, const zz_pXModulus& F)$/;"	f
PowerOf10	deplib/ntl-main/src/xdouble.cpp	/^xdouble PowerOf10(const ZZ& e)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX PowerXMod(const ZZ& e, const GF2EXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX PowerXMod(long e, const GF2EXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void PowerXMod(GF2EX& h, long e, const GF2EXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X PowerXMod(const ZZ& e, const GF2XModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X PowerXMod(long e, const GF2XModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline void PowerXMod(GF2X& x, long e, const GF2XModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX PowerXMod(const ZZ& e, const ZZ_pEXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX PowerXMod(long e, const ZZ_pEXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void PowerXMod(ZZ_pEX& h, long e, const ZZ_pEXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerXMod(const ZZ& e, const ZZ_pXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerXMod(long e, const ZZ_pXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void PowerXMod(ZZ_pX& x, long e, const ZZ_pXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void PowerXMod(zz_pEX& h, long e, const zz_pEXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX PowerXMod(const ZZ& e, const zz_pEXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX PowerXMod(long e, const zz_pEXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void PowerXMod(zz_pX& x, long e, const zz_pXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX PowerXMod(const ZZ& e, const zz_pXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX PowerXMod(long e, const zz_pXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/src/GF2EX.cpp	/^void PowerXMod(GF2EX& hh, const ZZ& e, const GF2EXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/src/GF2X1.cpp	/^void PowerXMod(GF2X& hh, const ZZ& e, const GF2XModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PowerXMod(ZZ_pEX& hh, const ZZ& e, const ZZ_pEXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/src/ZZ_pX.cpp	/^void PowerXMod(ZZ_pX& hh, const ZZ& e, const ZZ_pXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void PowerXMod(zz_pEX& hh, const ZZ& e, const zz_pEXModulus& F)$/;"	f
PowerXMod	deplib/ntl-main/src/lzz_pX.cpp	/^void PowerXMod(zz_pX& hh, const ZZ& e, const zz_pXModulus& F)$/;"	f
PowerXPlusAMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerXPlusAMod(const ZZ_p& a, const ZZ& e, const ZZ_pXModulus& F)$/;"	f
PowerXPlusAMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX PowerXPlusAMod(const ZZ_p& a, long e, const ZZ_pXModulus& F)$/;"	f
PowerXPlusAMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void PowerXPlusAMod(ZZ_pX& x, const ZZ_p& a, long e, const ZZ_pXModulus& F)$/;"	f
PowerXPlusAMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void PowerXPlusAMod(zz_pX& x, zz_p a, long e, const zz_pXModulus& F)$/;"	f
PowerXPlusAMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX PowerXPlusAMod(zz_p a, const ZZ& e, const zz_pXModulus& F)$/;"	f
PowerXPlusAMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX PowerXPlusAMod(zz_p a, long e, const zz_pXModulus& F)$/;"	f
PowerXPlusAMod	deplib/ntl-main/src/ZZ_pX.cpp	/^void PowerXPlusAMod(ZZ_pX& hh, const ZZ_p& a, const ZZ& e, const ZZ_pXModulus& F)$/;"	f
PowerXPlusAMod	deplib/ntl-main/src/lzz_pX.cpp	/^void PowerXPlusAMod(zz_pX& hh, zz_p a, const ZZ& e, const zz_pXModulus& F)$/;"	f
PrecomputeProj	deplib/ntl-main/src/GF2EX.cpp	/^void PrecomputeProj(vec_GF2& proj, const GF2X& f)$/;"	f
PrecomputeProj	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PrecomputeProj(vec_ZZ_p& proj, const ZZ_pX& f)$/;"	f
PrecomputeProj	deplib/ntl-main/src/lzz_pEX.cpp	/^void PrecomputeProj(vec_zz_p& proj, const zz_pX& f)$/;"	f
PrepMulDivRem	deplib/ntl-main/include/NTL/sp_arith.h	/^inline muldivrem_t PrepMulDivRem(long b, long n)$/;"	f
PrepMulDivRem	deplib/ntl-main/include/NTL/sp_arith.h	/^inline sp_muldivrem_struct PrepMulDivRem(long b, long n, sp_inverse ninv)$/;"	f
PrepMulDivRem	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double PrepMulDivRem(long b, long n, wide_double ninv)$/;"	f
PrepMulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^PrepMulMod(long n)$/;"	f
PrepMulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double PrepMulMod(long n)$/;"	f
PrepMulModPrecon	deplib/ntl-main/include/NTL/sp_arith.h	/^PrepMulModPrecon(long b, long n, sp_inverse ninv)$/;"	f
PrepMulModPrecon	deplib/ntl-main/include/NTL/sp_arith.h	/^inline mulmod_precon_t PrepMulModPrecon(long b, long n)$/;"	f
PrepMulModPrecon	deplib/ntl-main/include/NTL/sp_arith.h	/^inline unsigned long PrepMulModPrecon(long b, long n, wide_double ninv)$/;"	f
PrepMulModPrecon	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double PrepMulModPrecon(long b, long n, wide_double ninv)$/;"	f
PrepareProjection	deplib/ntl-main/src/GF2EX.cpp	/^void PrepareProjection(vec_vec_GF2& tt, const vec_GF2E& s,$/;"	f
PrepareProjection	deplib/ntl-main/src/ZZ_pEX.cpp	/^void PrepareProjection(vec_vec_ZZ_p& tt, const vec_ZZ_pE& s,$/;"	f
PrepareProjection	deplib/ntl-main/src/lzz_pEX.cpp	/^void PrepareProjection(vec_vec_zz_p& tt, const vec_zz_pE& s,$/;"	f
PrimeCnt	deplib/ntl-main/include/NTL/lzz_p.h	/^   long PrimeCnt;    \/\/ 0 for FFT prime;  otherwise same as NumPrimes$/;"	m	class:zz_pInfoT
PrimeCnt	deplib/ntl-main/include/NTL/lzz_p.h	/^static long PrimeCnt() { return zz_pInfo->PrimeCnt; }$/;"	f	class:zz_p
PrimeSeq	deplib/ntl-main/include/NTL/ZZ.h	/^class PrimeSeq {$/;"	c
PrimeSeq	deplib/ntl-main/src/ZZ.cpp	/^PrimeSeq::PrimeSeq()$/;"	f	class:PrimeSeq
PrimitivePart	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX PrimitivePart(const ZZX& f)$/;"	f
PrimitivePart	deplib/ntl-main/src/ZZX1.cpp	/^void PrimitivePart(ZZX& pp, const ZZX& f)$/;"	f
PrintDigits	deplib/ntl-main/src/ZZ.cpp	/^void PrintDigits(ostream& s, long d, long justify)$/;"	f	file:
PrintInfo	deplib/ntl-main/src/ZZXFactoring.cpp	/^void PrintInfo(const char *s, const ZZ& a, const ZZ& b)$/;"	f	file:
PrintName	deplib/ntl-main/src/newnames.cpp	/^void PrintName(const char *name)$/;"	f
PrintTime	deplib/ntl-main/src/tools.cpp	/^void PrintTime(ostream& s, double t)$/;"	f
ProbComputeDegree	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^long ProbComputeDegree(const ZZ_pX& h, const ZZ_pXModulus& F)$/;"	f
ProbComputeDegree	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^long ProbComputeDegree(const zz_pX& h, const zz_pXModulus& F)$/;"	f
ProbIrredTest	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long ProbIrredTest(const GF2EX& f, long iter)$/;"	f
ProbIrredTest	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^long ProbIrredTest(const ZZ_pEX& f, long iter)$/;"	f
ProbIrredTest	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^long ProbIrredTest(const ZZ_pX& f, long iter)$/;"	f
ProbIrredTest	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^long ProbIrredTest(const zz_pEX& f, long iter)$/;"	f
ProbIrredTest	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^long ProbIrredTest(const zz_pX& f, long iter)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX ProbMinPolyMod(const GF2EX& g, const GF2EXModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX ProbMinPolyMod(const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X ProbMinPolyMod(const GF2X& g, const GF2XModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X ProbMinPolyMod(const GF2X& g, const GF2XModulus& F, long m)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX ProbMinPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX ProbMinPolyMod(const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX ProbMinPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX ProbMinPolyMod(const ZZ_pX& g, const ZZ_pXModulus& F, long m)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void ProbMinPolyMod(ZZ_pX& h, const ZZ_pX& g, const ZZ_pXModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX ProbMinPolyMod(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX ProbMinPolyMod(const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void ProbMinPolyMod(zz_pX& h, const zz_pX& g, const zz_pXModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX ProbMinPolyMod(const zz_pX& g, const zz_pXModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX ProbMinPolyMod(const zz_pX& g, const zz_pXModulus& F, long m)$/;"	f
ProbMinPolyMod	deplib/ntl-main/src/GF2EX.cpp	/^void ProbMinPolyMod(GF2EX& h, const GF2EX& g, const GF2EXModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/src/GF2EX.cpp	/^void ProbMinPolyMod(GF2EX& h, const GF2EX& g, const GF2EXModulus& F, long m)$/;"	f
ProbMinPolyMod	deplib/ntl-main/src/GF2X1.cpp	/^void ProbMinPolyMod(GF2X& h, const GF2X& g, const GF2XModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/src/GF2X1.cpp	/^void ProbMinPolyMod(GF2X& h, const GF2X& g, const GF2XModulus& F, long m)$/;"	f
ProbMinPolyMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ProbMinPolyMod(ZZ_pEX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ProbMinPolyMod(ZZ_pEX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F, long m)$/;"	f
ProbMinPolyMod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void ProbMinPolyMod(ZZ_pX& h, const ZZ_pX& g, const ZZ_pXModulus& F, long m) $/;"	f
ProbMinPolyMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void ProbMinPolyMod(zz_pEX& h, const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
ProbMinPolyMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void ProbMinPolyMod(zz_pEX& h, const zz_pEX& g, const zz_pEXModulus& F, long m)$/;"	f
ProbMinPolyMod	deplib/ntl-main/src/lzz_pX1.cpp	/^void ProbMinPolyMod(zz_pX& h, const zz_pX& g, const zz_pXModulus& F, long m)$/;"	f
ProbMinPolyTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2X ProbMinPolyTower(const GF2EX& g, const GF2EXModulus& F)$/;"	f
ProbMinPolyTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2X ProbMinPolyTower(const GF2EX& g, const GF2EXModulus& F,$/;"	f
ProbMinPolyTower	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void ProbMinPolyTower(GF2X& h, const GF2EX& g, $/;"	f
ProbMinPolyTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pX ProbMinPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F)$/;"	f
ProbMinPolyTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pX ProbMinPolyTower(const ZZ_pEX& g, const ZZ_pEXModulus& F,$/;"	f
ProbMinPolyTower	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void ProbMinPolyTower(ZZ_pX& h, const ZZ_pEX& g, $/;"	f
ProbMinPolyTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void ProbMinPolyTower(zz_pX& h, const zz_pEX& g, $/;"	f
ProbMinPolyTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pX ProbMinPolyTower(const zz_pEX& g, const zz_pEXModulus& F)$/;"	f
ProbMinPolyTower	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pX ProbMinPolyTower(const zz_pEX& g, const zz_pEXModulus& F,$/;"	f
ProbMinPolyTower	deplib/ntl-main/src/GF2EX.cpp	/^void ProbMinPolyTower(GF2X& h, const GF2EX& g, const GF2EXModulus& F, $/;"	f
ProbMinPolyTower	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ProbMinPolyTower(ZZ_pX& h, const ZZ_pEX& g, const ZZ_pEXModulus& F, $/;"	f
ProbMinPolyTower	deplib/ntl-main/src/lzz_pEX.cpp	/^void ProbMinPolyTower(zz_pX& h, const zz_pEX& g, const zz_pEXModulus& F, $/;"	f
ProbPrime	deplib/ntl-main/src/ZZ.cpp	/^long ProbPrime(const ZZ& n, long NumTrials)$/;"	f
ProbPrime	deplib/ntl-main/src/ZZ.cpp	/^long ProbPrime(long n, long NumTrials)$/;"	f
ProcessTable	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void ProcessTable(GF2EX& f, vec_pair_GF2EX_long& factors, $/;"	f	file:
ProcessTable	deplib/ntl-main/src/GF2XFactoring.cpp	/^void ProcessTable(GF2X& f, vec_pair_GF2X_long& factors, $/;"	f	file:
ProcessTable	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void ProcessTable(ZZ_pX& f, vec_pair_ZZ_pX_long& factors, $/;"	f	file:
ProcessTable	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void ProcessTable(zz_pX& f, vec_pair_zz_pX_long& factors, $/;"	f	file:
ProjectPowers	deplib/ntl-main/include/NTL/GF2EX.h	/^inline vec_GF2E ProjectPowers(const vec_GF2E& a, long k, $/;"	f
ProjectPowers	deplib/ntl-main/include/NTL/GF2X.h	/^inline vec_GF2 ProjectPowers(const vec_GF2& a, long k, $/;"	f
ProjectPowers	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline vec_ZZ_pE ProjectPowers(const vec_ZZ_pE& a, long k, $/;"	f
ProjectPowers	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline vec_ZZ_p ProjectPowers(const vec_ZZ_p& a, long k,$/;"	f
ProjectPowers	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline vec_zz_pE ProjectPowers(const vec_zz_pE& a, long k, $/;"	f
ProjectPowers	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline vec_zz_p ProjectPowers(const vec_zz_p& a, long k,$/;"	f
ProjectPowers	deplib/ntl-main/src/GF2EX.cpp	/^void ProjectPowers(vec_GF2E& x, const GF2EX& a, long k, $/;"	f	file:
ProjectPowers	deplib/ntl-main/src/GF2EX.cpp	/^void ProjectPowers(vec_GF2E& x, const GF2EX& a, long k, const GF2EX& h, $/;"	f	file:
ProjectPowers	deplib/ntl-main/src/GF2EX.cpp	/^void ProjectPowers(vec_GF2E& x, const vec_GF2E& a, long k, $/;"	f
ProjectPowers	deplib/ntl-main/src/GF2EX.cpp	/^void ProjectPowers(vec_GF2E& x, const vec_GF2E& a, long k,$/;"	f
ProjectPowers	deplib/ntl-main/src/GF2X1.cpp	/^void ProjectPowers(GF2X& x, const GF2X& a, long k, const GF2X& h, $/;"	f
ProjectPowers	deplib/ntl-main/src/GF2X1.cpp	/^void ProjectPowers(GF2X& x, const GF2X& a, long k, const GF2XArgument& H,$/;"	f
ProjectPowers	deplib/ntl-main/src/GF2X1.cpp	/^void ProjectPowers(vec_GF2& x, const vec_GF2& a, long k, $/;"	f
ProjectPowers	deplib/ntl-main/src/GF2X1.cpp	/^void ProjectPowers(vec_GF2& x, const vec_GF2& a, long k, const GF2X& H,$/;"	f
ProjectPowers	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ProjectPowers(vec_ZZ_pE& x, const ZZ_pEX& a, long k, $/;"	f	file:
ProjectPowers	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ProjectPowers(vec_ZZ_pE& x, const ZZ_pEX& a, long k, const ZZ_pEX& h, $/;"	f	file:
ProjectPowers	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ProjectPowers(vec_ZZ_pE& x, const vec_ZZ_pE& a, long k,$/;"	f
ProjectPowers	deplib/ntl-main/src/ZZ_pX1.cpp	/^NTL_TBDECL(ProjectPowers)(vec_ZZ_p& x, const vec_ZZ_p& a, long k,$/;"	f
ProjectPowers	deplib/ntl-main/src/ZZ_pX1.cpp	/^void ProjectPowers(vec_ZZ_p& x, const vec_ZZ_p& a, long k,$/;"	f
ProjectPowers	deplib/ntl-main/src/lzz_pEX.cpp	/^void ProjectPowers(vec_zz_pE& x, const vec_zz_pE& a, long k,$/;"	f
ProjectPowers	deplib/ntl-main/src/lzz_pEX.cpp	/^void ProjectPowers(vec_zz_pE& x, const zz_pEX& a, long k, $/;"	f	file:
ProjectPowers	deplib/ntl-main/src/lzz_pEX.cpp	/^void ProjectPowers(vec_zz_pE& x, const zz_pEX& a, long k, const zz_pEX& h, $/;"	f	file:
ProjectPowers	deplib/ntl-main/src/lzz_pX1.cpp	/^void ProjectPowers(vec_zz_p& x, const vec_zz_p& a, long k,$/;"	f
ProjectPowersTower	deplib/ntl-main/src/GF2EX.cpp	/^void ProjectPowersTower(vec_GF2& x, const vec_GF2E& a, long k,$/;"	f
ProjectPowersTower	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ProjectPowersTower(vec_ZZ_p& x, const vec_ZZ_pE& a, long k,$/;"	f
ProjectPowersTower	deplib/ntl-main/src/lzz_pEX.cpp	/^void ProjectPowersTower(vec_zz_p& x, const vec_zz_pE& a, long k,$/;"	f
ProjectedInnerProduct	deplib/ntl-main/src/GF2EX.cpp	/^void ProjectedInnerProduct(ref_GF2 x, const vec_GF2E& a, $/;"	f
ProjectedInnerProduct	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ProjectedInnerProduct(ZZ_p& x, const vec_ZZ_pE& a, $/;"	f
ProjectedInnerProduct	deplib/ntl-main/src/lzz_pEX.cpp	/^void ProjectedInnerProduct(zz_p& x, const vec_zz_pE& a, $/;"	f
Protect	deplib/ntl-main/src/quad_float.cpp	/^double Protect(double x) { return x + quad_float_zero; }$/;"	f	file:
Protect	deplib/ntl-main/src/quad_float.cpp	/^double Protect(double x) { return x; }$/;"	f	file:
PseudoDiv	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX PseudoDiv(const ZZX& a, const ZZX& b)$/;"	f
PseudoDiv	deplib/ntl-main/include/NTL/ZZX.h	/^inline void PseudoDiv(ZZX& q, const ZZX& a, const ZZX& b)$/;"	f
PseudoDivRem	deplib/ntl-main/include/NTL/ZZX.h	/^inline void PseudoDivRem(ZZX& q, ZZX& r, const ZZX& a, const ZZX& b)$/;"	f
PseudoRem	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX PseudoRem(const ZZX& a, const ZZX& b)$/;"	f
PseudoRem	deplib/ntl-main/include/NTL/ZZX.h	/^inline void PseudoRem(ZZX& r, const ZZX& a, const ZZX& b)$/;"	f
QUARTERROUND	deplib/ntl-main/src/ZZ.cpp	1861;"	d	file:
QuickAccumBegin	deplib/ntl-main/include/NTL/ZZ.h	/^void QuickAccumBegin(ZZ& x, long sz)$/;"	f
QuickAccumEnd	deplib/ntl-main/include/NTL/ZZ.h	/^void QuickAccumEnd(ZZ& x)$/;"	f
QuickAccumMulAdd	deplib/ntl-main/include/NTL/ZZ.h	/^void QuickAccumMulAdd(ZZ& x, const ZZ& y, long b)$/;"	f
QuickRem	deplib/ntl-main/include/NTL/ZZ.h	/^inline void QuickRem(ZZ& r, const ZZ& b)$/;"	f
QuickSetLength	deplib/ntl-main/include/NTL/WordVector.h	/^   void QuickSetLength(long n) { rep[-1] = _ntl_ulong(n); } $/;"	f	class:WordVector
QuickSetLength	deplib/ntl-main/include/NTL/vector.h	/^   void QuickSetLength(long n) { NTL_VEC_HEAD(_vec__rep)->length = n; } $/;"	f	class:Vec
RANLIB	deplib/ntl-main/src/makefile	/^RANLIB=ranlib$/;"	m
RANSTREAM_BUFSZ	deplib/ntl-main/src/ZZ.cpp	3095;"	d	file:
RANSTREAM_CHUNKSZ	deplib/ntl-main/src/ZZ.cpp	3094;"	d	file:
RANSTREAM_NCHUNKS	deplib/ntl-main/src/ZZ.cpp	3017;"	d	file:
RANSTREAM_NCHUNKS	deplib/ntl-main/src/ZZ.cpp	3068;"	d	file:
RANSTREAM_STATESZ	deplib/ntl-main/src/ZZ.cpp	3092;"	d	file:
REDC_CROSS	deplib/ntl-main/src/lip.cpp	5737;"	d	file:
REM_ONE_SZ	deplib/ntl-main/src/lip.cpp	8428;"	d	file:
ROL_VEC_12	deplib/ntl-main/src/ZZ.cpp	2994;"	d	file:
ROL_VEC_12	deplib/ntl-main/src/ZZ.cpp	3046;"	d	file:
ROL_VEC_16	deplib/ntl-main/src/ZZ.cpp	2999;"	d	file:
ROL_VEC_16	deplib/ntl-main/src/ZZ.cpp	3051;"	d	file:
ROL_VEC_7	deplib/ntl-main/src/ZZ.cpp	2993;"	d	file:
ROL_VEC_7	deplib/ntl-main/src/ZZ.cpp	3045;"	d	file:
ROL_VEC_8	deplib/ntl-main/src/CheckSSSE3.cpp	23;"	d	file:
ROL_VEC_8	deplib/ntl-main/src/ZZ.cpp	2996;"	d	file:
ROL_VEC_8	deplib/ntl-main/src/ZZ.cpp	3048;"	d	file:
ROR_VEC_V1	deplib/ntl-main/src/ZZ.cpp	2990;"	d	file:
ROR_VEC_V1	deplib/ntl-main/src/ZZ.cpp	3042;"	d	file:
ROR_VEC_V2	deplib/ntl-main/src/ZZ.cpp	2991;"	d	file:
ROR_VEC_V2	deplib/ntl-main/src/ZZ.cpp	3043;"	d	file:
ROR_VEC_V3	deplib/ntl-main/src/ZZ.cpp	2992;"	d	file:
ROR_VEC_V3	deplib/ntl-main/src/ZZ.cpp	3044;"	d	file:
ROTLEFT	deplib/ntl-main/src/ZZ.cpp	1594;"	d	file:
ROTRIGHT	deplib/ntl-main/src/ZZ.cpp	1595;"	d	file:
RR	deplib/ntl-main/include/NTL/RR.h	/^RR() {  e = 0; }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^RR(RR& z, INIT_TRANS_TYPE) : x(z.x, INIT_TRANS), e(z.e) { } $/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^class RR {$/;"	c
RR	deplib/ntl-main/include/NTL/RR.h	/^explicit RR(double a) : e(0) { *this = a; }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, const RR& a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, const ZZ& a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, const char *a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, const quad_float& a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, const xdouble& a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, double a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, float a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, int a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, long a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, unsigned int a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR::RR(INIT_VAL_TYPE, unsigned long a) { e = 0; conv(*this, a); }$/;"	f	class:RR
RROutputPush	deplib/ntl-main/include/NTL/RR.h	/^   RROutputPush() : old_p(RR::oprec) { }$/;"	f	class:RROutputPush
RROutputPush	deplib/ntl-main/include/NTL/RR.h	/^class RROutputPush {$/;"	c
RRPush	deplib/ntl-main/include/NTL/RR.h	/^   RRPush() : old_p(RR::prec) { }$/;"	f	class:RRPush
RRPush	deplib/ntl-main/include/NTL/RR.h	/^class RRPush {$/;"	c
RR_GS	deplib/ntl-main/src/LLL_FP.cpp	/^static void RR_GS(mat_ZZ& B, double **B1, double **mu, $/;"	f	file:
RR_GS_time	deplib/ntl-main/src/LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double RR_GS_time = 0;$/;"	v	file:
RandomBasisElt	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void RandomBasisElt(GF2EX& g, const vec_long& D, const vec_GF2XVec& M)$/;"	f	file:
RandomBasisElt	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void RandomBasisElt(ZZ_pX& g, const vec_long& D, const vec_ZZVec& M)$/;"	f	file:
RandomBasisElt	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void RandomBasisElt(zz_pX& g, mat_zz_p& ker)$/;"	f	file:
RandomBits	deplib/ntl-main/include/NTL/ZZ.h	/^inline void RandomBits(long& x, long l) { x = RandomBits_long(l); }$/;"	f
RandomBits	deplib/ntl-main/src/ZZ.cpp	/^void RandomBits(ZZ& x, long l)$/;"	f
RandomBits_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ RandomBits_ZZ(long NumBits)$/;"	f
RandomBits_long	deplib/ntl-main/src/ZZ.cpp	/^long RandomBits_long(long l)$/;"	f
RandomBits_ulong	deplib/ntl-main/src/ZZ.cpp	/^unsigned long RandomBits_ulong(long l)$/;"	f
RandomBnd	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ RandomBnd(const ZZ& n)$/;"	f
RandomBnd	deplib/ntl-main/include/NTL/ZZ.h	/^inline void RandomBnd(long& x, long n) { x = RandomBnd(n); }$/;"	f
RandomBnd	deplib/ntl-main/src/ZZ.cpp	/^long RandomBnd(long bnd)$/;"	f
RandomBnd	deplib/ntl-main/src/ZZ.cpp	/^void RandomBnd(ZZ& x, const ZZ& bnd)$/;"	f
RandomBndGenerator	deplib/ntl-main/include/NTL/ZZ.h	/^   RandomBndGenerator() : p(0) { }$/;"	f	struct:RandomBndGenerator
RandomBndGenerator	deplib/ntl-main/include/NTL/ZZ.h	/^   RandomBndGenerator(long _p) : p(0) { build(_p); }$/;"	f	struct:RandomBndGenerator
RandomBndGenerator	deplib/ntl-main/include/NTL/ZZ.h	/^struct RandomBndGenerator {$/;"	s
RandomLen	deplib/ntl-main/include/NTL/ZZ.h	/^inline void RandomLen(long& x, long l) { x = RandomLen_long(l); }$/;"	f
RandomLen	deplib/ntl-main/src/ZZ.cpp	/^void RandomLen(ZZ& x, long l)$/;"	f
RandomLen_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ RandomLen_ZZ(long NumBits)$/;"	f
RandomLen_long	deplib/ntl-main/src/ZZ.cpp	/^long RandomLen_long(long l)$/;"	f
RandomPrime	deplib/ntl-main/src/ZZ.cpp	/^void RandomPrime(ZZ& n, long l, long NumTrials)$/;"	f
RandomPrime_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ RandomPrime_ZZ(long l, long NumTrials=10)$/;"	f
RandomPrime_long	deplib/ntl-main/src/ZZ.cpp	/^long RandomPrime_long(long l, long NumTrials)$/;"	f
RandomStream	deplib/ntl-main/include/NTL/ZZ.h	/^   RandomStream(const RandomStream& other) {$/;"	f	class:RandomStream
RandomStream	deplib/ntl-main/include/NTL/ZZ.h	/^   RandomStream(const unsigned char *key) {$/;"	f	class:RandomStream
RandomStream	deplib/ntl-main/include/NTL/ZZ.h	/^class RandomStream {$/;"	c
RandomStreamPush	deplib/ntl-main/include/NTL/ZZ.h	/^   RandomStreamPush() : saved(GetCurrentRandomStream()) { }$/;"	f	class:RandomStreamPush
RandomStreamPush	deplib/ntl-main/include/NTL/ZZ.h	/^class RandomStreamPush {$/;"	c
RandomStream_impl	deplib/ntl-main/src/ZZ.cpp	/^   RandomStream_impl(const RandomStream_impl& other) $/;"	f	struct:RandomStream_impl
RandomStream_impl	deplib/ntl-main/src/ZZ.cpp	/^   RandomStream_impl(const unsigned char *k)$/;"	f	struct:RandomStream_impl
RandomStream_impl	deplib/ntl-main/src/ZZ.cpp	/^   RandomStream_impl(const unsigned char *key) $/;"	f	struct:RandomStream_impl
RandomStream_impl	deplib/ntl-main/src/ZZ.cpp	/^   RandomStream_impl(const unsigned char *key)$/;"	f	struct:RandomStream_impl
RandomStream_impl	deplib/ntl-main/src/ZZ.cpp	/^struct RandomStream_impl {$/;"	s	file:
RandomStream_impl_build	deplib/ntl-main/src/ZZ.cpp	/^RandomStream_impl_build(const RandomStream_impl& other)$/;"	f
RandomStream_impl_build	deplib/ntl-main/src/ZZ.cpp	/^RandomStream_impl_build(const unsigned char *key)$/;"	f
RandomStream_impl_copy	deplib/ntl-main/src/ZZ.cpp	/^RandomStream_impl_copy(RandomStream_impl& x, const RandomStream_impl& y)$/;"	f
RandomStream_impl_delete	deplib/ntl-main/src/ZZ.cpp	/^RandomStream_impl_delete(RandomStream_impl* p)$/;"	f
RandomStream_impl_deleter	deplib/ntl-main/include/NTL/ZZ.h	/^RandomStream_impl_deleter {$/;"	s
RandomStream_impl_get_buf	deplib/ntl-main/src/ZZ.cpp	/^RandomStream_impl_get_buf(const RandomStream_impl& x)$/;"	f
RandomStream_impl_get_buf_len	deplib/ntl-main/src/ZZ.cpp	/^RandomStream_impl_get_buf_len(const RandomStream_impl& x)$/;"	f
RandomStream_impl_get_bytes	deplib/ntl-main/src/ZZ.cpp	/^RandomStream_impl_get_bytes(RandomStream_impl& impl, $/;"	f
RandomStream_impl_set_nonce	deplib/ntl-main/src/ZZ.cpp	/^RandomStream_impl_set_nonce(RandomStream_impl& impl, unsigned long nonce)$/;"	f
RandomWord	deplib/ntl-main/src/ZZ.cpp	/^unsigned long RandomWord()$/;"	f
RatioInit1	deplib/ntl-main/src/ZZXFactoring.cpp	/^void RatioInit1(vec_ulong& ratio, const vec_ZZ_pX& W, const ZZ_p& lc,$/;"	f	file:
RawConvert	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void RawConvert(Mat<MatPrime_residue_t>& X, const Mat<zz_p>& A)$/;"	f	file:
RawConvert	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void RawConvert(Mat<zz_p>& X, const Mat<MatPrime_residue_t>& A)$/;"	f	file:
RawConvertTranspose	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void RawConvertTranspose(Mat<zz_p>& X, const Mat<MatPrime_residue_t>& A)$/;"	f	file:
RawGet	deplib/ntl-main/include/NTL/vector.h	/^   T& RawGet(long i)   $/;"	f	class:Vec
RawGet	deplib/ntl-main/include/NTL/vector.h	/^   const T& RawGet(long i) const $/;"	f	class:Vec
ReAllocate	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::ReAllocate(long m, VecStrategy<false>)   $/;"	f	class:Vec
ReAllocate	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::ReAllocate(long m, VecStrategy<true>)   $/;"	f	class:Vec
ReallyComputeE	deplib/ntl-main/src/RR.cpp	/^void ReallyComputeE(RR& res)$/;"	f
ReallyComputeLn2	deplib/ntl-main/src/RR.cpp	/^void ReallyComputeLn2(RR& res)$/;"	f
ReallyComputePi	deplib/ntl-main/src/RR.cpp	/^void ReallyComputePi(RR& res)$/;"	f
ReassocDetected	deplib/ntl-main/src/MakeDesc.cpp	/^long ReassocDetected(long dp)$/;"	f
RecBuildIrred	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void RecBuildIrred(GF2EX& f, long u, const FacVec& fvec)$/;"	f	file:
RecBuildIrred	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void RecBuildIrred(ZZ_pEX& f, long u, const FacVec& fvec)$/;"	f	file:
RecBuildIrred	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void RecBuildIrred(ZZ_pX& f, long u, const FacVec& fvec)$/;"	f	file:
RecBuildIrred	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void RecBuildIrred(zz_pEX& f, long u, const FacVec& fvec)$/;"	f	file:
RecBuildIrred	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void RecBuildIrred(zz_pX& f, long u, const FacVec& fvec)$/;"	f	file:
RecComputeDegree	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long RecComputeDegree(const GF2EX& h, const GF2EXModulus& F)$/;"	f
RecComputeDegree	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long RecComputeDegree(long u, const GF2EX& h, const GF2EXModulus& F,$/;"	f	file:
RecComputeDegree	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^long RecComputeDegree(const ZZ_pEX& h, const ZZ_pEXModulus& F)$/;"	f
RecComputeDegree	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^long RecComputeDegree(long u, const ZZ_pEX& h, const ZZ_pEXModulus& F,$/;"	f
RecComputeDegree	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^long RecComputeDegree(long u, const ZZ_pX& h, const ZZ_pXModulus& F,$/;"	f	file:
RecComputeDegree	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^long RecComputeDegree(const zz_pEX& h, const zz_pEXModulus& F)$/;"	f
RecComputeDegree	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^long RecComputeDegree(long u, const zz_pEX& h, const zz_pEXModulus& F,$/;"	f
RecComputeDegree	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^long RecComputeDegree(long u, const zz_pX& h, const zz_pXModulus& F,$/;"	f
RecEDF	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void RecEDF(vec_GF2EX& factors, const GF2EX& f, const GF2EX& b, long d,$/;"	f	file:
RecEDF	deplib/ntl-main/src/GF2XFactoring.cpp	/^void RecEDF(vec_GF2X& factors, const GF2X& f, long d)$/;"	f	file:
RecEDF	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void RecEDF(vec_ZZ_pEX& factors, const ZZ_pEX& f, const ZZ_pEX& b, long d,$/;"	f
RecEDF	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void RecEDF(vec_ZZ_pX& factors, const ZZ_pX& f, const ZZ_pX& b, long d,$/;"	f	file:
RecEDF	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void RecEDF(vec_zz_pEX& factors, const zz_pEX& f, const zz_pEX& b, long d,$/;"	f
RecEDF	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void RecEDF(vec_zz_pX& factors, const zz_pX& f, const zz_pX& b, long d,$/;"	f	file:
RecFindFactors	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void RecFindFactors(vec_GF2EX& factors, const GF2EX& f, const GF2EX& g,$/;"	f	file:
RecFindFactors	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void RecFindFactors(vec_ZZ_pEX& factors, const ZZ_pEX& f, const ZZ_pEX& g,$/;"	f
RecFindFactors	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void RecFindFactors(vec_ZZ_pX& factors, const ZZ_pX& f, const ZZ_pX& g,$/;"	f	file:
RecFindFactors	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void RecFindFactors(vec_zz_pEX& factors, const zz_pEX& f, const zz_pEX& g,$/;"	f
RecFindFactors	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void RecFindFactors(vec_zz_pX& factors, const zz_pX& f, const zz_pX& g,$/;"	f	file:
RecFindRoots	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void RecFindRoots(vec_GF2E& x, const GF2EX& f)$/;"	f	file:
RecFindRoots	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void RecFindRoots(vec_ZZ_pE& x, const ZZ_pEX& f)$/;"	f	file:
RecFindRoots	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void RecFindRoots(vec_ZZ_p& x, const ZZ_pX& f)$/;"	f	file:
RecFindRoots	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void RecFindRoots(vec_zz_pE& x, const zz_pEX& f)$/;"	f	file:
RecFindRoots	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void RecFindRoots(vec_zz_p& x, const zz_pX& f)$/;"	f	file:
RecIrredTest	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long RecIrredTest(long u, const GF2EX& h, const GF2EXModulus& F,$/;"	f	file:
RecIrredTest	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^long RecIrredTest(long u, const ZZ_pEX& h, const ZZ_pEXModulus& F,$/;"	f	file:
RecIrredTest	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^long RecIrredTest(long u, const ZZ_pX& h, const ZZ_pXModulus& F,$/;"	f	file:
RecIrredTest	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^long RecIrredTest(long u, const zz_pEX& h, const zz_pEXModulus& F,$/;"	f	file:
RecIrredTest	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^long RecIrredTest(long u, const zz_pX& h, const zz_pXModulus& F,$/;"	f	file:
RecTreeLift	deplib/ntl-main/src/ZZXFactoring.cpp	/^void RecTreeLift(const vec_long& link, vec_ZZX& v, vec_ZZX& w,$/;"	f	file:
ReconstructRational	deplib/ntl-main/include/NTL/ZZ.h	/^long ReconstructRational(ZZ& a, ZZ& b, const ZZ& u, const ZZ& m, $/;"	f
RecordPattern	deplib/ntl-main/src/ZZXFactoring.cpp	/^void RecordPattern(vec_long& pat, vec_pair_zz_pX_long& fac)$/;"	f	file:
RecursiveThreadPool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   RecursiveThreadPool(BasicThreadPool* _base_pool, long _lo, long _hi) :$/;"	f	struct:RecursiveThreadPool
RecursiveThreadPool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^struct RecursiveThreadPool : BasicThreadPool {$/;"	s
RecursiveThreadPoolHelper	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   RecursiveThreadPoolHelper(RecursiveThreadPool *pool, bool seq, double load0)$/;"	f	struct:RecursiveThreadPoolHelper
RecursiveThreadPoolHelper	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^struct RecursiveThreadPoolHelper {$/;"	s
ReduceW	deplib/ntl-main/src/HNF.cpp	/^void ReduceW(vec_ZZ& u, const ZZ& a, const vec_ZZ& v, const ZZ& M, long m)$/;"	f	file:
ReferenceWrapper	deplib/ntl-main/include/NTL/SmartPtr.h	/^   ReferenceWrapper(T& _x) : x(_x) { }$/;"	f	class:ReferenceWrapper
ReferenceWrapper	deplib/ntl-main/include/NTL/SmartPtr.h	/^class ReferenceWrapper$/;"	c
ReleaseThreadPool	deplib/ntl-main/src/BasicThreadPool.cpp	/^BasicThreadPool *ReleaseThreadPool()$/;"	f
Relocate_aux_Failable	deplib/ntl-main/include/NTL/tools.h	/^struct Relocate_aux_Failable$/;"	s
Relocate_aux_Failable	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct Relocate_aux_Failable$/;"	s	file:
Relocate_aux_TwoChars	deplib/ntl-main/include/NTL/tools.h	/^struct Relocate_aux_TwoChars { char d[2]; };$/;"	s
Relocate_aux_has_any_copy	deplib/ntl-main/include/NTL/tools.h	/^constexpr bool Relocate_aux_has_any_copy(T*)$/;"	f
Relocate_aux_has_copy	deplib/ntl-main/include/NTL/tools.h	/^struct Relocate_aux_has_copy$/;"	s
Relocate_aux_has_copy	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct Relocate_aux_has_copy {$/;"	s	file:
Relocate_aux_has_trivial_copy	deplib/ntl-main/include/NTL/tools.h	/^constexpr bool Relocate_aux_has_trivial_copy(T*)$/;"	f
Relocate_aux_has_trivial_copy	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^constexpr bool Relocate_aux_has_trivial_copy(T*)$/;"	f
Relocate_aux_has_trivial_copy	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^constexpr bool Relocate_aux_has_trivial_copy(T*)$/;"	f
RemoveFactors	deplib/ntl-main/src/ZZXFactoring.cpp	/^void RemoveFactors(vec_ZZ_pX& W, const vec_long& I)$/;"	f	file:
RemoveFactors1	deplib/ntl-main/src/ZZXFactoring.cpp	/^void RemoveFactors1(vec_ZZ_p& W, const vec_long& I, long r)$/;"	f	file:
RemoveFactors1	deplib/ntl-main/src/ZZXFactoring.cpp	/^void RemoveFactors1(vec_long& W, const vec_long& I, long r)$/;"	f	file:
RemoveFactors1	deplib/ntl-main/src/ZZXFactoring.cpp	/^void RemoveFactors1(vec_ulong& W, const vec_long& I, long r)$/;"	f	file:
RemoveFactors1	deplib/ntl-main/src/ZZXFactoring.cpp	/^void RemoveFactors1(vec_vec_long& W, const vec_long& I, long r)$/;"	f	file:
RemoveFactors1	deplib/ntl-main/src/ZZXFactoring.cpp	/^void RemoveFactors1(vec_vec_ulong& W, const vec_long& I, long r)$/;"	f	file:
RemoveLast	deplib/ntl-main/src/fileio.cpp	/^void FileList::RemoveLast()$/;"	f	class:FileList
RemoveRef	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void RemoveRef() const$/;"	f	class:CloneablePtr
RemoveRef	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void RemoveRef() const$/;"	f	class:SmartPtr
ResBound	deplib/ntl-main/src/ZZX1.cpp	/^long ResBound(const ZZX& a, const ZZX& b)$/;"	f	file:
ResHalfGCD	deplib/ntl-main/src/ZZ_pX1.cpp	/^void ResHalfGCD(ZZ_pX& U, ZZ_pX& V, vec_ZZ_p& cvec, vec_long& dvec)$/;"	f
ResHalfGCD	deplib/ntl-main/src/ZZ_pX1.cpp	/^void ResHalfGCD(ZZ_pXMatrix& M_out, const ZZ_pX& U, const ZZ_pX& V, long d_red,$/;"	f
ResHalfGCD	deplib/ntl-main/src/lzz_pX1.cpp	/^void ResHalfGCD(zz_pX& U, zz_pX& V, vec_zz_p& cvec, vec_long& dvec)$/;"	f
ResHalfGCD	deplib/ntl-main/src/lzz_pX1.cpp	/^void ResHalfGCD(zz_pXMatrix& M_out, const zz_pX& U, const zz_pX& V, long d_red,$/;"	f
ResIterHalfGCD	deplib/ntl-main/src/ZZ_pX1.cpp	/^void ResIterHalfGCD(ZZ_pXMatrix& M_out, ZZ_pX& U, ZZ_pX& V, long d_red,$/;"	f
ResIterHalfGCD	deplib/ntl-main/src/lzz_pX1.cpp	/^void ResIterHalfGCD(zz_pXMatrix& M_out, zz_pX& U, zz_pX& V, long d_red,$/;"	f
ResetThreadPool	deplib/ntl-main/src/BasicThreadPool.cpp	/^void ResetThreadPool(BasicThreadPool *pool)$/;"	f
ResourceError	deplib/ntl-main/include/NTL/tools.h	/^inline void ResourceError(const char *msg) { TerminalError(msg); }$/;"	f
ResourceError	deplib/ntl-main/include/NTL/tools.h	/^inline void ResourceError(const char *msg) { throw ResourceErrorObject(msg); }$/;"	f
ResourceError	deplib/ntl-main/src/CheckThreads.cpp	/^void ResourceError(const char *msg) { TerminalError(msg); }$/;"	f
ResourceErrorObject	deplib/ntl-main/include/NTL/tools.h	/^   ResourceErrorObject(const char *msg) : ErrorObject(msg) { }$/;"	f	class:ResourceErrorObject
ResourceErrorObject	deplib/ntl-main/include/NTL/tools.h	/^class ResourceErrorObject : public ErrorObject {$/;"	c
RestoreMatPrime	deplib/ntl-main/include/NTL/MatPrime.h	/^void RestoreMatPrime(long i)$/;"	f
RevFromFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(RevFromFFTRep)(vec_ZZ_p& x, FFTRep& y, long lo, long hi)$/;"	f
RevFromFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void RevFromFFTRep(vec_ZZ_p& x, FFTRep& y, long lo, long hi)$/;"	f
RevFromfftRep	deplib/ntl-main/src/lzz_pX.cpp	/^void RevFromfftRep(vec_zz_p& x, fftRep& y, long lo, long hi)$/;"	f
RevToFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(RevToFFTRep)(FFTRep& y, const vec_ZZ_p& x, $/;"	f
RevToFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void RevToFFTRep(FFTRep& y, const vec_ZZ_p& x, $/;"	f
RevTofftRep	deplib/ntl-main/src/lzz_pX.cpp	/^void RevTofftRep(fftRep& y, const vec_zz_p& x, $/;"	f
RightShift	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX RightShift(const GF2EX& a, long n)$/;"	f
RightShift	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X RightShift(const GF2X& a, long n)$/;"	f
RightShift	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ RightShift(const ZZ& a, long k)$/;"	f
RightShift	deplib/ntl-main/include/NTL/ZZ.h	/^inline void RightShift(ZZ& x, const ZZ& a, long k)$/;"	f
RightShift	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX RightShift(const ZZX& a, long n)$/;"	f
RightShift	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX RightShift(const ZZ_pEX& a, long n)$/;"	f
RightShift	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX RightShift(const ZZ_pX& a, long n)$/;"	f
RightShift	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX RightShift(const zz_pEX& a, long n)$/;"	f
RightShift	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX RightShift(const zz_pX& a, long n)$/;"	f
RightShift	deplib/ntl-main/src/GF2EX.cpp	/^void RightShift(GF2EX& x, const GF2EX& a, long n)$/;"	f
RightShift	deplib/ntl-main/src/GF2X.cpp	/^void RightShift(GF2X& c, const GF2X& a, long n)$/;"	f
RightShift	deplib/ntl-main/src/ZZX1.cpp	/^void RightShift(ZZX& x, const ZZX& a, long n)$/;"	f
RightShift	deplib/ntl-main/src/ZZ_pEX.cpp	/^void RightShift(ZZ_pEX& x, const ZZ_pEX& a, long n)$/;"	f
RightShift	deplib/ntl-main/src/ZZ_pX1.cpp	/^void RightShift(ZZ_pX& x, const ZZ_pX& a, long n)$/;"	f
RightShift	deplib/ntl-main/src/lzz_pEX.cpp	/^void RightShift(zz_pEX& x, const zz_pEX& a, long n)$/;"	f
RightShift	deplib/ntl-main/src/lzz_pX1.cpp	/^void RightShift(zz_pX& x, const zz_pX& a, long n)$/;"	f
RightShiftAdd	deplib/ntl-main/src/GF2X1.cpp	/^void RightShiftAdd(GF2X& c, const GF2X& a, long n)$/;"	f	file:
RootBound	deplib/ntl-main/src/ZZXFactoring.cpp	/^ZZ RootBound(const ZZX& f)$/;"	f	file:
RootEDF	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline vec_GF2EX RootEDF(const GF2EX& f, long verbose=0)$/;"	f
RootEDF	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline vec_ZZ_pEX RootEDF(const ZZ_pEX& f, long verbose=0)$/;"	f
RootEDF	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline vec_ZZ_pX RootEDF(const ZZ_pX& f, long verbose=0)$/;"	f
RootEDF	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline vec_zz_pEX RootEDF(const zz_pEX& f, long verbose=0)$/;"	f
RootEDF	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline vec_zz_pX RootEDF(const zz_pX& f, long verbose=0)$/;"	f
RootEDF	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void RootEDF(vec_GF2EX& factors, const GF2EX& f, long verbose)$/;"	f
RootEDF	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void RootEDF(vec_ZZ_pEX& factors, const ZZ_pEX& f, long verbose)$/;"	f
RootEDF	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void RootEDF(vec_ZZ_pX& factors, const ZZ_pX& f, long verbose)$/;"	f
RootEDF	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void RootEDF(vec_zz_pEX& factors, const zz_pEX& f, long verbose)$/;"	f
RootEDF	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void RootEDF(vec_zz_pX& factors, const zz_pX& f, long verbose)$/;"	f
RootTable	deplib/ntl-main/include/NTL/FFT.h	/^   Vec<long> RootTable[2];$/;"	m	struct:FFTPrimeInfo
RotWord	aes_private.h	/^constexpr uint32_t RotWord(uint32_t x) {$/;"	f	namespace:__anon2
Rotate	deplib/ntl-main/src/ZZX1.cpp	/^Rotate(ZZ& a, const ZZ& b, long j, long level,$/;"	f	file:
RoundPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR RoundPrec(const RR& a, long p)$/;"	f
RoundPrec	deplib/ntl-main/src/RR.cpp	/^void RoundPrec(RR& x, const RR& a, long p)$/;"	f
RoundToPrecision	deplib/ntl-main/include/NTL/RR.h	/^inline RR RoundToPrecision(const RR& a, long p)$/;"	f
RoundToPrecision	deplib/ntl-main/src/RR.cpp	/^void RoundToPrecision(RR& x, const RR& a, long p)$/;"	f
RoundToZZ	deplib/ntl-main/include/NTL/RR.h	/^inline ZZ RoundToZZ(const RR& a)$/;"	f
RoundToZZ	deplib/ntl-main/src/RR.cpp	/^void RoundToZZ(ZZ& z, const RR& a)$/;"	f
RowTransform	deplib/ntl-main/src/G_LLL_FP.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform	deplib/ntl-main/src/G_LLL_FP.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1, $/;"	f	file:
RowTransform	deplib/ntl-main/src/G_LLL_QP.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform	deplib/ntl-main/src/G_LLL_QP.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1, $/;"	f	file:
RowTransform	deplib/ntl-main/src/G_LLL_RR.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform	deplib/ntl-main/src/G_LLL_XD.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform	deplib/ntl-main/src/LLL.cpp	/^static void RowTransform(ZZ& c1, ZZ& c2,$/;"	f	file:
RowTransform	deplib/ntl-main/src/LLL.cpp	/^static void RowTransform(vec_ZZ& c1, vec_ZZ& c2,$/;"	f	file:
RowTransform	deplib/ntl-main/src/LLL_FP.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform	deplib/ntl-main/src/LLL_FP.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1, $/;"	f	file:
RowTransform	deplib/ntl-main/src/LLL_QP.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform	deplib/ntl-main/src/LLL_QP.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1, $/;"	f	file:
RowTransform	deplib/ntl-main/src/LLL_RR.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform	deplib/ntl-main/src/LLL_XD.cpp	/^static void RowTransform(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform2	deplib/ntl-main/src/G_LLL_FP.cpp	/^static void RowTransform2(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform2	deplib/ntl-main/src/G_LLL_QP.cpp	/^static void RowTransform2(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform2	deplib/ntl-main/src/G_LLL_RR.cpp	/^static void RowTransform2(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform2	deplib/ntl-main/src/G_LLL_XD.cpp	/^static void RowTransform2(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform2	deplib/ntl-main/src/LLL_FP.cpp	/^static void RowTransform2(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform2	deplib/ntl-main/src/LLL_QP.cpp	/^static void RowTransform2(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform2	deplib/ntl-main/src/LLL_RR.cpp	/^static void RowTransform2(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransform2	deplib/ntl-main/src/LLL_XD.cpp	/^static void RowTransform2(vec_ZZ& A, vec_ZZ& B, const ZZ& MU1)$/;"	f	file:
RowTransformFinish	deplib/ntl-main/src/G_LLL_FP.cpp	/^static void RowTransformFinish(vec_ZZ& A, double *a, long *in_a)$/;"	f	file:
RowTransformFinish	deplib/ntl-main/src/G_LLL_QP.cpp	/^static void RowTransformFinish(vec_ZZ& A, quad_float *a, long *in_a)$/;"	f	file:
RowTransformFinish	deplib/ntl-main/src/LLL_FP.cpp	/^static void RowTransformFinish(vec_ZZ& A, double *a, long *in_a)$/;"	f	file:
RowTransformFinish	deplib/ntl-main/src/LLL_QP.cpp	/^static void RowTransformFinish(vec_ZZ& A, quad_float *a, long *in_a)$/;"	f	file:
RowTransformStart	deplib/ntl-main/src/G_LLL_FP.cpp	/^static void RowTransformStart(double *a, long *in_a, long& in_float, long n)$/;"	f	file:
RowTransformStart	deplib/ntl-main/src/G_LLL_QP.cpp	/^static void RowTransformStart(quad_float *a, long *in_a, long& in_float, long n)$/;"	f	file:
RowTransformStart	deplib/ntl-main/src/LLL_FP.cpp	/^static void RowTransformStart(double *a, long *in_a, long& in_float, long n)$/;"	f	file:
RowTransformStart	deplib/ntl-main/src/LLL_QP.cpp	/^static void RowTransformStart(quad_float *a, long *in_a, long& in_float, long n)$/;"	f	file:
SCRIPTS	deplib/ntl-main/src/makefile	/^SCRIPTS=MakeGetTime MakeGetPID MakeCheckFeatures ResetFeatures CopyFeatures  \\$/;"	m
SFBerlekamp	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline vec_GF2EX SFBerlekamp(const GF2EX& f, long verbose=0)$/;"	f
SFBerlekamp	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline vec_ZZ_pX SFBerlekamp(const ZZ_pX& f, long verbose=0)$/;"	f
SFBerlekamp	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline vec_zz_pX SFBerlekamp(const zz_pX& f, long verbose=0)$/;"	f
SFBerlekamp	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void SFBerlekamp(vec_GF2EX& factors, const GF2EX& ff, long verbose)$/;"	f
SFBerlekamp	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void SFBerlekamp(vec_ZZ_pX& factors, const ZZ_pX& ff, long verbose)$/;"	f
SFBerlekamp	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void SFBerlekamp(vec_zz_pX& factors, const zz_pX& ff, long verbose)$/;"	f
SFCanZass	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline vec_GF2EX SFCanZass(const GF2EX& f, long verbose=0)$/;"	f
SFCanZass	deplib/ntl-main/include/NTL/GF2XFactoring.h	/^inline vec_GF2X SFCanZass(const GF2X& f, long verbose=0)$/;"	f
SFCanZass	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline vec_ZZ_pEX SFCanZass(const ZZ_pEX& f, long verbose=0)$/;"	f
SFCanZass	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline vec_ZZ_pX SFCanZass(const ZZ_pX& f, long verbose=0)$/;"	f
SFCanZass	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline vec_zz_pEX SFCanZass(const zz_pEX& f, long verbose=0)$/;"	f
SFCanZass	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline vec_zz_pX SFCanZass(const zz_pX& f, long verbose=0)$/;"	f
SFCanZass	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void SFCanZass(vec_GF2EX& factors, const GF2EX& ff, long verbose)$/;"	f
SFCanZass	deplib/ntl-main/src/GF2XFactoring.cpp	/^void SFCanZass(vec_GF2X& factors, const GF2X& ff, long verbose)$/;"	f
SFCanZass	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void SFCanZass(vec_ZZ_pEX& factors, const ZZ_pEX& ff, long verbose)$/;"	f
SFCanZass	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void SFCanZass(vec_ZZ_pX& factors, const ZZ_pX& ff, long verbose)$/;"	f
SFCanZass	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void SFCanZass(vec_zz_pEX& factors, const zz_pEX& ff, long verbose)$/;"	f
SFCanZass	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void SFCanZass(vec_zz_pX& factors, const zz_pX& ff, long verbose)$/;"	f
SFCanZass1	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void SFCanZass1(vec_pair_zz_pX_long& u, zz_pX& h, const zz_pX& f, long verbose)$/;"	f
SFCanZass2	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void SFCanZass2(vec_zz_pX& factors, const vec_pair_zz_pX_long& u,$/;"	f
SFFactor	deplib/ntl-main/include/NTL/ZZXFactoring.h	/^inline vec_ZZX SFFactor(const ZZX& f, long verbose=0, long bnd=0)$/;"	f
SFFactor	deplib/ntl-main/src/ZZXFactoring.cpp	/^void SFFactor(vec_ZZX& factors, const ZZX& ff, $/;"	f
SFILES	deplib/ntl-main/src/makefile	/^SFILES=$(SRC) $(SCRIPTS) $(MD) $(GT) $(GP) $(CH) $(TS) $(TD) $(CROSS) mach_desc.win   \\$/;"	m
SHA256_BLOCKSIZE	deplib/ntl-main/src/ZZ.cpp	1582;"	d	file:
SHA256_CTX	deplib/ntl-main/src/ZZ.cpp	/^struct SHA256_CTX {$/;"	s	file:
SHA256_HASHSIZE	deplib/ntl-main/src/ZZ.cpp	1583;"	d	file:
SIG0	deplib/ntl-main/src/ZZ.cpp	1601;"	d	file:
SIG1	deplib/ntl-main/src/ZZ.cpp	1602;"	d	file:
SIZE	deplib/ntl-main/src/lip.cpp	/^inline long& SIZE(_ntl_gbigint p) $/;"	f	file:
SRC	deplib/ntl-main/src/makefile	/^SRC=FFT.cpp FacVec.cpp GF2.cpp GF2E.cpp GF2EX.cpp GF2EXFactoring.cpp GF2X.cpp  \\$/;"	m
SSMul	deplib/ntl-main/src/ZZX1.cpp	/^void SSMul(ZZX& c, const ZZX& a, const ZZX& b)$/;"	f
SSMul	deplib/ntl-main/src/ZZX1.cpp	/^void SSMul(ZZ_pX& c, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
SSRatio	deplib/ntl-main/src/ZZX1.cpp	/^double SSRatio(long na, long maxa, long nb, long maxb)$/;"	f
SSSqr	deplib/ntl-main/src/ZZX1.cpp	/^void SSSqr(ZZX& c, const ZZX& a)$/;"	f
SSSqr	deplib/ntl-main/src/ZZX1.cpp	/^void SSSqr(ZZ_pX& c, const ZZ_pX& a)$/;"	f
SS_AddMod	deplib/ntl-main/src/ZZX1.cpp	/^SS_AddMod(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& p, long n)$/;"	f	file:
SS_AddMod_lip_impl	deplib/ntl-main/include/NTL/ZZ.h	/^SS_AddMod_lip_impl(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& p, long n)$/;"	f
SS_BelowThresh	deplib/ntl-main/src/ZZX1.cpp	/^static inline bool SS_BelowThresh(long n, long k)$/;"	f	file:
SS_FFTRoundUp	deplib/ntl-main/src/ZZX1.cpp	/^SS_FFTRoundUp(long xn, long k)$/;"	f	file:
SS_FFT_RDUP	deplib/ntl-main/src/ZZX1.cpp	834;"	d	file:
SS_FFT_THRESH	deplib/ntl-main/src/ZZX1.cpp	832;"	d	file:
SS_NTEMPS	deplib/ntl-main/src/ZZX1.cpp	833;"	d	file:
SS_PAR_THRESH	deplib/ntl-main/src/ZZX1.cpp	759;"	d	file:
SS_SubMod	deplib/ntl-main/src/ZZX1.cpp	/^SS_SubMod(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& p, long n)$/;"	f	file:
SS_SubMod_lip_impl	deplib/ntl-main/include/NTL/ZZ.h	/^SS_SubMod_lip_impl(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& p, long n)$/;"	f
SS_butterfly	deplib/ntl-main/src/ZZX1.cpp	/^SS_butterfly(ZZ& x, ZZ& y, const ZZ& p, long n, ZZ* tmp)$/;"	f	file:
SS_fwd_butterfly	deplib/ntl-main/src/ZZX1.cpp	/^SS_fwd_butterfly(ZZ& x, ZZ& y, long j, long level, $/;"	f	file:
SS_inv_butterfly	deplib/ntl-main/src/ZZX1.cpp	/^SS_inv_butterfly(ZZ& x, ZZ& y, long j, long level, $/;"	f	file:
START	deplib/ntl-main/src/ZZ.cpp	2972;"	d	file:
START	deplib/ntl-main/src/ZZ.cpp	3026;"	d	file:
START_FIX	deplib/ntl-main/src/quad_float.cpp	82;"	d	file:
STORAGE	deplib/ntl-main/src/lip.cpp	/^inline long STORAGE(long len)$/;"	f	file:
STORAGE_OVF	deplib/ntl-main/src/lip.cpp	1321;"	d	file:
STOREU_VEC	deplib/ntl-main/src/ZZ.cpp	2975;"	d	file:
STOREU_VEC	deplib/ntl-main/src/ZZ.cpp	3029;"	d	file:
STORE_VEC	deplib/ntl-main/src/ZZ.cpp	2976;"	d	file:
STORE_VEC	deplib/ntl-main/src/ZZ.cpp	3030;"	d	file:
STOREx	deplib/ntl-main/src/ZZ.cpp	2151;"	d	file:
STRIP	deplib/ntl-main/src/lip.cpp	/^inline void STRIP(long& sz, const _ntl_limb_t *p)$/;"	f	file:
SWAP	deplib/ntl-main/src/ZZ.cpp	2643;"	d	file:
SWAP_BIGINT	deplib/ntl-main/src/lip.cpp	/^inline void SWAP_BIGINT(_ntl_gbigint& a, _ntl_gbigint& b)$/;"	f	file:
SWAP_LIMB_PTR	deplib/ntl-main/src/lip.cpp	/^inline void SWAP_LIMB_PTR(_ntl_limb_t_ptr& a, _ntl_limb_t_ptr& b)$/;"	f	file:
SWAP_LONG	deplib/ntl-main/src/lip.cpp	/^inline void SWAP_LONG(long& a, long& b)$/;"	f	file:
SZ_VEC	deplib/ntl-main/src/ZZ.cpp	3015;"	d	file:
SZ_VEC	deplib/ntl-main/src/ZZ.cpp	3066;"	d	file:
Sbox	aes_private.h	/^constexpr uint8_t Sbox[16][16] = {$/;"	m	namespace:__anon2
SecondOrderTest	deplib/ntl-main/src/ZZXFactoring.cpp	/^long SecondOrderTest(const vec_long& I_vec, const vec_vec_ulong& pair_ratio_vec,$/;"	f	file:
SetBit	deplib/ntl-main/include/NTL/ZZ.h	/^inline long SetBit(ZZ& x, long p)$/;"	f
SetCoeff	deplib/ntl-main/src/GF2EX.cpp	/^void SetCoeff(GF2EX& x, long i)$/;"	f
SetCoeff	deplib/ntl-main/src/GF2EX.cpp	/^void SetCoeff(GF2EX& x, long i, GF2 a)$/;"	f
SetCoeff	deplib/ntl-main/src/GF2EX.cpp	/^void SetCoeff(GF2EX& x, long i, const GF2E& a)$/;"	f
SetCoeff	deplib/ntl-main/src/GF2EX.cpp	/^void SetCoeff(GF2EX& x, long i, long a)$/;"	f
SetCoeff	deplib/ntl-main/src/GF2X.cpp	/^void SetCoeff(GF2X& x, long i)$/;"	f
SetCoeff	deplib/ntl-main/src/GF2X.cpp	/^void SetCoeff(GF2X& x, long i, GF2 a)$/;"	f
SetCoeff	deplib/ntl-main/src/GF2X.cpp	/^void SetCoeff(GF2X& x, long i, long val)$/;"	f
SetCoeff	deplib/ntl-main/src/ZZX.cpp	/^void SetCoeff(ZZX& x, long i)$/;"	f
SetCoeff	deplib/ntl-main/src/ZZX.cpp	/^void SetCoeff(ZZX& x, long i, const ZZ& a)$/;"	f
SetCoeff	deplib/ntl-main/src/ZZX1.cpp	/^void SetCoeff(ZZX& x, long i, long a)$/;"	f
SetCoeff	deplib/ntl-main/src/ZZ_pEX.cpp	/^void SetCoeff(ZZ_pEX& x, long i)$/;"	f
SetCoeff	deplib/ntl-main/src/ZZ_pEX.cpp	/^void SetCoeff(ZZ_pEX& x, long i, const ZZ_p& aa)$/;"	f
SetCoeff	deplib/ntl-main/src/ZZ_pEX.cpp	/^void SetCoeff(ZZ_pEX& x, long i, const ZZ_pE& a)$/;"	f
SetCoeff	deplib/ntl-main/src/ZZ_pEX.cpp	/^void SetCoeff(ZZ_pEX& x, long i, long a)$/;"	f
SetCoeff	deplib/ntl-main/src/ZZ_pX.cpp	/^void SetCoeff(ZZ_pX& x, long i)$/;"	f
SetCoeff	deplib/ntl-main/src/ZZ_pX.cpp	/^void SetCoeff(ZZ_pX& x, long i, const ZZ_p& a)$/;"	f
SetCoeff	deplib/ntl-main/src/ZZ_pX.cpp	/^void SetCoeff(ZZ_pX& x, long i, long a)$/;"	f
SetCoeff	deplib/ntl-main/src/lzz_pEX.cpp	/^void SetCoeff(zz_pEX& x, long i)$/;"	f
SetCoeff	deplib/ntl-main/src/lzz_pEX.cpp	/^void SetCoeff(zz_pEX& x, long i, const zz_p& aa)$/;"	f
SetCoeff	deplib/ntl-main/src/lzz_pEX.cpp	/^void SetCoeff(zz_pEX& x, long i, const zz_pE& a)$/;"	f
SetCoeff	deplib/ntl-main/src/lzz_pEX.cpp	/^void SetCoeff(zz_pEX& x, long i, long a)$/;"	f
SetCoeff	deplib/ntl-main/src/lzz_pX.cpp	/^void SetCoeff(zz_pX& x, long i)$/;"	f
SetCoeff	deplib/ntl-main/src/lzz_pX.cpp	/^void SetCoeff(zz_pX& x, long i, long a)$/;"	f
SetCoeff	deplib/ntl-main/src/lzz_pX.cpp	/^void SetCoeff(zz_pX& x, long i, zz_p a)$/;"	f
SetDims	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void SetDims(long n, long m) $/;"	f	class:Unique2DArray
SetDims	deplib/ntl-main/include/NTL/matrix.h	/^void Mat<T>::SetDims(long n, long m)  $/;"	f	class:Mat
SetDimsFrom1	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void SetDimsFrom1(long n, long m) $/;"	f	class:Unique2DArray
SetLength	deplib/ntl-main/include/NTL/GF2EX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:GF2EX
SetLength	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void SetLength(long n)$/;"	f	class:AlignedArray
SetLength	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void SetLength(long n)$/;"	f	class:Unique2DArray
SetLength	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void SetLength(long n)$/;"	f	class:UniqueArray
SetLength	deplib/ntl-main/include/NTL/WordVector.h	/^   void SetLength(long n)$/;"	f	class:WordVector
SetLength	deplib/ntl-main/include/NTL/ZZX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:ZZX
SetLength	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:ZZ_pEX
SetLength	deplib/ntl-main/include/NTL/ZZ_pX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:ZZ_pX
SetLength	deplib/ntl-main/include/NTL/lzz_pEX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:zz_pEX
SetLength	deplib/ntl-main/include/NTL/lzz_pX.h	/^void SetLength(long n) { rep.SetLength(n); }$/;"	f	class:zz_pX
SetLength	deplib/ntl-main/include/NTL/vector.h	/^   void SetLength(long n) {$/;"	f	class:Vec
SetLength	deplib/ntl-main/include/NTL/vector.h	/^   void SetLength(long n, const T& a) {$/;"	f	class:Vec
SetLength	deplib/ntl-main/src/GF2X.cpp	/^void GF2X::SetLength(long n)$/;"	f	class:GF2X
SetLength	deplib/ntl-main/src/vec_GF2.cpp	/^void vec_GF2::SetLength(long n)$/;"	f	class:vec_GF2
SetLength	deplib/ntl-main/src/vec_GF2.cpp	/^void vec_GF2::SetLength(long n, GF2 a)$/;"	f	class:vec_GF2
SetLengthAndApply	deplib/ntl-main/include/NTL/vector.h	/^   void SetLengthAndApply(long n, F f) {$/;"	f	class:Vec
SetMaxLength	deplib/ntl-main/include/NTL/GF2EX.h	/^void SetMaxLength(long n) $/;"	f	class:GF2EX
SetMaxLength	deplib/ntl-main/include/NTL/ZZX.h	/^void SetMaxLength(long n) $/;"	f	class:ZZX
SetMaxLength	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^void SetMaxLength(long n) $/;"	f	class:ZZ_pEX
SetMaxLength	deplib/ntl-main/include/NTL/ZZ_pX.h	/^void SetMaxLength(long n) $/;"	f	class:ZZ_pX
SetMaxLength	deplib/ntl-main/include/NTL/lzz_pEX.h	/^void SetMaxLength(long n) $/;"	f	class:zz_pEX
SetMaxLength	deplib/ntl-main/include/NTL/lzz_pX.h	/^void SetMaxLength(long n) $/;"	f	class:zz_pX
SetMaxLength	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::SetMaxLength(long n) $/;"	f	class:Vec
SetMaxLength	deplib/ntl-main/src/GF2X.cpp	/^void GF2X::SetMaxLength(long n)$/;"	f	class:GF2X
SetMaxLength	deplib/ntl-main/src/WordVector.cpp	/^void WordVector::SetMaxLength(long n) $/;"	f	class:WordVector
SetMaxLength	deplib/ntl-main/src/vec_GF2.cpp	/^void vec_GF2::SetMaxLength(long n)$/;"	f	class:vec_GF2
SetNumThreads	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^inline void SetNumThreads(long n) $/;"	f
SetOutputPrecision	deplib/ntl-main/src/RR.cpp	/^void RR::SetOutputPrecision(long p)$/;"	f	class:RR
SetOutputPrecision	deplib/ntl-main/src/quad_float1.cpp	/^void quad_float::SetOutputPrecision(long p)$/;"	f	class:quad_float
SetOutputPrecision	deplib/ntl-main/src/xdouble.cpp	/^void xdouble::SetOutputPrecision(long p)$/;"	f	class:xdouble
SetPrecision	deplib/ntl-main/src/RR.cpp	/^void RR::SetPrecision(long p)$/;"	f	class:RR
SetSeed	deplib/ntl-main/src/ZZ.cpp	/^void SetSeed(const RandomStream& s)$/;"	f
SetSeed	deplib/ntl-main/src/ZZ.cpp	/^void SetSeed(const ZZ& seed)$/;"	f
SetSeed	deplib/ntl-main/src/ZZ.cpp	/^void SetSeed(const unsigned char *data, long dlen)$/;"	f
SetSize	deplib/ntl-main/include/NTL/ZZ.h	/^void SetSize(long k)$/;"	f	class:ZZ
SetSize	deplib/ntl-main/src/GF2XVec.cpp	/^void GF2XVec::SetSize(long n, long d)$/;"	f	class:GF2XVec
SetSize	deplib/ntl-main/src/ZZVec.cpp	/^void ZZVec::SetSize(long n, long d)$/;"	f	class:ZZVec
SetSize	deplib/ntl-main/src/ZZ_pEX.cpp	/^void SetSize(vec_ZZ_pX& x, long n, long m)$/;"	f
SetSize	deplib/ntl-main/src/ZZ_pX.cpp	/^void FFTRep::SetSize(long NewK)$/;"	f	class:FFTRep
SetSize	deplib/ntl-main/src/ZZ_pX.cpp	/^void ZZ_pXModRep::SetSize(long NewN)$/;"	f	class:ZZ_pXModRep
SetSize	deplib/ntl-main/src/lzz_pEX.cpp	/^void SetSize(vec_zz_pX& x, long n, long m)$/;"	f
SetSize	deplib/ntl-main/src/lzz_pX.cpp	/^void fftRep::SetSize(long NewK)$/;"	f	class:fftRep
SetX	deplib/ntl-main/src/GF2EX.cpp	/^void SetX(GF2EX& x)$/;"	f
SetX	deplib/ntl-main/src/GF2X.cpp	/^void SetX(GF2X& x)$/;"	f
SetX	deplib/ntl-main/src/ZZX.cpp	/^void SetX(ZZX& x)$/;"	f
SetX	deplib/ntl-main/src/ZZ_pEX.cpp	/^void SetX(ZZ_pEX& x)$/;"	f
SetX	deplib/ntl-main/src/ZZ_pX.cpp	/^void SetX(ZZ_pX& x)$/;"	f
SetX	deplib/ntl-main/src/lzz_pEX.cpp	/^void SetX(zz_pEX& x)$/;"	f
SetX	deplib/ntl-main/src/lzz_pX.cpp	/^void SetX(zz_pX& x)$/;"	f
ShiftAdd	deplib/ntl-main/src/GF2EX.cpp	/^void ShiftAdd(GF2EX& U, const GF2EX& V, long n)$/;"	f
ShiftAdd	deplib/ntl-main/src/GF2X.cpp	/^void ShiftAdd(GF2X& c, const GF2X& a, long n)$/;"	f
ShiftAdd	deplib/ntl-main/src/WordVector.cpp	/^void ShiftAdd(_ntl_ulong *cp, const _ntl_ulong* ap, long sa, long n)$/;"	f
ShiftAdd	deplib/ntl-main/src/ZZ_pX1.cpp	/^void ShiftAdd(ZZ_pX& U, const ZZ_pX& V, long n)$/;"	f
ShiftAdd	deplib/ntl-main/src/lzz_pX1.cpp	/^void ShiftAdd(zz_pX& U, const zz_pX& V, long n)$/;"	f
ShiftRows	aes_private.h	/^inline void ShiftRows(uint8_t state[16]) {$/;"	f	namespace:__anon2
ShiftRows	aes_whitebox.cc	/^void ShiftRows(uint8_t state[16]) {$/;"	f	namespace:__anon3
ShiftRowsTab	aes_private.h	/^constexpr int ShiftRowsTab[16] = {$/;"	m	namespace:__anon2
ShiftSub	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ShiftSub(ZZ_pEX& U, const ZZ_pEX& V, long n)$/;"	f
ShiftSub	deplib/ntl-main/src/ZZ_pX1.cpp	/^void ShiftSub(ZZ_pX& U, const ZZ_pX& V, long n)$/;"	f
ShiftSub	deplib/ntl-main/src/lzz_pEX.cpp	/^void ShiftSub(zz_pEX& U, const zz_pEX& V, long n)$/;"	f
ShiftSub	deplib/ntl-main/src/lzz_pX1.cpp	/^void ShiftSub(zz_pX& U, const zz_pX& V, long n)$/;"	f
ShiftToHigh	deplib/ntl-main/src/vec_GF2.cpp	/^void ShiftToHigh(vec_GF2& x, const vec_GF2& a, long n)$/;"	f	file:
ShiftToLow	deplib/ntl-main/src/vec_GF2.cpp	/^void ShiftToLow(vec_GF2& x, const vec_GF2& a, long n)$/;"	f	file:
SimpleSignal	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     SimpleSignal() : val(0) { }$/;"	f	class:BasicThreadPool::SimpleSignal
SimpleSignal	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   class SimpleSignal {$/;"	c	class:BasicThreadPool
SinglePrecision	deplib/ntl-main/include/NTL/ZZ.h	/^long SinglePrecision() const$/;"	f	class:ZZ
SkipWhiteSpace	deplib/ntl-main/src/tools.cpp	/^long SkipWhiteSpace(istream& s)$/;"	f
SmallModulusTest	deplib/ntl-main/src/QuickTest.cpp	/^int SmallModulusTest(long p, long n)$/;"	f
SmallPrimeFactorization	deplib/ntl-main/src/ZZXFactoring.cpp	/^SmallPrimeFactorization(LocalInfoT& LocalInfo, const ZZX& f,$/;"	f	file:
SmartPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr() : dp(0), cp(0)  { }$/;"	f	class:SmartPtr
SmartPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr(SmartPtrLoopHole, T* _dp, SmartPtrControl *_cp) : dp(_dp), cp(_cp)$/;"	f	class:SmartPtr
SmartPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr(Y* p, ChoosePolicy<P>) : dp(p), cp(0) $/;"	f	class:SmartPtr
SmartPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr(const SmartPtr& other) : dp(other.dp), cp(other.cp) $/;"	f	class:SmartPtr
SmartPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr(const SmartPtr<Y>& other) : dp(other.dp), cp(other.cp) $/;"	f	class:SmartPtr
SmartPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr(fake_null_type1) : dp(0), cp(0) { }$/;"	f	class:SmartPtr
SmartPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   explicit SmartPtr(Y* p) : dp(p), cp(0) $/;"	f	class:SmartPtr
SmartPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^class SmartPtr {$/;"	c
SmartPtrControl	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtrControl() { }$/;"	f	class:SmartPtrControl
SmartPtrControl	deplib/ntl-main/include/NTL/SmartPtr.h	/^class SmartPtrControl {$/;"	c
SmartPtrControlDerived	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtrControlDerived(T* _p) : p(_p)  { }$/;"	f	class:SmartPtrControlDerived
SmartPtrControlDerived	deplib/ntl-main/include/NTL/SmartPtr.h	/^class SmartPtrControlDerived : public SmartPtrControl {$/;"	c
SmartPtrLoopHole	deplib/ntl-main/include/NTL/SmartPtr.h	/^struct SmartPtrLoopHole { };$/;"	s
SparsityCheck	deplib/ntl-main/src/GF2X1.cpp	/^void SparsityCheck(const GF2X& f, long& k3, long& k2, long& k1)$/;"	f	file:
SpecialPower	deplib/ntl-main/src/lip.cpp	/^long SpecialPower(long e, long p)$/;"	f	file:
SqrMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX SqrMod(const GF2EX& a, const GF2EX& f)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX SqrMod(const GF2EX& a, const GF2EXModulus& F)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X SqrMod(const GF2X& a, const GF2X& f)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X SqrMod(const GF2X& a, const GF2XModulus& F)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ SqrMod(const ZZ& a, const ZZ& n)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline void SqrMod(ZZ& x, const ZZ& a, const ZZ& n)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX SqrMod(const ZZX& a, const ZZX& f)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX SqrMod(const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX SqrMod(const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX SqrMod(const ZZ_pX& a,  const ZZ_pX& f)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX SqrMod(const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX SqrMod(const zz_pEX& a, const zz_pEX& f)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX SqrMod(const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX SqrMod(const zz_pX& a, const zz_pX& f)$/;"	f
SqrMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX SqrMod(const zz_pX& a, const zz_pXModulus& F)$/;"	f
SqrMod	deplib/ntl-main/src/GF2EX.cpp	/^void SqrMod(GF2EX& c, const GF2EX& a, const GF2EXModulus& F)$/;"	f
SqrMod	deplib/ntl-main/src/GF2EX.cpp	/^void SqrMod(GF2EX& x, const GF2EX& a, const GF2EX& f)$/;"	f
SqrMod	deplib/ntl-main/src/GF2X1.cpp	/^void SqrMod(GF2X& c, const GF2X& a, const GF2X& f)$/;"	f
SqrMod	deplib/ntl-main/src/GF2X1.cpp	/^void SqrMod(GF2X& c, const GF2X& a, const GF2XModulus& F)$/;"	f
SqrMod	deplib/ntl-main/src/ZZX1.cpp	/^void SqrMod(ZZX& x, const ZZX& a, const ZZX& f)$/;"	f
SqrMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void SqrMod(ZZ_pEX& c, const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
SqrMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void SqrMod(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
SqrMod	deplib/ntl-main/src/ZZ_pX.cpp	/^void SqrMod(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& f)$/;"	f
SqrMod	deplib/ntl-main/src/ZZ_pX.cpp	/^void SqrMod(ZZ_pX& x, const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
SqrMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void SqrMod(zz_pEX& c, const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
SqrMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void SqrMod(zz_pEX& x, const zz_pEX& a, const zz_pEX& f)$/;"	f
SqrMod	deplib/ntl-main/src/lzz_pX.cpp	/^void SqrMod(zz_pX& x, const zz_pX& a, const zz_pX& f)$/;"	f
SqrMod	deplib/ntl-main/src/lzz_pX.cpp	/^void SqrMod(zz_pX& x, const zz_pX& a, const zz_pXModulus& F)$/;"	f
SqrPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR SqrPrec(const RR& a, long p)$/;"	f
SqrPrec	deplib/ntl-main/src/RR.cpp	/^void SqrPrec(RR& x, const RR& a, long p)$/;"	f
SqrRoot	deplib/ntl-main/include/NTL/RR.h	/^inline RR SqrRoot(const RR& a)$/;"	f
SqrRoot	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ SqrRoot(const ZZ& a)$/;"	f
SqrRoot	deplib/ntl-main/include/NTL/ZZ.h	/^inline long SqrRoot(long a) { return _ntl_gsqrts(a); }$/;"	f
SqrRoot	deplib/ntl-main/include/NTL/ZZ.h	/^inline void SqrRoot(ZZ& x, const ZZ& a)$/;"	f
SqrRoot	deplib/ntl-main/src/RR.cpp	/^void SqrRoot(RR& z, const RR& a)$/;"	f
SqrRootMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ SqrRootMod(const ZZ& a, const ZZ& n)$/;"	f
SqrRootMod	deplib/ntl-main/src/ZZ.cpp	/^void SqrRootMod(ZZ& x, const ZZ& aa, const ZZ& nn)$/;"	f
SqrRootPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR SqrRootPrec(const RR& a, long p)$/;"	f
SqrRootPrec	deplib/ntl-main/src/RR.cpp	/^void SqrRootPrec(RR& x, const RR& a, long p)$/;"	f
SqrTrunc	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX SqrTrunc(const GF2EX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X SqrTrunc(const GF2X& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX SqrTrunc(const ZZX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX SqrTrunc(const ZZ_pEX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX SqrTrunc(const ZZ_pX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX SqrTrunc(const zz_pEX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX SqrTrunc(const zz_pX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/src/GF2EX.cpp	/^void SqrTrunc(GF2EX& x, const GF2EX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/src/GF2X1.cpp	/^void SqrTrunc(GF2X& c, const GF2X& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/src/ZZX1.cpp	/^void SqrTrunc(ZZX& x, const ZZX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/src/ZZ_pEX.cpp	/^void SqrTrunc(ZZ_pEX& x, const ZZ_pEX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/src/ZZ_pX1.cpp	/^void SqrTrunc(ZZ_pX& x, const ZZ_pX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/src/lzz_pEX.cpp	/^void SqrTrunc(zz_pEX& x, const zz_pEX& a, long n)$/;"	f
SqrTrunc	deplib/ntl-main/src/lzz_pX1.cpp	/^void SqrTrunc(zz_pX& x, const zz_pX& a, long n)$/;"	f
SquareFreeDecomp	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline vec_pair_GF2EX_long SquareFreeDecomp(const GF2EX& f)$/;"	f
SquareFreeDecomp	deplib/ntl-main/include/NTL/GF2XFactoring.h	/^inline vec_pair_GF2X_long SquareFreeDecomp(const GF2X& f)$/;"	f
SquareFreeDecomp	deplib/ntl-main/include/NTL/ZZXFactoring.h	/^inline vec_pair_ZZX_long SquareFreeDecomp(const ZZX& f)$/;"	f
SquareFreeDecomp	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline vec_pair_ZZ_pEX_long SquareFreeDecomp(const ZZ_pEX& f)$/;"	f
SquareFreeDecomp	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline vec_pair_ZZ_pX_long SquareFreeDecomp(const ZZ_pX& f)$/;"	f
SquareFreeDecomp	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline vec_pair_zz_pEX_long SquareFreeDecomp(const zz_pEX& f)$/;"	f
SquareFreeDecomp	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline vec_pair_zz_pX_long SquareFreeDecomp(const zz_pX& f)$/;"	f
SquareFreeDecomp	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void SquareFreeDecomp(vec_pair_GF2EX_long& u, const GF2EX& ff)$/;"	f
SquareFreeDecomp	deplib/ntl-main/src/GF2XFactoring.cpp	/^void SquareFreeDecomp(vec_pair_GF2X_long& u, const GF2X& ff)$/;"	f
SquareFreeDecomp	deplib/ntl-main/src/ZZXFactoring.cpp	/^void SquareFreeDecomp(vec_pair_ZZX_long& u, const ZZX& ff)$/;"	f
SquareFreeDecomp	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void SquareFreeDecomp(vec_pair_ZZ_pEX_long& u, const ZZ_pEX& ff)$/;"	f
SquareFreeDecomp	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void SquareFreeDecomp(vec_pair_ZZ_pX_long& u, const ZZ_pX& ff)$/;"	f
SquareFreeDecomp	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void SquareFreeDecomp(vec_pair_zz_pEX_long& u, const zz_pEX& ff)$/;"	f
SquareFreeDecomp	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void SquareFreeDecomp(vec_pair_zz_pX_long& u, const zz_pX& ff)$/;"	f
StartRecursion	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^SmartPtr<RecursiveThreadPool> StartRecursion(BasicThreadPool *base_pool)$/;"	f
StartTime	deplib/ntl-main/src/G_LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double StartTime = 0;$/;"	v	file:
StartTime	deplib/ntl-main/src/G_LLL_QP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double StartTime = 0;$/;"	v	file:
StartTime	deplib/ntl-main/src/G_LLL_RR.cpp	/^static NTL_CHEAP_THREAD_LOCAL double StartTime = 0;$/;"	v	file:
StartTime	deplib/ntl-main/src/G_LLL_XD.cpp	/^static NTL_CHEAP_THREAD_LOCAL double StartTime = 0;$/;"	v	file:
StartTime	deplib/ntl-main/src/LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double StartTime = 0;$/;"	v	file:
StartTime	deplib/ntl-main/src/LLL_QP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double StartTime = 0;$/;"	v	file:
StartTime	deplib/ntl-main/src/LLL_RR.cpp	/^static NTL_CHEAP_THREAD_LOCAL double StartTime = 0;$/;"	v	file:
StartTime	deplib/ntl-main/src/LLL_XD.cpp	/^static NTL_CHEAP_THREAD_LOCAL double StartTime = 0;$/;"	v	file:
StripZeroes	deplib/ntl-main/src/ZZ_pX1.cpp	/^static void StripZeroes(vec_ZZ_p& x)$/;"	f	file:
StripZeroes	deplib/ntl-main/src/lzz_pX1.cpp	/^static void StripZeroes(vec_zz_p& x)$/;"	f	file:
SubBytes	aes_private.h	/^inline void SubBytes(uint8_t state[16]) {$/;"	f	namespace:__anon2
SubDiv	deplib/ntl-main/src/mat_ZZ.cpp	/^void SubDiv(vec_ZZ& e, const vec_ZZ& t, long p)$/;"	f	file:
SubMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ SubMod(const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
SubMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ SubMod(const ZZ& a, long b, const ZZ& n)$/;"	f
SubMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ SubMod(long a, const ZZ& b, const ZZ& n)$/;"	f
SubMod	deplib/ntl-main/include/NTL/ZZ.h	/^inline void SubMod(ZZ& x, const ZZ& a, const ZZ& b, const ZZ& n)$/;"	f
SubMod	deplib/ntl-main/include/NTL/sp_arith.h	/^long SubMod(long a, long b, long n)$/;"	f
SubMod	deplib/ntl-main/src/ZZ.cpp	/^void SubMod(ZZ& x, const ZZ& a, long b, const ZZ& n)$/;"	f
SubMod	deplib/ntl-main/src/ZZ.cpp	/^void SubMod(ZZ& x, long a, const ZZ& b, const ZZ& n)$/;"	f
SubPattern	deplib/ntl-main/src/ZZXFactoring.cpp	/^void SubPattern(vec_long& p1, const vec_long& p2)$/;"	f	file:
SubPos	deplib/ntl-main/include/NTL/ZZ.h	/^inline void SubPos(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
SubPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR SubPrec(const RR& a, const RR& b, long p)$/;"	f
SubPrec	deplib/ntl-main/src/RR.cpp	/^void SubPrec(RR& x, const RR& a, const RR& b, long p)$/;"	f
SubWord	aes_private.h	/^constexpr uint32_t SubWord(uint32_t word) {$/;"	f	namespace:__anon2
SubsetSumSolution	deplib/ntl-main/src/subset.cpp	/^long SubsetSumSolution(const vec_ZZ& z)$/;"	f
SumCoeffs	deplib/ntl-main/src/ZZXFactoring.cpp	/^void SumCoeffs(ZZ& sum, const ZZX& a)$/;"	f	file:
SumCoeffs	deplib/ntl-main/src/ZZXFactoring.cpp	/^void SumCoeffs(ZZ_p& sum, const ZZ_pX& a)$/;"	f	file:
SwapOneRow	deplib/ntl-main/src/mat_lzz_p.cpp	/^void SwapOneRow(double *panelp, long i, long pos)$/;"	f	file:
SwapOneRow	deplib/ntl-main/src/mat_lzz_p.cpp	/^void SwapOneRow(long *panelp, long i, long pos)$/;"	f	file:
SwapOneRow	deplib/ntl-main/src/mat_lzz_p.cpp	/^void SwapOneRow(unsigned long *panelp, long i, long pos)$/;"	f	file:
SwapTest	deplib/ntl-main/src/LLL.cpp	/^static long SwapTest(const ZZ& d0, const ZZ& d1, const ZZ& d2, const ZZ& lam,$/;"	f	file:
SwitchBit	deplib/ntl-main/include/NTL/ZZ.h	/^inline long SwitchBit(ZZ& x, long p)$/;"	f
TBL_MSK	deplib/ntl-main/src/ZZXFactoring.cpp	1190;"	d	file:
TBL_MSK	deplib/ntl-main/src/ZZXFactoring.cpp	1197;"	d	file:
TBL_SHAMT	deplib/ntl-main/src/ZZXFactoring.cpp	1191;"	d	file:
TBL_SHAMT	deplib/ntl-main/src/ZZXFactoring.cpp	1198;"	d	file:
TBL_T	deplib/ntl-main/src/ZZXFactoring.cpp	/^typedef unsigned long TBL_T;$/;"	t	file:
TBL_UNROLL	deplib/ntl-main/src/lip.cpp	7736;"	d	file:
TD	deplib/ntl-main/src/makefile	/^TD=BerlekampTestIn BerlekampTestOut CanZassTestIn CanZassTestOut   \\$/;"	m
TEMPx	deplib/ntl-main/src/ZZ.cpp	2139;"	d	file:
TEST_PLAIN	Makefile	/^TEST_PLAIN = 6bc1bee22e409f96e93d7e117393172aae2d8a571e03ac9c9eb76fac45af8e5130c81c46a35ce411e5fbc1191a0a52eff69f2445df4f9b17ad2b417be66c3710$/;"	m
TIME_IT	deplib/ntl-main/src/GF2EXDivCross.cpp	13;"	d	file:
TIME_IT	deplib/ntl-main/src/GF2EXGCDCross.cpp	14;"	d	file:
TIME_IT	deplib/ntl-main/src/GF2EXKarCross.cpp	14;"	d	file:
TIME_IT	deplib/ntl-main/src/GF2EXModCross.cpp	13;"	d	file:
TIME_IT	deplib/ntl-main/src/SSMulTest.cpp	6;"	d	file:
TIME_IT	deplib/ntl-main/src/Timing.cpp	10;"	d	file:
TR_BND	deplib/ntl-main/src/G_LLL_FP.cpp	85;"	d	file:
TR_BND	deplib/ntl-main/src/G_LLL_QP.cpp	92;"	d	file:
TR_BND	deplib/ntl-main/src/LLL_FP.cpp	93;"	d	file:
TR_BND	deplib/ntl-main/src/LLL_QP.cpp	102;"	d	file:
TS	deplib/ntl-main/src/makefile	/^TS=QuickTest.cpp ZZTest.cpp SSMulTest.cpp ZZ_pXTest.cpp lzz_pXTest.cpp BerlekampTest.cpp \\$/;"	m
TXFILES	deplib/ntl-main/src/makefile	/^TXFILES=GF2.txt GF2E.txt GF2EX.txt GF2EXFactoring.txt GF2X.txt  \\$/;"	m
T_ptr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   typedef T *T_ptr;$/;"	t	class:Unique2DArray
TandemPowerCompose	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void TandemPowerCompose(GF2EX& y1, GF2EX& y2, const GF2EX& h, $/;"	f	file:
TandemPowerCompose	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void TandemPowerCompose(ZZ_pEX& y1, ZZ_pEX& y2, const ZZ_pEX& h, $/;"	f
TandemPowerCompose	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void TandemPowerCompose(ZZ_pX& y1, ZZ_pX& y2, const ZZ_pX& h, $/;"	f	file:
TandemPowerCompose	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void TandemPowerCompose(zz_pEX& y1, zz_pEX& y2, const zz_pEX& h, $/;"	f
TandemPowerCompose	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void TandemPowerCompose(zz_pX& y1, zz_pX& y2, const zz_pX& h, $/;"	f
TboxesLast	aes_whitebox_tables.cc	/^constexpr uint8_t TboxesLast[16][256] = {$/;"	m	namespace:__anon5	file:
Te0	deplib/ntl-main/src/ZZ.cpp	/^static const u32 Te0[256] = {$/;"	v	file:
Te1	deplib/ntl-main/src/ZZ.cpp	/^static const u32 Te1[256] = {$/;"	v	file:
Te2	deplib/ntl-main/src/ZZ.cpp	/^static const u32 Te2[256] = {$/;"	v	file:
Te3	deplib/ntl-main/src/ZZ.cpp	/^static const u32 Te3[256] = {$/;"	v	file:
Te4	deplib/ntl-main/src/ZZ.cpp	/^static const u32 Te4[256] = {$/;"	v	file:
TerminalError	deplib/ntl-main/src/CheckThreads.cpp	/^void TerminalError(const char *s)$/;"	f
TerminalError	deplib/ntl-main/src/tools.cpp	/^void TerminalError(const char *s)$/;"	f
TestGCD1	deplib/ntl-main/src/GF2EXGCDCross.cpp	/^void TestGCD1(long bnd, const GF2EX& a, const GF2EX& b)$/;"	f
ToFFTRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void ToFFTRep(FFTRep& y, const ZZ_pX& x, long k)$/;"	f
ToFFTRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^void ToFFTRep(FFTRep& y, const ZZ_pX& x, long k, long lo, long hi)$/;"	f
ToFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(ToFFTRep)(FFTRep& x, const ZZ_pXModRep& a, long k, long lo, long hi)$/;"	f
ToFFTRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void ToFFTRep(FFTRep& x, const ZZ_pXModRep& a, long k, long lo, long hi)$/;"	f
ToFFTRep_trunc	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void ToFFTRep_trunc(FFTRep& y, const ZZ_pX& x, long k, long len)$/;"	f
ToFFTRep_trunc	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(ToFFTRep_trunc)(FFTRep& y, const ZZ_pX& x, long k, long len, long lo, long hi)$/;"	f
ToFFTRep_trunc	deplib/ntl-main/src/ZZ_pX.cpp	/^void ToFFTRep_trunc(FFTRep& y, const ZZ_pX& x, long k, long len, long lo, long hi)$/;"	f
ToModularRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void ToModularRep(vec_long& x, const ZZ_p& a, const ZZ_pFFTInfoT *FFTInfo,$/;"	f
ToZZ_pXModRep	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(ToZZ_pXModRep)(ZZ_pXModRep& y, const ZZ_pX& x, long lo, long hi)$/;"	f
ToZZ_pXModRep	deplib/ntl-main/src/ZZ_pX.cpp	/^void ToZZ_pXModRep(ZZ_pXModRep& y, const ZZ_pX& x, long lo, long hi)$/;"	f
TofftRep	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void TofftRep(fftRep& y, const zz_pX& x, long k)$/;"	f
TofftRep	deplib/ntl-main/include/NTL/lzz_pX.h	/^void TofftRep(fftRep& y, const zz_pX& x, long k, long lo, long hi)$/;"	f
TofftRep_trunc	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void TofftRep_trunc(fftRep& y, const zz_pX& x, long k, long len)$/;"	f
TofftRep_trunc	deplib/ntl-main/src/lzz_pX.cpp	/^void TofftRep_trunc(fftRep& y, const zz_pX& x, long k, $/;"	f
TraceMap	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline GF2EX TraceMap(const GF2EX& a, long d, const GF2EXModulus& F,$/;"	f
TraceMap	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pEX TraceMap(const ZZ_pEX& a, long d, const ZZ_pEXModulus& F,$/;"	f
TraceMap	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_pX TraceMap(const ZZ_pX& a, long d, const ZZ_pXModulus& F,$/;"	f
TraceMap	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline zz_pEX TraceMap(const zz_pEX& a, long d, const zz_pEXModulus& F,$/;"	f
TraceMap	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline zz_pX TraceMap(const zz_pX& a, long d, const zz_pXModulus& F,$/;"	f
TraceMap	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void TraceMap(GF2EX& h, const GF2EX& a, const GF2EXModulus& F)$/;"	f	file:
TraceMap	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void TraceMap(GF2EX& w, const GF2EX& a, long d, const GF2EXModulus& F, $/;"	f
TraceMap	deplib/ntl-main/src/GF2XFactoring.cpp	/^void TraceMap(GF2X& w, const GF2X& a, long d, const GF2XModulus& F)$/;"	f	file:
TraceMap	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void TraceMap(ZZ_pEX& w, const ZZ_pEX& a, long d, const ZZ_pEXModulus& F, $/;"	f
TraceMap	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void TraceMap(ZZ_pX& w, const ZZ_pX& a, long d, const ZZ_pXModulus& F, $/;"	f
TraceMap	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void TraceMap(zz_pEX& w, const zz_pEX& a, long d, const zz_pEXModulus& F, $/;"	f
TraceMap	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void TraceMap(zz_pX& w, const zz_pX& a, long d, const zz_pXModulus& F, $/;"	f
TraceMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2E TraceMod(const GF2EX& a, const GF2EX& f)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2E TraceMod(const GF2EX& a, const GF2EXModulus& F)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2 TraceMod(const GF2X& a, const GF2X& f)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2 TraceMod(const GF2X& a, const GF2XModulus& F)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZ TraceMod(const ZZX& a, const ZZX& f)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pE TraceMod(const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pE TraceMod(const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_p TraceMod(const ZZ_pX& a, const ZZ_pX& f)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_p TraceMod(const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pE TraceMod(const zz_pEX& a, const zz_pEX& f)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pE TraceMod(const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_p TraceMod(const zz_pX& a, const zz_pX& f)$/;"	f
TraceMod	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_p TraceMod(const zz_pX& a, const zz_pXModulus& F)$/;"	f
TraceMod	deplib/ntl-main/src/GF2EX.cpp	/^void TraceMod(GF2E& x, const GF2EX& a, const GF2EX& f)$/;"	f
TraceMod	deplib/ntl-main/src/GF2EX.cpp	/^void TraceMod(GF2E& x, const GF2EX& a, const GF2EXModulus& F)$/;"	f
TraceMod	deplib/ntl-main/src/GF2X1.cpp	/^void TraceMod(ref_GF2 x, const GF2X& a, const GF2X& f)$/;"	f
TraceMod	deplib/ntl-main/src/GF2X1.cpp	/^void TraceMod(ref_GF2 x, const GF2X& a, const GF2XModulus& F)$/;"	f
TraceMod	deplib/ntl-main/src/ZZX1.cpp	/^void TraceMod(ZZ& res, const ZZX& a, const ZZX& f)$/;"	f
TraceMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void TraceMod(ZZ_pE& x, const ZZ_pEX& a, const ZZ_pEX& f)$/;"	f
TraceMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void TraceMod(ZZ_pE& x, const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
TraceMod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void TraceMod(ZZ_p& x, const ZZ_pX& a, const ZZ_pX& f)$/;"	f
TraceMod	deplib/ntl-main/src/ZZ_pX1.cpp	/^void TraceMod(ZZ_p& x, const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
TraceMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void TraceMod(zz_pE& x, const zz_pEX& a, const zz_pEX& f)$/;"	f
TraceMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void TraceMod(zz_pE& x, const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
TraceMod	deplib/ntl-main/src/lzz_pX1.cpp	/^void TraceMod(zz_p& x, const zz_pX& a, const zz_pX& f)$/;"	f
TraceMod	deplib/ntl-main/src/lzz_pX1.cpp	/^void TraceMod(zz_p& x, const zz_pX& a, const zz_pXModulus& F)$/;"	f
TraceVec	deplib/ntl-main/include/NTL/GF2EX.h	/^inline vec_GF2E TraceVec(const GF2EX& f)$/;"	f
TraceVec	deplib/ntl-main/include/NTL/GF2X.h	/^inline vec_GF2 TraceVec(const GF2X& f)$/;"	f
TraceVec	deplib/ntl-main/include/NTL/ZZX.h	/^inline vec_ZZ TraceVec(const ZZX& f)$/;"	f
TraceVec	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline vec_ZZ_pE TraceVec(const ZZ_pEX& f)$/;"	f
TraceVec	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline vec_ZZ_p TraceVec(const ZZ_pX& f)$/;"	f
TraceVec	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline vec_zz_pE TraceVec(const zz_pEX& f)$/;"	f
TraceVec	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline vec_zz_p TraceVec(const zz_pX& f)$/;"	f
TraceVec	deplib/ntl-main/src/GF2EX.cpp	/^void TraceVec(vec_GF2E& S, const GF2EX& f)$/;"	f
TraceVec	deplib/ntl-main/src/GF2X1.cpp	/^void TraceVec(vec_GF2& S, const GF2X& f)$/;"	f
TraceVec	deplib/ntl-main/src/ZZX1.cpp	/^void TraceVec(vec_ZZ& S, const ZZX& ff)$/;"	f
TraceVec	deplib/ntl-main/src/ZZ_pEX.cpp	/^void TraceVec(vec_ZZ_pE& S, const ZZ_pEX& f)$/;"	f
TraceVec	deplib/ntl-main/src/ZZ_pX1.cpp	/^void TraceVec(vec_ZZ_p& S, const ZZ_pX& f)$/;"	f
TraceVec	deplib/ntl-main/src/lzz_pEX.cpp	/^void TraceVec(vec_zz_pE& S, const zz_pEX& f)$/;"	f
TraceVec	deplib/ntl-main/src/lzz_pX1.cpp	/^void TraceVec(vec_zz_p& S, const zz_pX& f)$/;"	f
TransMulMod	deplib/ntl-main/src/GF2EX.cpp	/^void TransMulMod(GF2EX& x, const GF2EX& a, const GF2EXTransMultiplier& B,$/;"	f
TransMulMod	deplib/ntl-main/src/GF2X1.cpp	/^void TransMulMod(GF2X& x, const GF2X& a, const GF2XTransMultiplier& B,$/;"	f
TransMulMod	deplib/ntl-main/src/ZZ_pEX.cpp	/^void TransMulMod(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEXTransMultiplier& B,$/;"	f
TransMulMod	deplib/ntl-main/src/ZZ_pXTest.cpp	/^void TransMulMod(ZZ_pX& x, const ZZ_pX& a, const ZZ_pXTransMultiplier& B,$/;"	f
TransMulMod	deplib/ntl-main/src/lzz_pEX.cpp	/^void TransMulMod(zz_pEX& x, const zz_pEX& a, const zz_pEXTransMultiplier& B,$/;"	f
TransMulMod	deplib/ntl-main/src/lzz_pXTest.cpp	/^void TransMulMod(zz_pX& x, const zz_pX& a, const zz_pXTransMultiplier& B,$/;"	f
TransposeBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void TransposeBlock(long *dst_ptr, long dst_blk)$/;"	f	file:
TransposeBlock	deplib/ntl-main/src/mat_lzz_p.cpp	/^void TransposeBlock(unsigned long *dst_ptr, long dst_blk)$/;"	f	file:
TreeLift	deplib/ntl-main/src/ZZXFactoring.cpp	/^void TreeLift(const vec_long& link, vec_ZZX& v, vec_ZZX& w, $/;"	f	file:
TriDiv21	deplib/ntl-main/src/GF2X1.cpp	/^void TriDiv21(GF2X& q, const GF2X& a, long n, long k)$/;"	f	file:
TriDivRem21	deplib/ntl-main/src/GF2X1.cpp	/^void TriDivRem21(GF2X& q, GF2X& r, const GF2X& a, long n, long k)$/;"	f	file:
TriDivRemX1	deplib/ntl-main/src/GF2X1.cpp	/^void TriDivRemX1(GF2X& q, GF2X& r, const GF2X& aa, long n, long k)$/;"	f	file:
TriDivX1	deplib/ntl-main/src/GF2X1.cpp	/^void TriDivX1(GF2X& q, const GF2X& aa, long n, long k)$/;"	f	file:
TrinomReduce	deplib/ntl-main/src/GF2X1.cpp	/^void TrinomReduce(GF2X& x, const GF2X& a, long n, long k)$/;"	f	file:
TrueDouble	deplib/ntl-main/include/NTL/tools.h	/^inline double TrueDouble(double x)$/;"	f
TruncPrec	deplib/ntl-main/include/NTL/RR.h	/^inline RR TruncPrec(const RR& a, long p)$/;"	f
TruncPrec	deplib/ntl-main/src/RR.cpp	/^void TruncPrec(RR& x, const RR& a, long p)$/;"	f
TruncToZZ	deplib/ntl-main/include/NTL/RR.h	/^inline ZZ TruncToZZ(const RR& a)$/;"	f
TruncToZZ	deplib/ntl-main/src/RR.cpp	/^void TruncToZZ(ZZ& z, const RR& a)$/;"	f
TwoInvPreconTable	deplib/ntl-main/include/NTL/FFT.h	/^   Vec<mulmod_precon_t> TwoInvPreconTable;$/;"	m	struct:FFTPrimeInfo
TwoInvTable	deplib/ntl-main/include/NTL/FFT.h	/^   Vec<long> TwoInvTable;$/;"	m	struct:FFTPrimeInfo
Tyboxes	aes_whitebox_tables.cc	/^constexpr uint32_t Tyboxes[13][16][256] = {$/;"	m	namespace:__anon5	file:
Type	deplib/ntl-main/include/NTL/tools.h	/^     typedef out Type;$/;"	t	struct:Relocate_aux_Failable
Unique2DArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   Unique2DArray() : len(0) { }$/;"	f	class:Unique2DArray
Unique2DArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   Unique2DArray(Unique2DArray&& other) noexcept : Unique2DArray() $/;"	f	class:Unique2DArray
Unique2DArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^class Unique2DArray {$/;"	c
UniqueArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   UniqueArray() : dp(0) { }$/;"	f	class:UniqueArray
UniqueArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   UniqueArray(UniqueArray&& other) noexcept : UniqueArray() $/;"	f	class:UniqueArray
UniqueArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   explicit UniqueArray(T *p) : dp(p) { }$/;"	f	class:UniqueArray
UniqueArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^class UniqueArray {$/;"	c
UniqueID	deplib/ntl-main/src/fileio.cpp	/^const std::string& UniqueID()$/;"	f
UniquePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   UniquePtr() : dp(0) { }$/;"	f	class:UniquePtr
UniquePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   UniquePtr(UniquePtr&& other) noexcept : UniquePtr() $/;"	f	class:UniquePtr
UniquePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   explicit UniquePtr(T *p) : dp(p) { }$/;"	f	class:UniquePtr
UniquePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^class UniquePtr {$/;"	c
UnwrapReference	deplib/ntl-main/include/NTL/SmartPtr.h	/^T& UnwrapReference(const ReferenceWrapper<T>& x) { return x; } $/;"	f
UnwrapReference	deplib/ntl-main/include/NTL/SmartPtr.h	/^const T& UnwrapReference(const ConstReferenceWrapper<T>& x) { return x; } $/;"	f
UnwrapReference	deplib/ntl-main/include/NTL/SmartPtr.h	/^const T& UnwrapReference(const T& x) { return x; } $/;"	f
UpdateLocalInfo	deplib/ntl-main/src/ZZXFactoring.cpp	/^void UpdateLocalInfo(LocalInfoT& LocalInfo, vec_ZZ& pdeg,$/;"	f	file:
UpdateMap	deplib/ntl-main/include/NTL/GF2EX.h	/^inline vec_GF2E UpdateMap(const vec_GF2E& a,$/;"	f
UpdateMap	deplib/ntl-main/include/NTL/GF2X.h	/^inline vec_GF2 UpdateMap(const vec_GF2& a, $/;"	f
UpdateMap	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline vec_ZZ_pE UpdateMap(const vec_ZZ_pE& a,$/;"	f
UpdateMap	deplib/ntl-main/include/NTL/ZZ_pX.h	/^UpdateMap(const vec_ZZ_p& a, $/;"	f
UpdateMap	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline vec_zz_pE UpdateMap(const vec_zz_pE& a,$/;"	f
UpdateMap	deplib/ntl-main/include/NTL/lzz_pX.h	/^UpdateMap(const vec_zz_p& a,$/;"	f
UpdateMap	deplib/ntl-main/src/GF2EX.cpp	/^void UpdateMap(vec_GF2E& x, const vec_GF2E& a, $/;"	f
UpdateMap	deplib/ntl-main/src/GF2X1.cpp	/^void UpdateMap(vec_GF2& x, const vec_GF2& a, const GF2XTransMultiplier& B,$/;"	f
UpdateMap	deplib/ntl-main/src/ZZ_pEX.cpp	/^void UpdateMap(vec_ZZ_pE& x, const vec_ZZ_pE& a,$/;"	f
UpdateMap	deplib/ntl-main/src/ZZ_pX1.cpp	/^void UpdateMap(vec_ZZ_p& x, const vec_ZZ_p& aa, $/;"	f
UpdateMap	deplib/ntl-main/src/ZZ_pXTest.cpp	/^void UpdateMap(vec_ZZ_p& x, const vec_ZZ_p& a,$/;"	f
UpdateMap	deplib/ntl-main/src/lzz_pEX.cpp	/^void UpdateMap(vec_zz_pE& x, const vec_zz_pE& a,$/;"	f
UpdateMap	deplib/ntl-main/src/lzz_pX1.cpp	/^void UpdateMap(vec_zz_p& x, const vec_zz_p& aa, $/;"	f
UpdateMap	deplib/ntl-main/src/lzz_pXTest.cpp	/^void UpdateMap(vec_zz_p& x, const vec_zz_p& a,$/;"	f
UpdateMin	deplib/ntl-main/include/NTL/thread.h	/^   void UpdateMin(unsigned long val) $/;"	f	class:AtomicLowWaterMark
UseComposeFrobenius	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long UseComposeFrobenius(long d, long n)$/;"	f
UseFFT	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long UseFFT;$/;"	m	class:ZZ_pXMultiplier
UseFFT	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long UseFFT;\/\/ flag indicating whether FFT should be used.$/;"	m	class:ZZ_pXModulus
UseFFT	deplib/ntl-main/include/NTL/lzz_pX.h	/^   long UseFFT;$/;"	m	class:zz_pXMultiplier
UseFFT	deplib/ntl-main/include/NTL/lzz_pX.h	/^   long UseFFT;\/\/ flag indicating whether FFT should be used.$/;"	m	class:zz_pXModulus
UseFFTPrime	deplib/ntl-main/src/FFT.cpp	/^void UseFFTPrime(long index)$/;"	f
UseMatPrime	deplib/ntl-main/src/MatPrime.cpp	/^void UseMatPrime(long index)$/;"	f
UseMulDiv	deplib/ntl-main/src/GF2EX.cpp	/^void UseMulDiv(GF2EX& q, const GF2EX& a, const GF2EX& b)$/;"	f
UseMulDiv	deplib/ntl-main/src/GF2X1.cpp	/^void UseMulDiv(GF2X& q, const GF2X& a, const GF2X& b)$/;"	f
UseMulDiv	deplib/ntl-main/src/ZZ_pEX.cpp	/^void UseMulDiv(ZZ_pEX& q, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
UseMulDiv	deplib/ntl-main/src/lzz_pEX.cpp	/^void UseMulDiv(zz_pEX& q, const zz_pEX& a, const zz_pEX& b)$/;"	f
UseMulDiv21	deplib/ntl-main/src/GF2EX.cpp	/^void UseMulDiv21(GF2EX& q, const GF2EX& a, const GF2EXModulus& F)$/;"	f
UseMulDiv21	deplib/ntl-main/src/GF2X1.cpp	/^void UseMulDiv21(GF2X& q, const GF2X& a, const GF2XModulus& F)$/;"	f
UseMulDiv21	deplib/ntl-main/src/ZZ_pEX.cpp	/^void UseMulDiv21(ZZ_pEX& q, const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
UseMulDiv21	deplib/ntl-main/src/lzz_pEX.cpp	/^void UseMulDiv21(zz_pEX& q, const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
UseMulDivRem	deplib/ntl-main/src/GF2EX.cpp	/^void UseMulDivRem(GF2EX& q, GF2EX& r, const GF2EX& a, const GF2EX& b)$/;"	f
UseMulDivRem	deplib/ntl-main/src/GF2X1.cpp	/^void UseMulDivRem(GF2X& q, GF2X& r, const GF2X& a, const GF2X& b)$/;"	f
UseMulDivRem	deplib/ntl-main/src/ZZ_pEX.cpp	/^void UseMulDivRem(ZZ_pEX& q, ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
UseMulDivRem	deplib/ntl-main/src/lzz_pEX.cpp	/^void UseMulDivRem(zz_pEX& q, zz_pEX& r, const zz_pEX& a, const zz_pEX& b)$/;"	f
UseMulDivRem21	deplib/ntl-main/src/GF2EX.cpp	/^void UseMulDivRem21(GF2EX& q, GF2EX& r, const GF2EX& a, const GF2EXModulus& F)$/;"	f
UseMulDivRem21	deplib/ntl-main/src/GF2X1.cpp	/^void UseMulDivRem21(GF2X& q, GF2X& r, const GF2X& a, const GF2XModulus& F)$/;"	f
UseMulDivRem21	deplib/ntl-main/src/ZZ_pEX.cpp	/^void UseMulDivRem21(ZZ_pEX& q, ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
UseMulDivRem21	deplib/ntl-main/src/lzz_pEX.cpp	/^void UseMulDivRem21(zz_pEX& q, zz_pEX& r, const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
UseMulDivRemX1	deplib/ntl-main/src/GF2X1.cpp	/^void UseMulDivRemX1(GF2X& q, GF2X& r, const GF2X& aa, const GF2XModulus& F)$/;"	f
UseMulDivX1	deplib/ntl-main/src/GF2X1.cpp	/^void UseMulDivX1(GF2X& q, const GF2X& aa, const GF2XModulus& F)$/;"	f
UseMulRem	deplib/ntl-main/src/GF2EX.cpp	/^void UseMulRem(GF2EX& r, const GF2EX& a, const GF2EX& b)$/;"	f
UseMulRem	deplib/ntl-main/src/GF2X1.cpp	/^void UseMulRem(GF2X& r, const GF2X& a, const GF2X& b)$/;"	f
UseMulRem	deplib/ntl-main/src/ZZ_pEX.cpp	/^void UseMulRem(ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
UseMulRem	deplib/ntl-main/src/lzz_pEX.cpp	/^void UseMulRem(zz_pEX& r, const zz_pEX& a, const zz_pEX& b)$/;"	f
UseMulRem21	deplib/ntl-main/src/GF2EX.cpp	/^void UseMulRem21(GF2EX& r, const GF2EX& a, const GF2EXModulus& F)$/;"	f
UseMulRem21	deplib/ntl-main/src/GF2X1.cpp	/^void UseMulRem21(GF2X& r, const GF2X& a, const GF2XModulus& F)$/;"	f
UseMulRem21	deplib/ntl-main/src/ZZ_pEX.cpp	/^void UseMulRem21(ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
UseMulRem21	deplib/ntl-main/src/lzz_pEX.cpp	/^void UseMulRem21(zz_pEX& r, const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
UseMulRemX1	deplib/ntl-main/src/GF2X1.cpp	/^void UseMulRemX1(GF2X& r, const GF2X& aa, const GF2XModulus& F)$/;"	f
UserFFTInit	deplib/ntl-main/src/lzz_p.cpp	/^void zz_p::UserFFTInit(long q)$/;"	f	class:zz_p
Vec	deplib/ntl-main/include/NTL/vec_GF2.h	/^   Vec() : _len(0), _maxlen(0) {}$/;"	f	class:Vec
Vec	deplib/ntl-main/include/NTL/vec_GF2.h	/^   Vec(INIT_SIZE_TYPE, long n) : _len(0), _maxlen(0) { SetLength(n); }$/;"	f	class:Vec
Vec	deplib/ntl-main/include/NTL/vec_GF2.h	/^   Vec(Vec<GF2>& x, INIT_TRANS_TYPE) : $/;"	f	class:Vec
Vec	deplib/ntl-main/include/NTL/vec_GF2.h	/^   Vec(const Vec<GF2>& a) : _len(0), _maxlen(0) { *this = a; }$/;"	f	class:Vec
Vec	deplib/ntl-main/include/NTL/vec_GF2.h	/^Vec(Vec&& a) NTL_FAKE_NOEXCEPT : Vec()$/;"	f	class:Vec
Vec	deplib/ntl-main/include/NTL/vec_GF2.h	/^class Vec<GF2> {$/;"	c
Vec	deplib/ntl-main/include/NTL/vector.h	/^   Vec() { }  $/;"	f	class:Vec
Vec	deplib/ntl-main/include/NTL/vector.h	/^   Vec(INIT_SIZE_TYPE, long n) { SetLength(n); }  $/;"	f	class:Vec
Vec	deplib/ntl-main/include/NTL/vector.h	/^   Vec(INIT_SIZE_TYPE, long n, const T& a) { SetLength(n, a); }  $/;"	f	class:Vec
Vec	deplib/ntl-main/include/NTL/vector.h	/^   Vec(Vec& x, INIT_TRANS_TYPE) $/;"	f	class:Vec
Vec	deplib/ntl-main/include/NTL/vector.h	/^   Vec(const Vec& a)  $/;"	f	class:Vec
Vec	deplib/ntl-main/include/NTL/vector.h	/^class Vec {  $/;"	c
VecStrategy	deplib/ntl-main/include/NTL/vector.h	/^template<> struct VecStrategy<false> {$/;"	s
VecStrategy	deplib/ntl-main/include/NTL/vector.h	/^template<> struct VecStrategy<true> {$/;"	s
VectorBaseType	deplib/ntl-main/include/NTL/GF2X.h	/^typedef vec_GF2 VectorBaseType;$/;"	t	class:GF2X
VectorBaseType	deplib/ntl-main/include/NTL/ZZ_pX.h	/^typedef vec_ZZ_p VectorBaseType; $/;"	t	class:ZZ_pX
VectorBaseType	deplib/ntl-main/include/NTL/lzz_pX.h	/^typedef vec_zz_p VectorBaseType;$/;"	t	class:zz_pX
VectorConv	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void VectorConv(long k, zz_p *x, const ZZ *a)$/;"	f
VectorConv	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void VectorConv(long k, zz_p *x, const long *a)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/GF2EX.h	/^inline vec_GF2E VectorCopy(const GF2EX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void VectorCopy(vec_GF2E& x, const GF2EX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/GF2X.h	/^inline vec_GF2 VectorCopy(const GF2X& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/ZZX.h	/^inline vec_ZZ VectorCopy(const ZZX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/ZZX.h	/^inline void VectorCopy(vec_ZZ& x, const ZZX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline vec_ZZ_pE VectorCopy(const ZZ_pEX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void VectorCopy(vec_ZZ_pE& x, const ZZ_pEX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline vec_ZZ_p VectorCopy(const ZZ_pX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void VectorCopy(vec_ZZ_p& x, const ZZ_pX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline vec_zz_pE VectorCopy(const zz_pEX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void VectorCopy(vec_zz_pE& x, const zz_pEX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline vec_zz_p VectorCopy(const zz_pX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void VectorCopy(vec_zz_p& x, const zz_pX& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2 VectorCopy(const vec_GF2& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E VectorCopy(const vec_GF2E& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/vec_RR.h	/^inline vec_RR VectorCopy(const vec_RR& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline vec_ZZ VectorCopy(const vec_ZZ& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p VectorCopy(const vec_ZZ_p& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE VectorCopy(const vec_ZZ_pE& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p VectorCopy(const vec_zz_p& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE VectorCopy(const vec_zz_pE& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/src/GF2X1.cpp	/^void VectorCopy(vec_GF2& x, const GF2X& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/src/vec_GF2.cpp	/^void VectorCopy(vec_GF2& x, const vec_GF2& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/src/vec_GF2E.cpp	/^void VectorCopy(vec_GF2E& x, const vec_GF2E& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/src/vec_RR.cpp	/^void VectorCopy(vec_RR& x, const vec_RR& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/src/vec_ZZ.cpp	/^void VectorCopy(vec_ZZ& x, const vec_ZZ& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void VectorCopy(vec_ZZ_p& x, const vec_ZZ_p& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void VectorCopy(vec_ZZ_pE& x, const vec_ZZ_pE& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/src/vec_lzz_p.cpp	/^void VectorCopy(vec_zz_p& x, const vec_zz_p& a, long n)$/;"	f
VectorCopy	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void VectorCopy(vec_zz_pE& x, const vec_zz_pE& a, long n)$/;"	f
VectorMulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^void VectorMulMod(long k, long *x, const long *a, long b, long n)$/;"	f
VectorMulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^void VectorMulMod(long k, long *x, const long *a, long b, long n, $/;"	f
VectorMulModPrecon	deplib/ntl-main/include/NTL/sp_arith.h	/^void VectorMulModPrecon(long k, long *x, const long *a, long b, long n, $/;"	f
VectorRandom	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void VectorRandom(long k, zz_p* x)$/;"	f
VectorRandomBnd	deplib/ntl-main/include/NTL/ZZ.h	/^inline void VectorRandomBnd(long k, long* x, long n)$/;"	f
VectorRandomWord	deplib/ntl-main/src/ZZ.cpp	/^void VectorRandomWord(long k, unsigned long* x)$/;"	f
WD	deplib/ntl-main/src/GF2XTest.cpp	12;"	d	file:
WIZARD	deplib/ntl-main/src/makefile	/^WIZARD=off$/;"	m
WOBJ	deplib/ntl-main/src/makefile	/^WOBJ=FFT.o GetTime.o GetPID.o ctools.o ZZ.o ZZVec.o ZZ_p.o ZZ_pX.o ZZ_pX1.o  \\$/;"	m
WRITEU_VEC	deplib/ntl-main/src/ZZ.cpp	3003;"	d	file:
WRITEU_VEC	deplib/ntl-main/src/ZZ.cpp	3054;"	d	file:
WRITE_VEC	deplib/ntl-main/src/ZZ.cpp	3009;"	d	file:
WRITE_VEC	deplib/ntl-main/src/ZZ.cpp	3060;"	d	file:
WV_BlockConstructAlloc	deplib/ntl-main/src/WordVector.cpp	/^long WV_BlockConstructAlloc(WordVector& x, long d, long n)$/;"	f
WV_BlockConstructSet	deplib/ntl-main/src/WordVector.cpp	/^void WV_BlockConstructSet(WordVector& x, WordVector& y, long i)$/;"	f
WV_BlockDestroy	deplib/ntl-main/src/WordVector.cpp	/^long WV_BlockDestroy(WordVector& x)$/;"	f
WV_storage	deplib/ntl-main/src/WordVector.cpp	/^long WV_storage(long d)$/;"	f
Watcher	deplib/ntl-main/include/NTL/vector.h	/^      Watcher(Vec& _watched) : watched(_watched) {}$/;"	f	class:Vec::Watcher
Watcher	deplib/ntl-main/include/NTL/vector.h	/^   class Watcher {$/;"	c	class:Vec
WideSinglePrecision	deplib/ntl-main/include/NTL/ZZ.h	/^long WideSinglePrecision() const$/;"	f	class:ZZ
WordFromBytes	deplib/ntl-main/src/ZZ.cpp	/^unsigned long WordFromBytes(const unsigned char *buf, long n)$/;"	f	file:
WordLength	deplib/ntl-main/include/NTL/GF2E.h	/^static long WordLength() { return GF2EInfo->p.WordLength(); }$/;"	f	class:GF2E
WordLength	deplib/ntl-main/include/NTL/GF2X.h	/^   long WordLength() const { return size; }$/;"	f	class:GF2XModulus
WordVector	deplib/ntl-main/include/NTL/WordVector.h	/^   WordVector() : rep(0) { }  $/;"	f	class:WordVector
WordVector	deplib/ntl-main/include/NTL/WordVector.h	/^   WordVector(INIT_SIZE_TYPE, long n) : rep(0) { DoSetLength(n); }  $/;"	f	class:WordVector
WordVector	deplib/ntl-main/include/NTL/WordVector.h	/^   WordVector(WordVector& x, INIT_TRANS_TYPE) { rep = x.rep; x.rep = 0; }$/;"	f	class:WordVector
WordVector	deplib/ntl-main/include/NTL/WordVector.h	/^   WordVector(const WordVector& a) : rep(0) { *this = a; }     $/;"	f	class:WordVector
WordVector	deplib/ntl-main/include/NTL/WordVector.h	/^class WordVector {  $/;"	c
WordVectorWatcher	deplib/ntl-main/include/NTL/WordVector.h	/^   WordVectorWatcher(WordVector& _watched) : watched(_watched) {}$/;"	f	class:WordVectorWatcher
WordVectorWatcher	deplib/ntl-main/include/NTL/WordVector.h	/^class WordVectorWatcher {$/;"	c
WrappedPtr	deplib/ntl-main/include/NTL/tools.h	/^   WrappedPtr() : rep(0) { }$/;"	f	class:WrappedPtr
WrappedPtr	deplib/ntl-main/include/NTL/tools.h	/^class WrappedPtr {$/;"	c
X	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct X { int x; };$/;"	s	file:
X	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct X { int x; };$/;"	s	file:
X	deplib/ntl-main/src/CheckThreads.cpp	/^   X() { d = count1++; count_con++; }$/;"	f	struct:X
X	deplib/ntl-main/src/CheckThreads.cpp	/^struct X {$/;"	s	file:
XCLIP	deplib/ntl-main/src/lip.cpp	/^inline _ntl_limb_t XCLIP(_ntl_limb_t a)$/;"	f	file:
XGCD	deplib/ntl-main/include/NTL/ZZ.h	/^inline void XGCD(ZZ& d, ZZ& s, ZZ& t, const ZZ& a, const ZZ& b)$/;"	f
XGCD	deplib/ntl-main/src/GF2EX.cpp	/^void XGCD(GF2EX& d, GF2EX& s, GF2EX& t, const GF2EX& a, const GF2EX& b)$/;"	f
XGCD	deplib/ntl-main/src/GF2X1.cpp	/^void XGCD(GF2X& d, GF2X& s, GF2X& t, const GF2X& a, const GF2X& b)$/;"	f
XGCD	deplib/ntl-main/src/ZZ.cpp	/^void XGCD(long& d, long& s, long& t, long a, long b)$/;"	f
XGCD	deplib/ntl-main/src/ZZX1.cpp	/^void XGCD(ZZ& rr, ZZX& ss, ZZX& tt, const ZZX& a, const ZZX& b, $/;"	f
XGCD	deplib/ntl-main/src/ZZ_pEX.cpp	/^void XGCD(ZZ_pEX& d, ZZ_pEX& s, ZZ_pEX& t, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
XGCD	deplib/ntl-main/src/ZZ_pX1.cpp	/^void XGCD(ZZ_pX& d, ZZ_pX& s, ZZ_pX& t, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
XGCD	deplib/ntl-main/src/lzz_pEX.cpp	/^void XGCD(zz_pEX& d, zz_pEX& s, zz_pEX& t, const zz_pEX& a, const zz_pEX& b)$/;"	f
XGCD	deplib/ntl-main/src/lzz_pX1.cpp	/^void XGCD(zz_pX& d, zz_pX& s, zz_pX& t, const zz_pX& a, const zz_pX& b)$/;"	f
XHalfGCD	deplib/ntl-main/src/GF2EX.cpp	/^void XHalfGCD(_NTL_GF2EXMatrix& M_out, GF2EX& U, GF2EX& V, long d_red)$/;"	f
XHalfGCD	deplib/ntl-main/src/GF2X1.cpp	/^void XHalfGCD(_NTL_GF2XMatrix& M_out, GF2X& U, GF2X& V, long d_red)$/;"	f	file:
XHalfGCD	deplib/ntl-main/src/ZZ_pEX.cpp	/^void XHalfGCD(_NTL_ZZ_pEXMatrix& M_out, ZZ_pEX& U, ZZ_pEX& V, long d_red)$/;"	f
XHalfGCD	deplib/ntl-main/src/ZZ_pX1.cpp	/^void XHalfGCD(ZZ_pXMatrix& M_out, ZZ_pX& U, ZZ_pX& V, long d_red)$/;"	f
XHalfGCD	deplib/ntl-main/src/lzz_pEX.cpp	/^void XHalfGCD(_NTL_zz_pEXMatrix& M_out, zz_pEX& U, zz_pEX& V, long d_red)$/;"	f
XHalfGCD	deplib/ntl-main/src/lzz_pX1.cpp	/^void XHalfGCD(zz_pXMatrix& M_out, zz_pX& U, zz_pX& V, long d_red)$/;"	f
XOR	deplib/ntl-main/src/lip.cpp	/^XOR(long a, long b)$/;"	f	file:
XOR_VEC	deplib/ntl-main/src/ZZ.cpp	2987;"	d	file:
XOR_VEC	deplib/ntl-main/src/ZZ.cpp	3039;"	d	file:
XOVER_SCALE	deplib/ntl-main/src/GF2X1.cpp	22;"	d	file:
XOVER_SCALE	deplib/ntl-main/src/GF2X1.cpp	24;"	d	file:
XX	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct XX { private: X x; };$/;"	s	file:
XX	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct XX { private: X x; };$/;"	s	file:
XXGCD	deplib/ntl-main/src/GF2X1.cpp	/^void XXGCD(GF2X& d, GF2X& r_out, const GF2X& a_in, const GF2X& b_in)$/;"	f	file:
XX_STEP	deplib/ntl-main/src/GF2X1.cpp	2119;"	d	file:
Xor	aes_whitebox_tables.cc	/^constexpr uint8_t Xor[13][96][16][16] = {$/;"	m	namespace:__anon5	file:
ZEROP	deplib/ntl-main/src/lip.cpp	/^inline long ZEROP(_ntl_gbigint p)$/;"	f	file:
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^ZZ() { }$/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^ZZ(INIT_SIZE_TYPE, long k) $/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^ZZ(INIT_VAL_TYPE, int a)  { _ntl_gintoz(a, &rep); }$/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^ZZ(INIT_VAL_TYPE, long a)  { _ntl_gintoz(a, &rep); }$/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^ZZ(INIT_VAL_TYPE, unsigned int a)  { _ntl_guintoz((unsigned long) a, &rep); }$/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^ZZ(INIT_VAL_TYPE, unsigned long a)  { _ntl_guintoz(a, &rep); }$/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^ZZ(ZZ& x, INIT_TRANS_TYPE) { rep.swap(x.rep); }$/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^ZZ(const ZZ& a) $/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^class ZZ {$/;"	c
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^explicit ZZ(long a) { *this = a; }$/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ::ZZ(INIT_VAL_TYPE, const char *s)  { conv(*this, s); }$/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ::ZZ(INIT_VAL_TYPE, double a)  { conv(*this, a); }$/;"	f	class:ZZ
ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ::ZZ(INIT_VAL_TYPE, float a)  { conv(*this, a); }$/;"	f	class:ZZ
ZZFromBytes	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ ZZFromBytes(const unsigned char *p, long n)$/;"	f
ZZFromBytes	deplib/ntl-main/include/NTL/ZZ.h	/^inline void ZZFromBytes(ZZ& x, const unsigned char *p, long n)$/;"	f
ZZVec	deplib/ntl-main/include/NTL/ZZVec.h	/^   ZZVec() : v(0), len(0), bsize(0) { }$/;"	f	class:ZZVec
ZZVec	deplib/ntl-main/include/NTL/ZZVec.h	/^   ZZVec(ZZVec&& other) noexcept : ZZVec() $/;"	f	class:ZZVec
ZZVec	deplib/ntl-main/include/NTL/ZZVec.h	/^   ZZVec(long n, long d) : v(0), len(0), bsize(0)  { SetSize(n, d); }$/;"	f	class:ZZVec
ZZVec	deplib/ntl-main/include/NTL/ZZVec.h	/^class ZZVec {$/;"	c
ZZVec	deplib/ntl-main/src/ZZVec.cpp	/^ZZVec::ZZVec(const ZZVec& a) : v(0), len(0), bsize(0)$/;"	f	class:ZZVec
ZZWatcher	deplib/ntl-main/include/NTL/ZZ.h	/^   ZZWatcher(ZZ& _watched) : watched(_watched) {}$/;"	f	class:ZZWatcher
ZZWatcher	deplib/ntl-main/include/NTL/ZZ.h	/^class ZZWatcher {$/;"	c
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^ZZX() { }$/;"	f	class:ZZX
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^ZZX(INIT_SIZE_TYPE, long n) $/;"	f	class:ZZX
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^ZZX(ZZX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:ZZX
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^class ZZX {$/;"	c
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^explicit ZZX(const ZZ& a) { *this = a; }$/;"	f	class:ZZX
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^explicit ZZX(long a) { *this = a; }$/;"	f	class:ZZX
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX::ZZX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:ZZX
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX::ZZX(INIT_MONO_TYPE, long i, const ZZ& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZX
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX::ZZX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZX
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX::ZZX(long i, const ZZ& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZX
ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX::ZZX(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZX
ZZXFac_InitNumPrimes	deplib/ntl-main/src/ZZXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZXFac_InitNumPrimes = 7;$/;"	v
ZZXFac_MaxNumPrimes	deplib/ntl-main/src/ZZXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZXFac_MaxNumPrimes = 50;$/;"	v
ZZXFac_MaxPrune	deplib/ntl-main/src/ZZXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZXFac_MaxPrune = 10;$/;"	v
ZZXFac_PowerHack	deplib/ntl-main/src/ZZXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZXFac_PowerHack = 1;$/;"	v
ZZXFac_van_Hoeij	deplib/ntl-main/src/ZZXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZXFac_van_Hoeij = 1;$/;"	v
ZZX_OVERLIFT	deplib/ntl-main/src/ZZXFactoring.cpp	/^const int ZZX_OVERLIFT = NTL_BITS_PER_LONG;$/;"	v
ZZ_BlockConstructAlloc	deplib/ntl-main/include/NTL/ZZ.h	/^inline long ZZ_BlockConstructAlloc(ZZ& x, long d, long n)$/;"	f
ZZ_BlockConstructSet	deplib/ntl-main/include/NTL/ZZ.h	/^inline void ZZ_BlockConstructSet(ZZ& x, ZZ& y, long i)$/;"	f
ZZ_BlockDestroy	deplib/ntl-main/include/NTL/ZZ.h	/^inline long ZZ_BlockDestroy(ZZ& x)$/;"	f
ZZ_CRTStructAdapter	deplib/ntl-main/include/NTL/ZZ.h	/^class ZZ_CRTStructAdapter {$/;"	c
ZZ_ReduceStructAdapter	deplib/ntl-main/include/NTL/ZZ.h	/^class ZZ_ReduceStructAdapter {$/;"	c
ZZ_RemStructAdapter	deplib/ntl-main/include/NTL/ZZ.h	/^class ZZ_RemStructAdapter {$/;"	c
ZZ_RoundCorrection	deplib/ntl-main/include/NTL/ZZ.h	/^inline long ZZ_RoundCorrection(const ZZ& a, long k, long residual)$/;"	f
ZZ_TmpVecAdapter	deplib/ntl-main/include/NTL/ZZ.h	/^class ZZ_TmpVecAdapter {$/;"	c
ZZ_expo	deplib/ntl-main/src/ZZ.cpp	/^const ZZ& ZZ_expo(long e)$/;"	f
ZZ_limb_t	deplib/ntl-main/include/NTL/ZZ_limbs.h	/^typedef _ntl_limb_t ZZ_limb_t;$/;"	t
ZZ_limbs_get	deplib/ntl-main/include/NTL/ZZ_limbs.h	/^const ZZ_limb_t * ZZ_limbs_get(const ZZ& a)$/;"	f
ZZ_limbs_set	deplib/ntl-main/include/NTL/ZZ_limbs.h	/^void ZZ_limbs_set(ZZ& x, const ZZ_limb_t *p, long n)$/;"	f
ZZ_p	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ_p() { } \/\/ NO_ALLOC$/;"	f	class:ZZ_p
ZZ_p	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ_p(INIT_ALLOC_TYPE) { _ZZ_p__rep.SetSize(ZZ_pInfo->size); }  \/\/ allocates space$/;"	f	class:ZZ_p
ZZ_p	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ_p(INIT_NO_ALLOC_TYPE) { }  \/\/ allocates no space$/;"	f	class:ZZ_p
ZZ_p	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ_p(ZZ_p& x, INIT_TRANS_TYPE) : _ZZ_p__rep(x._ZZ_p__rep, INIT_TRANS) { }$/;"	f	class:ZZ_p
ZZ_p	deplib/ntl-main/include/NTL/ZZ_p.h	/^class ZZ_p {$/;"	c
ZZ_p	deplib/ntl-main/include/NTL/ZZ_p.h	/^explicit ZZ_p(long a) { *this = a; }$/;"	f	class:ZZ_p
ZZ_p	deplib/ntl-main/src/ZZ_p.cpp	/^ZZ_p::ZZ_p(INIT_VAL_TYPE, const ZZ& a)  \/\/ NO_ALLOC$/;"	f	class:ZZ_p
ZZ_p	deplib/ntl-main/src/ZZ_p.cpp	/^ZZ_p::ZZ_p(INIT_VAL_TYPE, long a) \/\/ NO_ALLOC$/;"	f	class:ZZ_p
ZZ_pBak	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ_pBak() : MustRestore(false) { }$/;"	f	class:ZZ_pBak
ZZ_pBak	deplib/ntl-main/include/NTL/ZZ_p.h	/^class ZZ_pBak {$/;"	c
ZZ_pContext	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ_pContext() { }$/;"	f	class:ZZ_pContext
ZZ_pContext	deplib/ntl-main/include/NTL/ZZ_p.h	/^class ZZ_pContext {$/;"	c
ZZ_pContext	deplib/ntl-main/include/NTL/ZZ_p.h	/^explicit ZZ_pContext(const ZZ& p) : ptr(MakeSmart<ZZ_pInfoT>(p)) { }$/;"	f	class:ZZ_pContext
ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pE() {  } \/\/ NO_ALLOC$/;"	f	class:ZZ_pE
ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pE(INIT_ALLOC_TYPE) {_ZZ_pE__rep.rep.SetMaxLength(ZZ_pE::degree());  }  \/\/ allocates space$/;"	f	class:ZZ_pE
ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pE(INIT_NO_ALLOC_TYPE) { }  \/\/ allocates no space$/;"	f	class:ZZ_pE
ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pE(ZZ_pE& x, INIT_TRANS_TYPE) : _ZZ_pE__rep(x._ZZ_pE__rep, INIT_TRANS) { }$/;"	f	class:ZZ_pE
ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^class ZZ_pE {$/;"	c
ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^explicit ZZ_pE(const ZZ_p& a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:ZZ_pE
ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^explicit ZZ_pE(long a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:ZZ_pE
ZZ_pEBak	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pEBak() : MustRestore(false) {  }$/;"	f	class:ZZ_pEBak
ZZ_pEBak	deplib/ntl-main/include/NTL/ZZ_pE.h	/^class ZZ_pEBak {$/;"	c
ZZ_pEContext	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pEContext() { }$/;"	f	class:ZZ_pEContext
ZZ_pEContext	deplib/ntl-main/include/NTL/ZZ_pE.h	/^class ZZ_pEContext {$/;"	c
ZZ_pEContext	deplib/ntl-main/include/NTL/ZZ_pE.h	/^explicit ZZ_pEContext(const ZZ_pX& p) : ptr(MakeSmart<ZZ_pEInfoT>(p)) { }$/;"	f	class:ZZ_pEContext
ZZ_pEInfo	deplib/ntl-main/src/ZZ_pE.cpp	/^ZZ_pEInfoT *ZZ_pEInfo = 0; $/;"	v
ZZ_pEInfoT	deplib/ntl-main/include/NTL/ZZ_pE.h	/^class ZZ_pEInfoT {$/;"	c
ZZ_pEInfoT	deplib/ntl-main/src/ZZ_pE.cpp	/^ZZ_pEInfoT::ZZ_pEInfoT(const ZZ_pX& NewP)$/;"	f	class:ZZ_pEInfoT
ZZ_pEPush	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pEPush() { bak.save(); }$/;"	f	class:ZZ_pEPush
ZZ_pEPush	deplib/ntl-main/include/NTL/ZZ_pE.h	/^class ZZ_pEPush {$/;"	c
ZZ_pEPush	deplib/ntl-main/include/NTL/ZZ_pE.h	/^explicit ZZ_pEPush(const ZZ_pEContext& context) { bak.save(); context.restore(); }$/;"	f	class:ZZ_pEPush
ZZ_pEPush	deplib/ntl-main/include/NTL/ZZ_pE.h	/^explicit ZZ_pEPush(const ZZ_pX& p) { bak.save(); ZZ_pEContext c(p); c.restore(); }$/;"	f	class:ZZ_pEPush
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^ZZ_pEX() { }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^ZZ_pEX(INIT_SIZE_TYPE, long n) { rep.SetMaxLength(n); }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^ZZ_pEX(ZZ_pEX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^class ZZ_pEX {$/;"	c
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^explicit ZZ_pEX(const ZZ_p& a) { *this = a; }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^explicit ZZ_pEX(const ZZ_pE& a) { *this = a; }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^explicit ZZ_pEX(long a) { *this = a; }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(INIT_MONO_TYPE, long i, const ZZ_p& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(INIT_MONO_TYPE, long i, const ZZ_pE& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(long i, const ZZ_p& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(long i, const ZZ_pE& a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX::ZZ_pEX(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:ZZ_pEX
ZZ_pEXArgBound	deplib/ntl-main/src/ZZ_pEX.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZ_pEXArgBound = 0;$/;"	v
ZZ_pEXArgument	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^struct ZZ_pEXArgument {$/;"	s
ZZ_pEXFileThresh	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL double ZZ_pEXFileThresh = NTL_FILE_THRESH;$/;"	v
ZZ_pEXModulus	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^class ZZ_pEXModulus {$/;"	c
ZZ_pEXModulus	deplib/ntl-main/src/ZZ_pEX.cpp	/^ZZ_pEXModulus::ZZ_pEXModulus()$/;"	f	class:ZZ_pEXModulus
ZZ_pEXModulus	deplib/ntl-main/src/ZZ_pEX.cpp	/^ZZ_pEXModulus::ZZ_pEXModulus(const ZZ_pEX& ff)$/;"	f	class:ZZ_pEXModulus
ZZ_pEXTransMultiplier	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^struct ZZ_pEXTransMultiplier {$/;"	s
ZZ_pEX_BlockingFactor	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZ_pEX_BlockingFactor = 10;$/;"	v
ZZ_pEX_GCDTableSize	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZ_pEX_GCDTableSize = 4;$/;"	v
ZZ_pEX_MOD_MUL	deplib/ntl-main/src/ZZ_pEX.cpp	/^const long ZZ_pEX_MOD_MUL = 1;$/;"	v
ZZ_pEX_MOD_PLAIN	deplib/ntl-main/src/ZZ_pEX.cpp	/^const long ZZ_pEX_MOD_PLAIN = 0;$/;"	v
ZZ_pE_SizeInWords	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^ZZ_pE_SizeInWords()$/;"	f	file:
ZZ_pFFTInfoT	deplib/ntl-main/include/NTL/ZZ_p.h	/^   ZZ_pFFTInfoT() { }$/;"	f	class:ZZ_pFFTInfoT
ZZ_pFFTInfoT	deplib/ntl-main/include/NTL/ZZ_p.h	/^class ZZ_pFFTInfoT {$/;"	c
ZZ_pInfo	deplib/ntl-main/src/ZZ_p.cpp	/^NTL_CHEAP_THREAD_LOCAL ZZ_pInfoT *ZZ_pInfo = 0;$/;"	v
ZZ_pInfoT	deplib/ntl-main/include/NTL/ZZ_p.h	/^class ZZ_pInfoT {$/;"	c
ZZ_pInfoT	deplib/ntl-main/src/ZZ_p.cpp	/^ZZ_pInfoT::ZZ_pInfoT(const ZZ& NewP)$/;"	f	class:ZZ_pInfoT
ZZ_pInstalled	deplib/ntl-main/src/ZZ_p.cpp	/^NTL_CHEAP_THREAD_LOCAL bool ZZ_pInstalled = false;$/;"	v
ZZ_pPush	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ_pPush() { bak.save(); }$/;"	f	class:ZZ_pPush
ZZ_pPush	deplib/ntl-main/include/NTL/ZZ_p.h	/^class ZZ_pPush {$/;"	c
ZZ_pPush	deplib/ntl-main/include/NTL/ZZ_p.h	/^explicit ZZ_pPush(const ZZ& p) { bak.save(); ZZ_pContext c(p); c.restore(); }$/;"	f	class:ZZ_pPush
ZZ_pPush	deplib/ntl-main/include/NTL/ZZ_p.h	/^explicit ZZ_pPush(const ZZ_pContext& context) { bak.save(); context.restore(); }$/;"	f	class:ZZ_pPush
ZZ_pTmpSpace	deplib/ntl-main/src/ZZ_p.cpp	/^NTL_CHEAP_THREAD_LOCAL ZZ_pTmpSpaceT *ZZ_pTmpSpace = 0;$/;"	v
ZZ_pTmpSpaceT	deplib/ntl-main/include/NTL/ZZ_p.h	/^class ZZ_pTmpSpaceT {$/;"	c
ZZ_pWatcher	deplib/ntl-main/include/NTL/ZZ_p.h	/^   ZZ_pWatcher(ZZ_p& _watched) : watched(_watched) { }$/;"	f	class:ZZ_pWatcher
ZZ_pWatcher	deplib/ntl-main/include/NTL/ZZ_p.h	/^class ZZ_pWatcher {$/;"	c
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^ZZ_pX() { }$/;"	f	class:ZZ_pX
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^ZZ_pX(INIT_SIZE_TYPE, long n) { rep.SetMaxLength(n); }$/;"	f	class:ZZ_pX
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^ZZ_pX(ZZ_pX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:ZZ_pX
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^class ZZ_pX {$/;"	c
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^explicit ZZ_pX(const ZZ_p& a) { *this = a; }$/;"	f	class:ZZ_pX
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^explicit ZZ_pX(long a) { *this = a; }$/;"	f	class:ZZ_pX
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX::ZZ_pX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); } $/;"	f	class:ZZ_pX
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX::ZZ_pX(INIT_MONO_TYPE, long i, const ZZ_p& a) { SetCoeff(*this, i, a); } $/;"	f	class:ZZ_pX
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX::ZZ_pX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); } $/;"	f	class:ZZ_pX
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX::ZZ_pX(long i, const ZZ_p& a) { SetCoeff(*this, i, a); } $/;"	f	class:ZZ_pX
ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX::ZZ_pX(long i, long a) { SetCoeff(*this, i, a); } $/;"	f	class:ZZ_pX
ZZ_pXArgBound	deplib/ntl-main/src/ZZ_pX1.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZ_pXArgBound = 0;$/;"	v
ZZ_pXArgument	deplib/ntl-main/include/NTL/ZZ_pX.h	/^struct ZZ_pXArgument {$/;"	s
ZZ_pXFileThresh	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL double ZZ_pXFileThresh = NTL_FILE_THRESH;$/;"	v
ZZ_pXMatrix	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   ZZ_pXMatrix() { }$/;"	f	class:ZZ_pXMatrix
ZZ_pXMatrix	deplib/ntl-main/include/NTL/ZZ_pX.h	/^class ZZ_pXMatrix {$/;"	c
ZZ_pXModRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   ZZ_pXModRep() : n(0), MaxN(0), NumPrimes(0) {  }$/;"	f	class:ZZ_pXModRep
ZZ_pXModRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   ZZ_pXModRep(INIT_SIZE_TYPE, long NewN) : n(0), MaxN(0), NumPrimes(0)$/;"	f	class:ZZ_pXModRep
ZZ_pXModRep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^class ZZ_pXModRep {$/;"	c
ZZ_pXModulus	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   ZZ_pXModulus() : UseFFT(0), n(-1)  { }$/;"	f	class:ZZ_pXModulus
ZZ_pXModulus	deplib/ntl-main/include/NTL/ZZ_pX.h	/^class ZZ_pXModulus {$/;"	c
ZZ_pXModulus	deplib/ntl-main/src/ZZ_pX.cpp	/^ZZ_pXModulus::ZZ_pXModulus(const ZZ_pX& ff)$/;"	f	class:ZZ_pXModulus
ZZ_pXMultiplier	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   ZZ_pXMultiplier() : UseFFT(0)  { }$/;"	f	class:ZZ_pXMultiplier
ZZ_pXMultiplier	deplib/ntl-main/include/NTL/ZZ_pX.h	/^class ZZ_pXMultiplier {$/;"	c
ZZ_pXMultiplier	deplib/ntl-main/src/ZZ_pX.cpp	/^ZZ_pXMultiplier::ZZ_pXMultiplier(const ZZ_pX& b, const ZZ_pXModulus& F)$/;"	f	class:ZZ_pXMultiplier
ZZ_pXNewArgument	deplib/ntl-main/include/NTL/ZZ_pX.h	/^struct ZZ_pXNewArgument {$/;"	s
ZZ_pXNewArgument	deplib/ntl-main/include/NTL/ZZ_pX.h	/^typedef ZZ_pXArgument ZZ_pXNewArgument;$/;"	t
ZZ_pXTransMultiplier	deplib/ntl-main/src/ZZ_pXTest.cpp	/^struct ZZ_pXTransMultiplier {$/;"	s	file:
ZZ_pX_BlockingFactor	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZ_pX_BlockingFactor = 10;$/;"	v
ZZ_pX_GCDTableSize	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long ZZ_pX_GCDTableSize = 4;$/;"	v
ZZ_red_struct	deplib/ntl-main/include/NTL/MatPrime.h	/^   Vec<const sp_ZZ_reduce_struct*> ZZ_red_struct;$/;"	m	struct:MatPrime_crt_helper
ZZ_red_struct	deplib/ntl-main/include/NTL/MatPrime.h	/^   Vec<sp_ZZ_reduce_struct> ZZ_red_struct;$/;"	m	struct:MatPrime_crt_helper
ZZ_red_struct	deplib/ntl-main/include/NTL/lzz_p.h	/^   sp_ZZ_reduce_struct ZZ_red_struct;$/;"	m	class:zz_pInfoT
ZZ_red_struct	deplib/ntl-main/include/NTL/lzz_p.h	/^const sp_ZZ_reduce_struct& ZZ_red_struct() const { return ptr->ZZ_red_struct; } $/;"	f	class:zz_pContext
ZZ_red_struct	deplib/ntl-main/include/NTL/lzz_p.h	/^static const sp_ZZ_reduce_struct& ZZ_red_struct() { return zz_pInfo->ZZ_red_struct; }$/;"	f	class:zz_p
ZZ_storage	deplib/ntl-main/include/NTL/ZZ.h	/^inline long ZZ_storage(long d)$/;"	f
ZeroLength	deplib/ntl-main/include/NTL/WordVector.h	/^   void ZeroLength() { if (rep) rep[-1] = 0; }$/;"	f	class:WordVector
_GF2E__rep	deplib/ntl-main/include/NTL/GF2E.h	/^GF2X _GF2E__rep;$/;"	m	class:GF2E
_GF2__rep	deplib/ntl-main/include/NTL/GF2.h	/^unsigned long _GF2__rep;$/;"	m	class:GF2
_NTL_GF2EXMatrix	deplib/ntl-main/src/GF2EX.cpp	/^   _NTL_GF2EXMatrix() { }$/;"	f	class:_NTL_GF2EXMatrix
_NTL_GF2EXMatrix	deplib/ntl-main/src/GF2EX.cpp	/^class _NTL_GF2EXMatrix {$/;"	c	file:
_NTL_GF2XMatrix	deplib/ntl-main/src/GF2X1.cpp	/^   _NTL_GF2XMatrix() { }$/;"	f	class:_NTL_GF2XMatrix
_NTL_GF2XMatrix	deplib/ntl-main/src/GF2X1.cpp	/^class _NTL_GF2XMatrix {$/;"	c	file:
_NTL_ZZ_pEXMatrix	deplib/ntl-main/src/ZZ_pEX.cpp	/^   _NTL_ZZ_pEXMatrix() { }$/;"	f	class:_NTL_ZZ_pEXMatrix
_NTL_ZZ_pEXMatrix	deplib/ntl-main/src/ZZ_pEX.cpp	/^class _NTL_ZZ_pEXMatrix {$/;"	c	file:
_NTL_zz_pEXMatrix	deplib/ntl-main/src/lzz_pEX.cpp	/^   _NTL_zz_pEXMatrix() { }$/;"	f	class:_NTL_zz_pEXMatrix
_NTL_zz_pEXMatrix	deplib/ntl-main/src/lzz_pEX.cpp	/^class _NTL_zz_pEXMatrix {$/;"	c	file:
_ZZ_local_stack	deplib/ntl-main/src/ZZ.cpp	/^   _ZZ_local_stack() { top = -1; }$/;"	f	struct:_ZZ_local_stack
_ZZ_local_stack	deplib/ntl-main/src/ZZ.cpp	/^struct _ZZ_local_stack {$/;"	s	file:
_ZZ_pE__rep	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pX _ZZ_pE__rep;$/;"	m	class:ZZ_pE
_ZZ_p__rep	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ _ZZ_p__rep;$/;"	m	class:ZZ_p
__cplusplus	deplib/ntl-main/src/GenConfigInfo.cpp	20;"	d	file:
_bswap	deplib/ntl-main/src/ZZ.cpp	2017;"	d	file:
_bswap64	deplib/ntl-main/src/ZZ.cpp	2014;"	d	file:
_card	deplib/ntl-main/include/NTL/GF2E.h	/^   Lazy<ZZ> _card;$/;"	m	class:GF2EInfoT
_card	deplib/ntl-main/include/NTL/ZZ_pE.h	/^   Lazy<ZZ>  _card;$/;"	m	class:ZZ_pEInfoT
_card	deplib/ntl-main/include/NTL/lzz_pE.h	/^   Lazy<ZZ>  _card;$/;"	m	class:zz_pEInfoT
_card_base	deplib/ntl-main/include/NTL/ZZ_pE.h	/^   ZZ   _card_base;$/;"	m	class:ZZ_pEInfoT
_card_base	deplib/ntl-main/include/NTL/lzz_pE.h	/^   long _card_base;$/;"	m	class:zz_pEInfoT
_card_exp	deplib/ntl-main/include/NTL/GF2E.h	/^   long _card_exp;$/;"	m	class:GF2EInfoT
_card_exp	deplib/ntl-main/include/NTL/ZZ_pE.h	/^   long _card_exp;$/;"	m	class:ZZ_pEInfoT
_card_exp	deplib/ntl-main/include/NTL/lzz_pE.h	/^   long _card_exp;$/;"	m	class:zz_pEInfoT
_len	deplib/ntl-main/include/NTL/vec_GF2.h	/^   long _len;  \/\/ length (in bits)$/;"	m	class:Vec
_mat__numcols	deplib/ntl-main/include/NTL/matrix.h	/^   long _mat__numcols;  $/;"	m	class:Mat
_mat__rep	deplib/ntl-main/include/NTL/matrix.h	/^   Vec< Vec<T> > _mat__rep;  $/;"	m	class:Mat
_maxlen	deplib/ntl-main/include/NTL/vec_GF2.h	/^   long _maxlen;  \/\/ (MaxLength << 1) | (fixed)$/;"	m	class:Vec
_ntl_ALLOC	deplib/ntl-main/include/NTL/lip.h	/^inline long& _ntl_ALLOC(_ntl_gbigint p)$/;"	f
_ntl_AlignedVectorHeader	deplib/ntl-main/include/NTL/vector.h	/^union _ntl_AlignedVectorHeader {$/;"	u
_ntl_BasicThreadPool_dummy_symbol	deplib/ntl-main/src/BasicThreadPool.cpp	/^int _ntl_BasicThreadPool_dummy_symbol = 0;$/;"	v
_ntl_ForceToMem	deplib/ntl-main/src/ctools.cpp	/^void _ntl_ForceToMem(double *p)$/;"	f
_ntl_GetPID	deplib/ntl-main/src/GetPID.cpp	/^unsigned long _ntl_GetPID()$/;"	f
_ntl_GetPID	deplib/ntl-main/src/GetPID1.cpp	/^unsigned long _ntl_GetPID()$/;"	f
_ntl_GetPID	deplib/ntl-main/src/GetPID2.cpp	/^unsigned long _ntl_GetPID()$/;"	f
_ntl_GetTime	deplib/ntl-main/src/GetTime.cpp	/^double _ntl_GetTime()$/;"	f
_ntl_GetTime	deplib/ntl-main/src/GetTime0.cpp	/^double _ntl_GetTime( )$/;"	f
_ntl_GetTime	deplib/ntl-main/src/GetTime1.cpp	/^double _ntl_GetTime()$/;"	f
_ntl_GetTime	deplib/ntl-main/src/GetTime2.cpp	/^double _ntl_GetTime()$/;"	f
_ntl_GetTime	deplib/ntl-main/src/GetTime3.cpp	/^double _ntl_GetTime()$/;"	f
_ntl_GetTime	deplib/ntl-main/src/GetTime4.cpp	/^double _ntl_GetTime()$/;"	f
_ntl_GetTime	deplib/ntl-main/src/GetTime5.cpp	/^double _ntl_GetTime()$/;"	f
_ntl_GetWallTime	deplib/ntl-main/src/CheckCHRONO_TIME.cpp	/^double _ntl_GetWallTime( )$/;"	f
_ntl_GetWallTime	deplib/ntl-main/src/CheckMACOS_TIME.cpp	/^double _ntl_GetWallTime( )$/;"	f
_ntl_GetWallTime	deplib/ntl-main/src/CheckPOSIX_TIME.cpp	/^double _ntl_GetWallTime( )$/;"	f
_ntl_GetWallTime	deplib/ntl-main/src/ctools.cpp	/^double _ntl_GetWallTime( )$/;"	f
_ntl_IsFinite	deplib/ntl-main/src/ctools.cpp	/^long _ntl_IsFinite(double *p)$/;"	f
_ntl_MPN_MUL_1C	deplib/ntl-main/src/lip.cpp	/^void _ntl_MPN_MUL_1C(_ntl_limb_t& cout, _ntl_limb_t *dst, $/;"	f	file:
_ntl_PINNED	deplib/ntl-main/include/NTL/lip.h	/^inline long _ntl_PINNED(_ntl_gbigint p)$/;"	f
_ntl_SIZE	deplib/ntl-main/include/NTL/lip.h	/^inline long& _ntl_SIZE(_ntl_gbigint p)$/;"	f
_ntl_VectorHeader	deplib/ntl-main/include/NTL/vector.h	/^struct _ntl_VectorHeader {$/;"	s
_ntl_ZEROP	deplib/ntl-main/include/NTL/lip.h	/^inline long _ntl_ZEROP(_ntl_gbigint p)$/;"	f
_ntl_addmulp	deplib/ntl-main/src/lip.cpp	/^_ntl_addmulp(_ntl_limb_t& a, _ntl_limb_t b, _ntl_limb_t d, _ntl_limb_t& t) $/;"	f	file:
_ntl_addmulpsq	deplib/ntl-main/src/lip.cpp	/^_ntl_addmulpsq(_ntl_limb_t& a, _ntl_limb_t b, _ntl_limb_t& t)$/;"	f	file:
_ntl_addmulsq	deplib/ntl-main/src/lip.cpp	/^_ntl_addmulsq(long n, _ntl_limb_t *a, const _ntl_limb_t *b)$/;"	f
_ntl_bpl_divrem	deplib/ntl-main/include/NTL/ctools.h	/^_ntl_bpl_divrem(long a, long& q, long& r)$/;"	f
_ntl_bpl_divrem	deplib/ntl-main/include/NTL/ctools.h	/^_ntl_bpl_divrem(unsigned long a, long& q, long& r)$/;"	f
_ntl_count_bits	deplib/ntl-main/include/NTL/ctools.h	/^_ntl_count_bits(unsigned long x)$/;"	f
_ntl_crt_struct	deplib/ntl-main/include/NTL/lip.h	/^class _ntl_crt_struct {$/;"	c
_ntl_crt_struct_basic	deplib/ntl-main/src/lip.cpp	/^class _ntl_crt_struct_basic : public _ntl_crt_struct {$/;"	c	file:
_ntl_crt_struct_build	deplib/ntl-main/src/lip.cpp	/^_ntl_crt_struct_build(long n, _ntl_gbigint p, long (*primes)(long))$/;"	f
_ntl_crt_struct_fast	deplib/ntl-main/src/lip.cpp	/^class _ntl_crt_struct_fast : public _ntl_crt_struct {$/;"	c	file:
_ntl_crt_struct_tbl	deplib/ntl-main/src/lip.cpp	/^class _ntl_crt_struct_tbl : public _ntl_crt_struct {$/;"	c	file:
_ntl_div21p	deplib/ntl-main/src/lip.cpp	/^_ntl_div21p(_ntl_limb_t& numhigh, _ntl_limb_t numlow, _ntl_limb_t denom, double deninv, _ntl_limb_t& quot) $/;"	f	file:
_ntl_enable_if	deplib/ntl-main/include/NTL/ctools.h	/^struct _ntl_enable_if$/;"	s
_ntl_enable_if	deplib/ntl-main/include/NTL/ctools.h	/^struct _ntl_enable_if<true, T> {$/;"	s
_ntl_g2log	deplib/ntl-main/src/lip.cpp	/^long _ntl_g2log(_ntl_gbigint a)$/;"	f
_ntl_g2logs	deplib/ntl-main/include/NTL/lip.h	/^    long _ntl_g2logs(long a)$/;"	f
_ntl_g_dec	deplib/ntl-main/src/lip.cpp	/^void _ntl_g_dec(_ntl_limb_t *p, long n)   $/;"	f	file:
_ntl_g_inc	deplib/ntl-main/src/lip.cpp	/^void _ntl_g_inc(_ntl_limb_t *p, long n)$/;"	f	file:
_ntl_g_inc_carry	deplib/ntl-main/src/lip.cpp	/^void _ntl_g_inc_carry(_ntl_limb_t& c, _ntl_limb_t *p, long n)   $/;"	f	file:
_ntl_gabs	deplib/ntl-main/src/lip.cpp	/^void _ntl_gabs(_ntl_gbigint *pa)$/;"	f
_ntl_gadd	deplib/ntl-main/src/lip.cpp	/^_ntl_gadd(_ntl_gbigint a, _ntl_gbigint b, _ntl_gbigint *cc)$/;"	f
_ntl_gaddmod	deplib/ntl-main/src/lip.cpp	/^_ntl_gaddmod($/;"	f
_ntl_gaddmul	deplib/ntl-main/src/lip.cpp	/^_ntl_gaddmul(_ntl_gbigint x, _ntl_gbigint y,  _ntl_gbigint *ww)$/;"	f
_ntl_gand	deplib/ntl-main/src/lip.cpp	/^void _ntl_gand(_ntl_gbigint a, _ntl_gbigint b, _ntl_gbigint *cc)$/;"	f
_ntl_gaorsmul	deplib/ntl-main/src/lip.cpp	/^_ntl_gaorsmul(_ntl_gbigint x, _ntl_gbigint y, long sub,  _ntl_gbigint *ww)$/;"	f
_ntl_gaorsmul_1	deplib/ntl-main/src/lip.cpp	/^_ntl_gaorsmul_1(_ntl_gbigint x, long yy, long sub, _ntl_gbigint *ww)$/;"	f
_ntl_gbigint	deplib/ntl-main/include/NTL/lip.h	/^typedef _ntl_gbigint_body *_ntl_gbigint;$/;"	t
_ntl_gbigint_body	deplib/ntl-main/include/NTL/lip.h	/^struct _ntl_gbigint_body {$/;"	s
_ntl_gbigint_deleter	deplib/ntl-main/src/lip.cpp	/^class _ntl_gbigint_deleter {$/;"	c	file:
_ntl_gbigint_watcher	deplib/ntl-main/src/lip.cpp	/^   _ntl_gbigint_watcher(_ntl_gbigint *_watched) : watched(_watched) {}$/;"	f	class:_ntl_gbigint_watcher
_ntl_gbigint_watcher	deplib/ntl-main/src/lip.cpp	/^class _ntl_gbigint_watcher {$/;"	c	file:
_ntl_gbigint_wrapped	deplib/ntl-main/src/lip.cpp	/^typedef WrappedPtr<_ntl_gbigint_body, _ntl_gbigint_deleter> _ntl_gbigint_wrapped;$/;"	t	file:
_ntl_gbit	deplib/ntl-main/src/lip.cpp	/^long _ntl_gbit(_ntl_gbigint a, long p)$/;"	f
_ntl_gblock_construct_alloc	deplib/ntl-main/src/lip.cpp	/^long _ntl_gblock_construct_alloc(_ntl_gbigint *x, long d, long n)$/;"	f
_ntl_gblock_construct_set	deplib/ntl-main/src/lip.cpp	/^void _ntl_gblock_construct_set(_ntl_gbigint x, _ntl_gbigint *y, long i)$/;"	f
_ntl_gblock_destroy	deplib/ntl-main/src/lip.cpp	/^long _ntl_gblock_destroy(_ntl_gbigint x)$/;"	f
_ntl_gblock_storage	deplib/ntl-main/src/lip.cpp	/^long _ntl_gblock_storage(long d)$/;"	f
_ntl_gbytesfromz	deplib/ntl-main/src/lip.cpp	/^void _ntl_gbytesfromz(unsigned char *p, _ntl_gbigint a, long n)$/;"	f
_ntl_gbytesfromz	deplib/ntl-main/src/lip.cpp	/^void _ntl_gbytesfromz(unsigned char *p, _ntl_gbigint a, long nn)$/;"	f
_ntl_gcompare	deplib/ntl-main/src/lip.cpp	/^long _ntl_gcompare(_ntl_gbigint a, _ntl_gbigint b)$/;"	f
_ntl_gcopy	deplib/ntl-main/src/lip.cpp	/^void _ntl_gcopy(_ntl_gbigint a, _ntl_gbigint *bb)$/;"	f
_ntl_gcrtinrange	deplib/ntl-main/src/lip.cpp	/^long _ntl_gcrtinrange(_ntl_gbigint g, _ntl_gbigint a)$/;"	f
_ntl_gdigit	deplib/ntl-main/src/lip.cpp	/^long _ntl_gdigit(_ntl_gbigint a, long i)$/;"	f
_ntl_gdiv	deplib/ntl-main/src/lip.cpp	/^void _ntl_gdiv(_ntl_gbigint a, _ntl_gbigint d, $/;"	f
_ntl_gdoub	deplib/ntl-main/src/lip.cpp	/^double _ntl_gdoub(_ntl_gbigint n)$/;"	f
_ntl_gdoub_aux	deplib/ntl-main/src/lip.cpp	/^double _ntl_gdoub_aux(_ntl_gbigint n)$/;"	f
_ntl_gdoubtoz	deplib/ntl-main/src/lip.cpp	/^void _ntl_gdoubtoz(double a, _ntl_gbigint *xx)$/;"	f
_ntl_general_rem_one_struct	deplib/ntl-main/src/lip.cpp	/^struct _ntl_general_rem_one_struct  { };$/;"	s	file:
_ntl_general_rem_one_struct	deplib/ntl-main/src/lip.cpp	/^struct _ntl_general_rem_one_struct  {$/;"	s	file:
_ntl_general_rem_one_struct_apply	deplib/ntl-main/src/lip.cpp	/^_ntl_general_rem_one_struct_apply(_ntl_gbigint a, long p, _ntl_general_rem_one_struct *pinfo)$/;"	f
_ntl_general_rem_one_struct_apply1	deplib/ntl-main/src/lip.cpp	/^_ntl_general_rem_one_struct_apply1(_ntl_limb_t *a_data, long a_sz, long a_neg, long p, $/;"	f
_ntl_general_rem_one_struct_build	deplib/ntl-main/src/lip.cpp	/^_ntl_general_rem_one_struct_build(long p)$/;"	f
_ntl_general_rem_one_struct_delete	deplib/ntl-main/src/lip.cpp	/^_ntl_general_rem_one_struct_delete(_ntl_general_rem_one_struct *pinfo) $/;"	f
_ntl_gexp	deplib/ntl-main/src/lip.cpp	/^_ntl_gexp($/;"	f
_ntl_gexps	deplib/ntl-main/src/lip.cpp	/^_ntl_gexps($/;"	f
_ntl_gexteucl	deplib/ntl-main/src/lip.cpp	/^_ntl_gexteucl($/;"	f
_ntl_gfree	deplib/ntl-main/src/lip.cpp	/^void _ntl_gfree(_ntl_gbigint x)$/;"	f
_ntl_gfrombytes	deplib/ntl-main/src/lip.cpp	/^void _ntl_gfrombytes(_ntl_gbigint *x, const unsigned char *p, long n)$/;"	f
_ntl_ggcd	deplib/ntl-main/src/lip.cpp	/^_ntl_ggcd(_ntl_gbigint mm1, _ntl_gbigint mm2, _ntl_gbigint *rres)$/;"	f
_ntl_ggcd	deplib/ntl-main/src/lip.cpp	/^void _ntl_ggcd(_ntl_gbigint m1, _ntl_gbigint m2, _ntl_gbigint *r)$/;"	f
_ntl_ggcd_alt	deplib/ntl-main/src/lip.cpp	/^_ntl_ggcd_alt(_ntl_gbigint mm1, _ntl_gbigint mm2, _ntl_gbigint *rres)$/;"	f
_ntl_gintoz	deplib/ntl-main/src/lip.cpp	/^void _ntl_gintoz(long d, _ntl_gbigint *aa)$/;"	f
_ntl_ginv	deplib/ntl-main/src/lip.cpp	/^_ntl_ginv($/;"	f
_ntl_ginv	deplib/ntl-main/src/lip.cpp	/^long _ntl_ginv(_ntl_gbigint ain, _ntl_gbigint nin, _ntl_gbigint *invv)$/;"	f
_ntl_ginvmod	deplib/ntl-main/src/lip.cpp	/^_ntl_ginvmod($/;"	f
_ntl_gisone	deplib/ntl-main/src/lip.cpp	/^long _ntl_gisone(_ntl_gbigint rep)$/;"	f
_ntl_giszero	deplib/ntl-main/include/NTL/lip.h	/^    long _ntl_giszero (_ntl_gbigint a)$/;"	f
_ntl_glimbs_get	deplib/ntl-main/include/NTL/ZZ_limbs.h	/^const _ntl_limb_t * _ntl_glimbs_get(_ntl_gbigint p)$/;"	f
_ntl_glimbs_set	deplib/ntl-main/src/lip.cpp	/^void _ntl_glimbs_set(const _ntl_limb_t *p, long n, _ntl_gbigint *x)$/;"	f
_ntl_glog	deplib/ntl-main/src/lip.cpp	/^double _ntl_glog(_ntl_gbigint n)$/;"	f
_ntl_glowbits	deplib/ntl-main/src/lip.cpp	/^void _ntl_glowbits(_ntl_gbigint a, long b, _ntl_gbigint *cc)$/;"	f
_ntl_glshift	deplib/ntl-main/src/lip.cpp	/^void _ntl_glshift(_ntl_gbigint n, long k, _ntl_gbigint *rres)$/;"	f
_ntl_gmakeodd	deplib/ntl-main/src/lip.cpp	/^long _ntl_gmakeodd(_ntl_gbigint *nn)$/;"	f
_ntl_gmaxalloc	deplib/ntl-main/include/NTL/lip.h	/^    long _ntl_gmaxalloc(_ntl_gbigint x)$/;"	f
_ntl_gmod	deplib/ntl-main/src/lip.cpp	/^void _ntl_gmod(_ntl_gbigint a, _ntl_gbigint d, _ntl_gbigint *rr)$/;"	f
_ntl_gmp_powermod	deplib/ntl-main/src/lip.cpp	/^void _ntl_gmp_powermod(_ntl_gbigint g, _ntl_gbigint e, _ntl_gbigint F,$/;"	f	file:
_ntl_gmp_powermod_alt	deplib/ntl-main/src/lip.cpp	/^void _ntl_gmp_powermod_alt(_ntl_gbigint g, _ntl_gbigint e, _ntl_gbigint F,$/;"	f	file:
_ntl_gmul	deplib/ntl-main/src/lip.cpp	/^void _ntl_gmul(_ntl_gbigint a, _ntl_gbigint b, _ntl_gbigint *cc)$/;"	f
_ntl_gmulmod	deplib/ntl-main/src/lip.cpp	/^_ntl_gmulmod($/;"	f
_ntl_gnegate	deplib/ntl-main/src/lip.cpp	/^void _ntl_gnegate(_ntl_gbigint *aa)$/;"	f
_ntl_gnumtwos	deplib/ntl-main/src/lip.cpp	/^long _ntl_gnumtwos(_ntl_gbigint n)$/;"	f
_ntl_godd	deplib/ntl-main/src/lip.cpp	/^long _ntl_godd(_ntl_gbigint a)$/;"	f
_ntl_gone	deplib/ntl-main/src/lip.cpp	/^void _ntl_gone(_ntl_gbigint *aa)$/;"	f
_ntl_gor	deplib/ntl-main/src/lip.cpp	/^void _ntl_gor(_ntl_gbigint a, _ntl_gbigint b, _ntl_gbigint *cc)$/;"	f
_ntl_gpowermod	deplib/ntl-main/src/lip.cpp	/^void _ntl_gpowermod(_ntl_gbigint g, _ntl_gbigint e, _ntl_gbigint F,$/;"	f
_ntl_gquickmod	deplib/ntl-main/src/lip.cpp	/^void _ntl_gquickmod(_ntl_gbigint *rr, _ntl_gbigint d)$/;"	f
_ntl_ground_correction	deplib/ntl-main/src/lip.cpp	/^long _ntl_ground_correction(_ntl_gbigint a, long k, long residual)$/;"	f
_ntl_grshift	deplib/ntl-main/src/lip.cpp	/^void _ntl_grshift(_ntl_gbigint n, long k, _ntl_gbigint *rres)$/;"	f
_ntl_gsadd	deplib/ntl-main/src/lip.cpp	/^_ntl_gsadd(_ntl_gbigint a, long b, _ntl_gbigint *cc)$/;"	f
_ntl_gsaddmul	deplib/ntl-main/src/lip.cpp	/^_ntl_gsaddmul(_ntl_gbigint x, long yy,  _ntl_gbigint *ww)$/;"	f
_ntl_gscompare	deplib/ntl-main/src/lip.cpp	/^long _ntl_gscompare(_ntl_gbigint a, long b)$/;"	f
_ntl_gsdiv	deplib/ntl-main/src/lip.cpp	/^long _ntl_gsdiv(_ntl_gbigint a, long d, _ntl_gbigint *bb)$/;"	f
_ntl_gsetbit	deplib/ntl-main/src/lip.cpp	/^long _ntl_gsetbit(_ntl_gbigint *a, long b)$/;"	f
_ntl_gsetlength	deplib/ntl-main/src/lip.cpp	/^void _ntl_gsetlength(_ntl_gbigint *v, long len)$/;"	f
_ntl_gsign	deplib/ntl-main/include/NTL/lip.h	/^    long _ntl_gsign(_ntl_gbigint a)$/;"	f
_ntl_gsize	deplib/ntl-main/include/NTL/lip.h	/^long _ntl_gsize(_ntl_gbigint rep)$/;"	f
_ntl_gslowbits	deplib/ntl-main/src/lip.cpp	/^long _ntl_gslowbits(_ntl_gbigint a, long p)$/;"	f
_ntl_gsmod	deplib/ntl-main/src/lip.cpp	/^long _ntl_gsmod(_ntl_gbigint a, long d)$/;"	f
_ntl_gsmul	deplib/ntl-main/src/lip.cpp	/^_ntl_gsmul(_ntl_gbigint a, long d, _ntl_gbigint *bb)$/;"	f
_ntl_gsmulmod	deplib/ntl-main/src/lip.cpp	/^_ntl_gsmulmod($/;"	f
_ntl_gsptest	deplib/ntl-main/src/lip.cpp	/^long _ntl_gsptest(_ntl_gbigint rep)$/;"	f
_ntl_gsq	deplib/ntl-main/src/lip.cpp	/^void _ntl_gsq(_ntl_gbigint a, _ntl_gbigint *cc)$/;"	f
_ntl_gsqmod	deplib/ntl-main/src/lip.cpp	/^_ntl_gsqmod($/;"	f
_ntl_gsqrt	deplib/ntl-main/src/lip.cpp	/^void _ntl_gsqrt(_ntl_gbigint n, _ntl_gbigint *rr)$/;"	f
_ntl_gsqrts	deplib/ntl-main/src/lip.cpp	/^_ntl_gsqrts(long n)$/;"	f
_ntl_gsqrts	deplib/ntl-main/src/lip.cpp	/^long _ntl_gsqrts(long n)$/;"	f
_ntl_gssub	deplib/ntl-main/src/lip.cpp	/^_ntl_gssub(_ntl_gbigint a, long b, _ntl_gbigint *cc)$/;"	f
_ntl_gssubmul	deplib/ntl-main/src/lip.cpp	/^_ntl_gssubmul(_ntl_gbigint x, long yy,  _ntl_gbigint *ww)$/;"	f
_ntl_gsub	deplib/ntl-main/src/lip.cpp	/^_ntl_gsub(_ntl_gbigint a, _ntl_gbigint b, _ntl_gbigint *cc)$/;"	f
_ntl_gsubmod	deplib/ntl-main/src/lip.cpp	/^_ntl_gsubmod($/;"	f
_ntl_gsubmul	deplib/ntl-main/src/lip.cpp	/^_ntl_gsubmul(_ntl_gbigint x, _ntl_gbigint y,  _ntl_gbigint *ww)$/;"	f
_ntl_gsubpos	deplib/ntl-main/src/lip.cpp	/^_ntl_gsubpos(_ntl_gbigint a, _ntl_gbigint b, _ntl_gbigint *cc)$/;"	f
_ntl_gswap	deplib/ntl-main/src/lip.cpp	/^_ntl_gswap(_ntl_gbigint *a, _ntl_gbigint *b)$/;"	f
_ntl_gswitchbit	deplib/ntl-main/src/lip.cpp	/^long _ntl_gswitchbit(_ntl_gbigint *a, long b)$/;"	f
_ntl_gtoint	deplib/ntl-main/src/lip.cpp	/^long _ntl_gtoint(_ntl_gbigint a)$/;"	f
_ntl_gtouint	deplib/ntl-main/src/lip.cpp	/^unsigned long _ntl_gtouint(_ntl_gbigint a)$/;"	f
_ntl_guintoz	deplib/ntl-main/src/lip.cpp	/^void _ntl_guintoz(unsigned long d, _ntl_gbigint *aa)$/;"	f
_ntl_gvalidate	deplib/ntl-main/src/lip.cpp	/^long _ntl_gvalidate(_ntl_gbigint a)$/;"	f
_ntl_gweight	deplib/ntl-main/src/lip.cpp	/^_ntl_gweight($/;"	f
_ntl_gweights	deplib/ntl-main/src/lip.cpp	/^_ntl_gweights($/;"	f
_ntl_gwsptest	deplib/ntl-main/src/lip.cpp	/^long _ntl_gwsptest(_ntl_gbigint rep)$/;"	f
_ntl_gxor	deplib/ntl-main/src/lip.cpp	/^void _ntl_gxor(_ntl_gbigint a, _ntl_gbigint b, _ntl_gbigint *cc)$/;"	f
_ntl_gxxratrecon	deplib/ntl-main/src/lip.cpp	/^_ntl_gxxratrecon($/;"	f
_ntl_gzero	deplib/ntl-main/src/lip.cpp	/^void _ntl_gzero(_ntl_gbigint *aa) $/;"	f
_ntl_is_char_pointer	deplib/ntl-main/include/NTL/ctools.h	/^struct _ntl_is_char_pointer$/;"	s
_ntl_is_char_pointer	deplib/ntl-main/include/NTL/ctools.h	/^struct _ntl_is_char_pointer<char*>$/;"	s
_ntl_is_char_pointer	deplib/ntl-main/include/NTL/ctools.h	/^struct _ntl_is_char_pointer<const char*>$/;"	s
_ntl_ldexp	deplib/ntl-main/src/ctools.cpp	/^double _ntl_ldexp(double x, long e)$/;"	f
_ntl_ldexp_zero	deplib/ntl-main/src/ctools.cpp	/^volatile double _ntl_ldexp_zero = 0.0;$/;"	v
_ntl_leftrotate	deplib/ntl-main/src/lip.cpp	/^_ntl_leftrotate(_ntl_gbigint *a, const _ntl_gbigint *b, long e,$/;"	f
_ntl_limb_t	deplib/ntl-main/include/NTL/ZZ_limbs.h	/^typedef mp_limb_t _ntl_limb_t;$/;"	t
_ntl_limb_t	deplib/ntl-main/include/NTL/ZZ_limbs.h	/^typedef unsigned long _ntl_limb_t;$/;"	t
_ntl_limb_t	deplib/ntl-main/src/lip.cpp	/^typedef mp_limb_t _ntl_limb_t;$/;"	t	file:
_ntl_limb_t_ptr	deplib/ntl-main/src/lip.cpp	/^typedef _ntl_limb_t *_ntl_limb_t_ptr;$/;"	t	file:
_ntl_make_aligned	deplib/ntl-main/include/NTL/ctools.h	/^char *_ntl_make_aligned(char *p, long align)$/;"	f
_ntl_mpn_add	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_add (_ntl_limb_t *rp, const _ntl_limb_t *ap, long an, const  _ntl_limb_t *bp, long bn)$/;"	f
_ntl_mpn_add_1	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_add_1 (_ntl_limb_t *rp, const _ntl_limb_t *ap, long  n, _ntl_limb_t b)$/;"	f
_ntl_mpn_add_n	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_add_n (_ntl_limb_t *rp, const  _ntl_limb_t *ap, const _ntl_limb_t *bp, long n)$/;"	f
_ntl_mpn_addmul_1	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_addmul_1 (_ntl_limb_t* rp, const _ntl_limb_t* up, long n, _ntl_limb_t vl)$/;"	f
_ntl_mpn_base_mul	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_base_mul (_ntl_limb_t* rp, const _ntl_limb_t* up, long un, const _ntl_limb_t* vp, long vn)$/;"	f	file:
_ntl_mpn_base_sqr	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_base_sqr(_ntl_limb_t *c, const _ntl_limb_t *a, long sa)$/;"	f	file:
_ntl_mpn_cmp	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_cmp(const _ntl_limb_t *s1p, const _ntl_limb_t *s2p, long n)$/;"	f
_ntl_mpn_com_n	deplib/ntl-main/src/lip.cpp	/^void _ntl_mpn_com_n(_ntl_limb_t *d, _ntl_limb_t *s, long n) $/;"	f	file:
_ntl_mpn_divmod_1	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_divmod_1 (_ntl_limb_t *q, const _ntl_limb_t *a, long sa, _ntl_limb_t d)$/;"	f
_ntl_mpn_lshift	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_lshift (_ntl_limb_t *rp, const _ntl_limb_t *up, long n, long cnt)$/;"	f
_ntl_mpn_mod_1	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_mod_1 (const _ntl_limb_t *a, long sa, _ntl_limb_t d)$/;"	f
_ntl_mpn_mul	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_mul (_ntl_limb_t* rp, const _ntl_limb_t* up, long un, const _ntl_limb_t* vp, long vn)$/;"	f
_ntl_mpn_mul_1	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_mul_1 (_ntl_limb_t* rp, const _ntl_limb_t* up, long n, _ntl_limb_t vl) $/;"	f
_ntl_mpn_rshift	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_rshift(_ntl_limb_t *rp, const _ntl_limb_t *up, long n, long cnt)$/;"	f
_ntl_mpn_shift_submul_1	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_shift_submul_1(_ntl_limb_t* NTL_RESTRICT rp, _ntl_limb_t shift_in, const _ntl_limb_t* NTL_RESTRICT up, long n, _ntl_limb_t vl)$/;"	f
_ntl_mpn_sqr	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_sqr(_ntl_limb_t *c, const _ntl_limb_t *a, long sa)$/;"	f
_ntl_mpn_sub	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_sub (_ntl_limb_t *rp, const _ntl_limb_t *ap, long an, const  _ntl_limb_t *bp, long bn)$/;"	f
_ntl_mpn_sub_1	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_sub_1 (_ntl_limb_t *rp, const _ntl_limb_t *ap, long  n, _ntl_limb_t b)$/;"	f
_ntl_mpn_sub_n	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_sub_n (_ntl_limb_t *rp, const  _ntl_limb_t *ap, const _ntl_limb_t *bp, long n)$/;"	f
_ntl_mpn_submul_1	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_submul_1 (_ntl_limb_t* rp, const _ntl_limb_t* up, long n, _ntl_limb_t vl)$/;"	f
_ntl_mpn_tdiv_qr	deplib/ntl-main/src/lip.cpp	/^_ntl_mpn_tdiv_qr (_ntl_limb_t *q, _ntl_limb_t *r,long  \/* qxn *\/, $/;"	f
_ntl_mulp	deplib/ntl-main/src/lip.cpp	/^_ntl_mulp(_ntl_limb_t& a, _ntl_limb_t b, _ntl_limb_t d, _ntl_limb_t& t) $/;"	f	file:
_ntl_quick_accum_begin	deplib/ntl-main/src/lip.cpp	/^_ntl_quick_accum_begin(_ntl_gbigint *xp, long sz)$/;"	f
_ntl_quick_accum_end	deplib/ntl-main/src/lip.cpp	/^_ntl_quick_accum_end(_ntl_gbigint x)$/;"	f
_ntl_quick_accum_muladd	deplib/ntl-main/src/lip.cpp	/^_ntl_quick_accum_muladd(_ntl_gbigint x, _ntl_gbigint y, long b)$/;"	f
_ntl_quo21p	deplib/ntl-main/src/lip.cpp	/^_ntl_quo21p(_ntl_limb_t numhigh, _ntl_limb_t numlow, _ntl_limb_t denom, double deninv)$/;"	f	file:
_ntl_reduce_struct	deplib/ntl-main/include/NTL/lip.h	/^class _ntl_reduce_struct {$/;"	c
_ntl_reduce_struct_build	deplib/ntl-main/src/lip.cpp	/^_ntl_reduce_struct_build(_ntl_gbigint modulus, _ntl_gbigint excess)$/;"	f
_ntl_reduce_struct_montgomery	deplib/ntl-main/src/lip.cpp	/^class _ntl_reduce_struct_montgomery : public _ntl_reduce_struct {$/;"	c	file:
_ntl_reduce_struct_plain	deplib/ntl-main/src/lip.cpp	/^class _ntl_reduce_struct_plain : public _ntl_reduce_struct {$/;"	c	file:
_ntl_rem21p	deplib/ntl-main/src/lip.cpp	/^_ntl_rem21p(_ntl_limb_t& numhigh, _ntl_limb_t numlow, _ntl_limb_t denom, double deninv) $/;"	f	file:
_ntl_rem_struct	deplib/ntl-main/include/NTL/lip.h	/^class _ntl_rem_struct {$/;"	c
_ntl_rem_struct_basic	deplib/ntl-main/src/lip.cpp	/^class _ntl_rem_struct_basic : public _ntl_rem_struct {$/;"	c	file:
_ntl_rem_struct_build	deplib/ntl-main/src/lip.cpp	/^_ntl_rem_struct *_ntl_rem_struct_build(long n, _ntl_gbigint modulus, long (*p)(long))$/;"	f
_ntl_rem_struct_fast	deplib/ntl-main/src/lip.cpp	/^class _ntl_rem_struct_fast : public _ntl_rem_struct {$/;"	c	file:
_ntl_rem_struct_medium	deplib/ntl-main/src/lip.cpp	/^class _ntl_rem_struct_medium : public _ntl_rem_struct {$/;"	c	file:
_ntl_rem_struct_tbl	deplib/ntl-main/src/lip.cpp	/^class _ntl_rem_struct_tbl : public _ntl_rem_struct {$/;"	c	file:
_ntl_scalar_move	deplib/ntl-main/include/NTL/ctools.h	/^T* _ntl_scalar_move(T*& a)$/;"	f
_ntl_ss_addmod	deplib/ntl-main/src/lip.cpp	/^_ntl_ss_addmod(_ntl_gbigint *x, const _ntl_gbigint *a,$/;"	f
_ntl_ss_submod	deplib/ntl-main/src/lip.cpp	/^_ntl_ss_submod(_ntl_gbigint *x, const _ntl_gbigint *a,$/;"	f
_ntl_submulp	deplib/ntl-main/src/lip.cpp	/^_ntl_submulp(_ntl_limb_t& a, _ntl_limb_t b, _ntl_limb_t d, _ntl_limb_t& t) $/;"	f	file:
_ntl_swap	deplib/ntl-main/include/NTL/ctools.h	/^void _ntl_swap(T*& a, T*& b)$/;"	f
_ntl_swap	deplib/ntl-main/src/lip.cpp	/^_ntl_swap(_ntl_gbigint_wrapped& p, _ntl_gbigint_wrapped& q)$/;"	f	file:
_ntl_tmp_vec	deplib/ntl-main/include/NTL/lip.h	/^class _ntl_tmp_vec {$/;"	c
_ntl_tmp_vec_crt_fast	deplib/ntl-main/src/lip.cpp	/^class _ntl_tmp_vec_crt_fast : public  _ntl_tmp_vec {$/;"	c	file:
_ntl_tmp_vec_rem_impl	deplib/ntl-main/src/lip.cpp	/^class _ntl_tmp_vec_rem_impl : public  _ntl_tmp_vec {$/;"	c	file:
_ntl_uint32	deplib/ntl-main/include/NTL/ctools.h	/^typedef unsigned int _ntl_uint32; \/\/ 32-bit word$/;"	t
_ntl_uint32	deplib/ntl-main/include/NTL/ctools.h	/^typedef unsigned long _ntl_uint32; \/\/ 32-bit word$/;"	t
_ntl_ulong	deplib/ntl-main/include/NTL/tools.h	/^typedef unsigned long _ntl_ulong;$/;"	t
_ntl_ulong_ptr	deplib/ntl-main/include/NTL/tools.h	/^typedef _ntl_ulong *_ntl_ulong_ptr;$/;"	t
_ntl_ulonglong	deplib/ntl-main/include/NTL/ctools.h	/^class _ntl_ulonglong { private: _ntl_ulonglong() { } };$/;"	c
_ntl_ulonglong	deplib/ntl-main/include/NTL/ctools.h	/^class _ntl_ulonglong { private: _ntl_ulonglong() { } };$/;"	f	class:_ntl_ulonglong
_ntl_ulonglong	deplib/ntl-main/include/NTL/ctools.h	/^typedef NTL_ULL_TYPE _ntl_ulonglong;$/;"	t
_ntl_vec_grow	deplib/ntl-main/include/NTL/ctools.h	/^inline long _ntl_vec_grow(long n)$/;"	f
_ref_GF2__pos	deplib/ntl-main/include/NTL/GF2.h	/^long _ref_GF2__pos;$/;"	m	class:ref_GF2
_ref_GF2__ptr	deplib/ntl-main/include/NTL/GF2.h	/^unsigned long *_ref_GF2__ptr;$/;"	m	class:ref_GF2
_vec__rep	deplib/ntl-main/include/NTL/vector.h	/^   WrappedPtr<T, _vec_deleter> _vec__rep;  $/;"	m	class:Vec
_vec_deleter	deplib/ntl-main/include/NTL/vector.h	/^   class _vec_deleter {$/;"	c	class:Vec
_zz_pE__rep	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline const zz_pX& _zz_pE__rep(const zz_pE& a) { return a._zz_pE__rep; }$/;"	f
_zz_pE__rep	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pX _zz_pE__rep;$/;"	m	class:zz_pE
_zz_p__rep	deplib/ntl-main/include/NTL/lzz_p.h	/^long _zz_p__rep;$/;"	m	class:zz_p
a	deplib/ntl-main/include/NTL/FacVec.h	/^   long a;$/;"	m	struct:IntFactor
a	deplib/ntl-main/include/NTL/pair.h	/^   S a;  $/;"	m	class:Pair
a	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct AA { A a; };$/;"	m	struct:AA	file:
a	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct AA { A a; };$/;"	m	struct:AA	file:
a_ptr	deplib/ntl-main/include/NTL/ZZ.h	/^   SmartPtr<ZZ> a_ptr;$/;"	m	class:InvModErrorObject
abi	deplib/ntl-main/doc/tour-unix.html	/^<a name="abi">$/;"	a
abs	deplib/ntl-main/include/NTL/RR.h	/^inline RR abs(const RR& a)$/;"	f
abs	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ abs(const ZZ& a)$/;"	f
abs	deplib/ntl-main/include/NTL/ZZ.h	/^inline void abs(ZZ& x, const ZZ& a)$/;"	f
abs	deplib/ntl-main/src/RR.cpp	/^void abs(RR& z, const RR& a)$/;"	f
ac_fn_c_check_func	deplib/ntl-main/src/libtool-origin/configure	/^ac_fn_c_check_func ()$/;"	f
ac_fn_c_check_header_compile	deplib/ntl-main/src/libtool-origin/configure	/^ac_fn_c_check_header_compile ()$/;"	f
ac_fn_c_try_compile	deplib/ntl-main/src/libtool-origin/configure	/^ac_fn_c_try_compile ()$/;"	f
ac_fn_c_try_cpp	deplib/ntl-main/src/libtool-origin/configure	/^ac_fn_c_try_cpp ()$/;"	f
ac_fn_c_try_link	deplib/ntl-main/src/libtool-origin/configure	/^ac_fn_c_try_link ()$/;"	f
ac_fn_c_try_run	deplib/ntl-main/src/libtool-origin/configure	/^ac_fn_c_try_run ()$/;"	f
ac_fn_cxx_try_compile	deplib/ntl-main/src/libtool-origin/configure	/^ac_fn_cxx_try_compile ()$/;"	f
ac_fn_cxx_try_cpp	deplib/ntl-main/src/libtool-origin/configure	/^ac_fn_cxx_try_cpp ()$/;"	f
ac_fn_cxx_try_link	deplib/ntl-main/src/libtool-origin/configure	/^ac_fn_cxx_try_link ()$/;"	f
active	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  bool active() const { return active_flag; }$/;"	f	class:BasicThreadPool
active	deplib/ntl-main/include/NTL/tools.h	/^    bool active;$/;"	m	class:scope_guard
active	deplib/ntl-main/include/NTL/tools.h	/^  bool active;$/;"	m	class:DummyScopeGuard
active_flag	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  bool active_flag;$/;"	m	class:BasicThreadPool
add	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  void add(long n = 1)$/;"	f	class:BasicThreadPool
add	deplib/ntl-main/include/NTL/GF2.h	/^inline void add(GF2& x, GF2 a, GF2 b)$/;"	f
add	deplib/ntl-main/include/NTL/GF2.h	/^inline void add(GF2& x, GF2 a, long b)$/;"	f
add	deplib/ntl-main/include/NTL/GF2.h	/^inline void add(GF2& x, long a, GF2 b)$/;"	f
add	deplib/ntl-main/include/NTL/GF2.h	/^inline void add(ref_GF2 x, GF2 a, GF2 b)$/;"	f
add	deplib/ntl-main/include/NTL/GF2.h	/^inline void add(ref_GF2 x, GF2 a, long b)$/;"	f
add	deplib/ntl-main/include/NTL/GF2.h	/^inline void add(ref_GF2 x, long a, GF2 b)$/;"	f
add	deplib/ntl-main/include/NTL/GF2E.h	/^inline void add(GF2E& x, GF2 a, const GF2E& b)  { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/GF2E.h	/^inline void add(GF2E& x, const GF2E& a, GF2 b)$/;"	f
add	deplib/ntl-main/include/NTL/GF2E.h	/^inline void add(GF2E& x, const GF2E& a, const GF2E& b)$/;"	f
add	deplib/ntl-main/include/NTL/GF2E.h	/^inline void add(GF2E& x, const GF2E& a, long b)$/;"	f
add	deplib/ntl-main/include/NTL/GF2E.h	/^inline void add(GF2E& x, long a, const GF2E& b)  { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void add(GF2EX& x, GF2 a, const GF2EX& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void add(GF2EX& x, const GF2E& a, const GF2EX& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void add(GF2EX& x, long a, const GF2EX& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/GF2X.h	/^inline void add(GF2X& x, GF2 a, const GF2X& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/GF2X.h	/^inline void add(GF2X& x, long a, const GF2X& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/RR.h	/^inline void add(RR& z, double a, const RR& b) { add(z, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/ZZ.h	/^inline void add(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ.h	/^inline void add(ZZ& x, const ZZ& a, long b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ.h	/^inline void add(ZZ& x, long a, const ZZ& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/ZZX.h	/^inline void add(ZZX& x, const ZZ& a, const ZZX& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/ZZX.h	/^inline void add(ZZX& x, long a, const ZZX& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void add(ZZ_p& x, const ZZ_p& a, const ZZ_p& b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void add(ZZ_p& x, long a, const ZZ_p& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void add(ZZ_pE& x, const ZZ_p& a, const ZZ_pE& b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void add(ZZ_pE& x, const ZZ_pE& a, const ZZ_p& b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void add(ZZ_pE& x, const ZZ_pE& a, const ZZ_pE& b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void add(ZZ_pE& x, const ZZ_pE& a, long b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void add(ZZ_pE& x, long a, const ZZ_pE& b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void add(ZZ_pEX& x, const ZZ_p& a, const ZZ_pEX& b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void add(ZZ_pEX& x, const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void add(ZZ_pEX& x, long a, const ZZ_pEX& b)$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void add(ZZ_pX& x, const ZZ_p& a, const ZZ_pX& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void add(ZZ_pX& x, long a, const ZZ_pX& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void add(zz_p& x, long a, zz_p b) { add(x, to_zz_p(a), b); }$/;"	f
add	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void add(zz_p& x, zz_p a, long b) { add(x, a, to_zz_p(b)); }$/;"	f
add	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void add(zz_p& x, zz_p a, zz_p b)$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void add(zz_pE& x, const zz_p& a, const zz_pE& b)$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void add(zz_pE& x, const zz_pE& a, const zz_p& b)$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void add(zz_pE& x, const zz_pE& a, const zz_pE& b)$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void add(zz_pE& x, const zz_pE& a, long b)$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void add(zz_pE& x, long a, const zz_pE& b)$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void add(zz_pEX& x, const zz_p& a, const zz_pEX& b)$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void add(zz_pEX& x, const zz_pE& a, const zz_pEX& b)$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void add(zz_pEX& x, long a, const zz_pEX& b)$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void add(zz_pX& x, const zz_pX& a, long b) { add(x, a, to_zz_p(b)); }$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void add(zz_pX& x, long a, const zz_pX& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void add(zz_pX& x, zz_p a, const zz_pX& b) { add(x, b, a); }$/;"	f
add	deplib/ntl-main/include/NTL/vec_GF2.h	/^      void add(long x)$/;"	f	struct:Vec::proxy_iterator_impl
add	deplib/ntl-main/src/GF2EX.cpp	/^void add(GF2EX& x, const GF2EX& a, GF2 b)$/;"	f
add	deplib/ntl-main/src/GF2EX.cpp	/^void add(GF2EX& x, const GF2EX& a, const GF2E& b)$/;"	f
add	deplib/ntl-main/src/GF2EX.cpp	/^void add(GF2EX& x, const GF2EX& a, const GF2EX& b)$/;"	f
add	deplib/ntl-main/src/GF2EX.cpp	/^void add(GF2EX& x, const GF2EX& a, long b)$/;"	f
add	deplib/ntl-main/src/GF2X.cpp	/^void add(GF2X& x, const GF2X& a, const GF2X& b)$/;"	f
add	deplib/ntl-main/src/GF2X1.cpp	/^void add(GF2X& c, const GF2X& a, GF2 b)$/;"	f
add	deplib/ntl-main/src/GF2X1.cpp	/^void add(GF2X& c, const GF2X& a, long b)$/;"	f
add	deplib/ntl-main/src/RR.cpp	/^void add(RR& z, const RR& a, const RR& b)$/;"	f
add	deplib/ntl-main/src/RR.cpp	/^void add(RR& z, const RR& a, double b)$/;"	f
add	deplib/ntl-main/src/ZZX.cpp	/^void add(ZZX& x, const ZZX& a, const ZZ& b)$/;"	f
add	deplib/ntl-main/src/ZZX.cpp	/^void add(ZZX& x, const ZZX& a, const ZZX& b)$/;"	f
add	deplib/ntl-main/src/ZZX.cpp	/^void add(ZZX& x, const ZZX& a, long b)$/;"	f
add	deplib/ntl-main/src/ZZ_p.cpp	/^void add(ZZ_p& x, const ZZ_p& a, long b)$/;"	f
add	deplib/ntl-main/src/ZZ_pEX.cpp	/^void add(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_p& b)$/;"	f
add	deplib/ntl-main/src/ZZ_pEX.cpp	/^void add(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
add	deplib/ntl-main/src/ZZ_pEX.cpp	/^void add(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
add	deplib/ntl-main/src/ZZ_pEX.cpp	/^void add(ZZ_pEX& x, const ZZ_pEX& a, long b)$/;"	f
add	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(add)(FFTRep& z, const FFTRep& x, const FFTRep& y)$/;"	f
add	deplib/ntl-main/src/ZZ_pX.cpp	/^void add(FFTRep& z, const FFTRep& x, const FFTRep& y)$/;"	f
add	deplib/ntl-main/src/ZZ_pX.cpp	/^void add(ZZ_pX& x, const ZZ_pX& a, const ZZ_p& b)$/;"	f
add	deplib/ntl-main/src/ZZ_pX.cpp	/^void add(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
add	deplib/ntl-main/src/ZZ_pX.cpp	/^void add(ZZ_pX& x, const ZZ_pX& a, long b)$/;"	f
add	deplib/ntl-main/src/lzz_pEX.cpp	/^void add(zz_pEX& x, const zz_pEX& a, const zz_p& b)$/;"	f
add	deplib/ntl-main/src/lzz_pEX.cpp	/^void add(zz_pEX& x, const zz_pEX& a, const zz_pE& b)$/;"	f
add	deplib/ntl-main/src/lzz_pEX.cpp	/^void add(zz_pEX& x, const zz_pEX& a, const zz_pEX& b)$/;"	f
add	deplib/ntl-main/src/lzz_pEX.cpp	/^void add(zz_pEX& x, const zz_pEX& a, long b)$/;"	f
add	deplib/ntl-main/src/lzz_pX.cpp	/^void add(fftRep& z, const fftRep& x, const fftRep& y)$/;"	f
add	deplib/ntl-main/src/lzz_pX.cpp	/^void add(zz_pX& x, const zz_pX& a, const zz_pX& b)$/;"	f
add	deplib/ntl-main/src/lzz_pX.cpp	/^void add(zz_pX& x, const zz_pX& a, zz_p b)$/;"	f
add	deplib/ntl-main/src/mat_GF2.cpp	/^void add(mat_GF2& X, const mat_GF2& A, const mat_GF2& B)  $/;"	f
add	deplib/ntl-main/src/mat_GF2E.cpp	/^void add(mat_GF2E& X, const mat_GF2E& A, const mat_GF2E& B)  $/;"	f
add	deplib/ntl-main/src/mat_RR.cpp	/^void add(mat_RR& X, const mat_RR& A, const mat_RR& B)  $/;"	f
add	deplib/ntl-main/src/mat_ZZ.cpp	/^void add(mat_ZZ& X, const mat_ZZ& A, const mat_ZZ& B)  $/;"	f
add	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void add(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p& B)  $/;"	f
add	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void add(mat_ZZ_pE& X, const mat_ZZ_pE& A, const mat_ZZ_pE& B)  $/;"	f
add	deplib/ntl-main/src/mat_lzz_p.cpp	/^void add(const mat_window_zz_p& X, $/;"	f
add	deplib/ntl-main/src/mat_lzz_p.cpp	/^void add(mat_zz_p& X, const mat_zz_p& A, const mat_zz_p& B)  $/;"	f
add	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void add(mat_zz_pE& X, const mat_zz_pE& A, const mat_zz_pE& B)  $/;"	f
add	deplib/ntl-main/src/vec_GF2.cpp	/^void add(vec_GF2& x, const vec_GF2& a, const vec_GF2& b)$/;"	f
add	deplib/ntl-main/src/vec_GF2E.cpp	/^void add(vec_GF2E& x, const vec_GF2E& a, const vec_GF2E& b)$/;"	f
add	deplib/ntl-main/src/vec_RR.cpp	/^void add(vec_RR& x, const vec_RR& a, const vec_RR& b)$/;"	f
add	deplib/ntl-main/src/vec_ZZ.cpp	/^void add(vec_ZZ& x, const vec_ZZ& a, const vec_ZZ& b)$/;"	f
add	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void add(vec_ZZ_p& x, const vec_ZZ_p& a, const vec_ZZ_p& b)$/;"	f
add	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void add(vec_ZZ_pE& x, const vec_ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
add	deplib/ntl-main/src/vec_lzz_p.cpp	/^void add(vec_zz_p& x, const vec_zz_p& a, const vec_zz_p& b)$/;"	f
add	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void add(vec_zz_pE& x, const vec_zz_pE& a, const vec_zz_pE& b)$/;"	f
adjust	deplib/ntl-main/include/NTL/ZZ.h	/^   void adjust(ZZ& x) const$/;"	f	class:ZZ_ReduceStructAdapter
adjust	deplib/ntl-main/src/lip.cpp	/^   void adjust(_ntl_gbigint *x) { }$/;"	f	class:_ntl_reduce_struct_plain
adjust	deplib/ntl-main/src/lip.cpp	/^void _ntl_reduce_struct_montgomery::adjust(_ntl_gbigint *x)$/;"	f	class:_ntl_reduce_struct_montgomery
aes128_encrypt	aes.cc	/^void aes128_encrypt(const uint8_t in[16], uint8_t out[16],$/;"	f
aes128_expand_keys	aes.cc	/^void aes128_expand_keys(const uint8_t key[16],$/;"	f
aes192_encrypt	aes.cc	/^void aes192_encrypt(const uint8_t in[16], uint8_t out[16],$/;"	f
aes192_expand_keys	aes.cc	/^void aes192_expand_keys(const uint8_t key[16],$/;"	f
aes256_encrypt	aes.cc	/^void aes256_encrypt(const uint8_t in[16], uint8_t out[16],$/;"	f
aes256_expand_keys	aes.cc	/^void aes256_expand_keys(const uint8_t key[16],$/;"	f
aes256ctr_stream	deplib/ntl-main/src/ZZ.cpp	/^aes256ctr_stream(unsigned char out[BUFSIZE], unsigned char iv[16], const unsigned char key[32])$/;"	f	file:
aes_whitebox_decrypt_cfb	aes_whitebox.cc	/^void aes_whitebox_decrypt_cfb(const uint8_t iv[16], const uint8_t* c,$/;"	f
aes_whitebox_decrypt_ctr	aes_whitebox.cc	/^void aes_whitebox_decrypt_ctr(const uint8_t nonce[16], const uint8_t* c,$/;"	f
aes_whitebox_decrypt_ofb	aes_whitebox.cc	/^void aes_whitebox_decrypt_ofb(const uint8_t iv[16], const uint8_t* c,$/;"	f
aes_whitebox_encrypt_cfb	aes_whitebox.cc	/^void aes_whitebox_encrypt_cfb(const uint8_t iv[16], const uint8_t* m,$/;"	f
aes_whitebox_encrypt_ctr	aes_whitebox.cc	/^void aes_whitebox_encrypt_ctr(const uint8_t nonce[16], const uint8_t* m,$/;"	f
aes_whitebox_encrypt_ofb	aes_whitebox.cc	/^void aes_whitebox_encrypt_ofb(const uint8_t iv[16], const uint8_t* m,$/;"	f
aesni_encrypt1	deplib/ntl-main/src/ZZ.cpp	/^static inline void aesni_encrypt1(unsigned char *out, unsigned char *n, __m128i rkeys[16]) {$/;"	f	file:
aesni_key256_expand	deplib/ntl-main/src/ZZ.cpp	/^static inline void aesni_key256_expand(const unsigned char* key, __m128i rkeys[16]) {$/;"	f	file:
alias	deplib/ntl-main/include/NTL/matrix.h	/^   long alias(const Vec<T>& a) const $/;"	f	class:Mat
alloc	deplib/ntl-main/include/NTL/vector.h	/^   long alloc;$/;"	m	struct:_ntl_VectorHeader
alloc_	deplib/ntl-main/include/NTL/lip.h	/^   long alloc_;$/;"	m	struct:_ntl_gbigint_body
allocate	deplib/ntl-main/include/NTL/GF2.h	/^void allocate() { }$/;"	f	class:GF2
allocate	deplib/ntl-main/include/NTL/GF2E.h	/^void allocate() { _GF2E__rep.xrep.SetMaxLength(GF2E::WordLength()); }$/;"	f	class:GF2E
allocate	deplib/ntl-main/include/NTL/ZZ_p.h	/^void allocate() $/;"	f	class:ZZ_p
allocate	deplib/ntl-main/include/NTL/ZZ_pE.h	/^void allocate() { _ZZ_pE__rep.rep.SetMaxLength(ZZ_pE::degree()); }$/;"	f	class:ZZ_pE
allocate	deplib/ntl-main/include/NTL/lzz_p.h	/^void allocate() { }$/;"	f	class:zz_p
allocate	deplib/ntl-main/include/NTL/lzz_pE.h	/^void allocate() {  _zz_pE__rep.rep.SetMaxLength(zz_pE::degree()); }$/;"	f	class:zz_pE
allocate_space	deplib/ntl-main/src/ZZ.cpp	/^   void allocate_space() $/;"	f	struct:RandomStream_impl
allocated	deplib/ntl-main/include/NTL/vec_GF2.h	/^   long allocated() const { return rep.MaxLength() * NTL_BITS_PER_LONG; }$/;"	f	class:Vec
allocated	deplib/ntl-main/include/NTL/vector.h	/^   long allocated() const $/;"	f	class:Vec
alt_inv_DD	deplib/ntl-main/src/mat_lzz_p.cpp	/^void alt_inv_DD(zz_p& d, mat_zz_p& X, const mat_zz_p& A, bool relax)$/;"	f	file:
alt_inv_L	deplib/ntl-main/src/mat_lzz_p.cpp	/^void alt_inv_L(zz_p& d, mat_zz_p& X, const mat_zz_p& A, bool relax)$/;"	f	file:
alt_mul_L	deplib/ntl-main/src/mat_lzz_p.cpp	/^void alt_mul_L(const mat_window_zz_p& X, $/;"	f	file:
alt_mul_LL	deplib/ntl-main/src/mat_lzz_p.cpp	/^void alt_mul_LL(const mat_window_zz_p& X, $/;"	f	file:
alt_tri_DD	deplib/ntl-main/src/mat_lzz_p.cpp	/^void alt_tri_DD(zz_p& d, const mat_zz_p& A, const vec_zz_p *bp, $/;"	f	file:
alt_tri_L	deplib/ntl-main/src/mat_lzz_p.cpp	/^void alt_tri_L(zz_p& d, const mat_zz_p& A, const vec_zz_p *bp, $/;"	f	file:
amount	deplib/ntl-main/include/NTL/LazyTable.h	/^      long amount;$/;"	m	class:LazyTable::Builder
amt	deplib/ntl-main/include/NTL/LazyTable.h	/^      long amt() const { return amount; }$/;"	f	class:LazyTable::Builder
amt	deplib/ntl-main/src/GF2XTest.cpp	/^   int amt;$/;"	m	struct:wd	file:
append	deplib/ntl-main/include/NTL/WordVector.h	/^inline void append(WordVector& v, _ntl_ulong a)$/;"	f
append	deplib/ntl-main/include/NTL/WordVector.h	/^inline void append(WordVector& v, const WordVector& w)$/;"	f
append	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline void append(vec_GF2& v, const GF2 a) { v.append(a); }$/;"	f
append	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline void append(vec_GF2& v, const vec_GF2& a) { v.append(a); }$/;"	f
append	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::append(const T& a)  $/;"	f	class:Vec
append	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::append(const Vec& w)  $/;"	f	class:Vec
append	deplib/ntl-main/include/NTL/vector.h	/^void append(Vec<T>& v, const T& a)  $/;"	f
append	deplib/ntl-main/include/NTL/vector.h	/^void append(Vec<T>& v, const Vec<T>& w)  $/;"	f
append	deplib/ntl-main/src/WordVector.cpp	/^void WordVector::append(_ntl_ulong a)  $/;"	f	class:WordVector
append	deplib/ntl-main/src/WordVector.cpp	/^void WordVector::append(const WordVector& w)  $/;"	f	class:WordVector
append	deplib/ntl-main/src/vec_GF2.cpp	/^void vec_GF2::append(GF2 a)$/;"	f	class:vec_GF2
append	deplib/ntl-main/src/vec_GF2.cpp	/^void vec_GF2::append(const vec_GF2& a)$/;"	f	class:vec_GF2
apply	deplib/ntl-main/include/NTL/ZZ.h	/^   static void apply(_ntl_gbigint p) { _ntl_gfree(p); }$/;"	f	class:ZZ::Deleter
apply	deplib/ntl-main/include/NTL/vector.h	/^      static void apply(T* p) $/;"	f	class:Vec::_vec_deleter
apply	deplib/ntl-main/src/lip.cpp	/^   static void apply(_ntl_gbigint p) { _ntl_gfree(p); }$/;"	f	class:_ntl_gbigint_deleter
as_fn_append	deplib/ntl-main/src/libtool-origin/configure	/^  as_fn_append ()$/;"	f
as_fn_arith	deplib/ntl-main/src/libtool-origin/configure	/^  as_fn_arith ()$/;"	f
as_fn_error	deplib/ntl-main/src/libtool-origin/configure	/^as_fn_error ()$/;"	f
as_fn_executable_p	deplib/ntl-main/src/libtool-origin/configure	/^as_fn_executable_p ()$/;"	f
as_fn_exit	deplib/ntl-main/src/libtool-origin/configure	/^as_fn_exit ()$/;"	f
as_fn_failure	deplib/ntl-main/src/libtool-origin/configure	/^as_fn_failure () { as_fn_return 1; }$/;"	f
as_fn_mkdir_p	deplib/ntl-main/src/libtool-origin/configure	/^as_fn_mkdir_p ()$/;"	f
as_fn_ret_failure	deplib/ntl-main/src/libtool-origin/configure	/^as_fn_ret_failure () { return 1; }$/;"	f
as_fn_ret_success	deplib/ntl-main/src/libtool-origin/configure	/^as_fn_ret_success () { return 0; }$/;"	f
as_fn_set_status	deplib/ntl-main/src/libtool-origin/configure	/^as_fn_set_status ()$/;"	f
as_fn_success	deplib/ntl-main/src/libtool-origin/configure	/^as_fn_success () { as_fn_return 0; }$/;"	f
as_fn_unset	deplib/ntl-main/src/libtool-origin/configure	/^as_fn_unset ()$/;"	f
at	deplib/ntl-main/include/NTL/vec_GF2.h	/^   const GF2 at(long i) const$/;"	f	class:Vec
at	deplib/ntl-main/include/NTL/vec_GF2.h	/^   ref_GF2 at(long i) $/;"	f	class:Vec
at	deplib/ntl-main/include/NTL/vector.h	/^   T& at(long i) {$/;"	f	class:Vec
at	deplib/ntl-main/include/NTL/vector.h	/^   const T& at(long i) const {$/;"	f	class:Vec
au_assert	aunit.h	20;"	d
au_end	aunit.h	11;"	d
au_endmain	aunit.h	15;"	d
au_eq	aunit.h	24;"	d
au_eq_float	aunit.h	28;"	d
au_init	aunit.h	10;"	d
au_main	aunit.h	14;"	d
au_neq	aunit.h	25;"	d
au_neq_float	aunit.h	29;"	d
b	deplib/ntl-main/include/NTL/GF2EX.h	/^   GF2EX f0, fbi, b;$/;"	m	struct:GF2EXTransMultiplier
b	deplib/ntl-main/include/NTL/GF2X.h	/^   GF2X f0, fbi, b;$/;"	m	struct:GF2XTransMultiplier
b	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   ZZ_pEX f0, fbi, b;$/;"	m	struct:ZZ_pEXTransMultiplier
b	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   ZZ_pX b;   $/;"	m	class:ZZ_pXMultiplier
b	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   zz_pEX f0, fbi, b;$/;"	m	struct:zz_pEXTransMultiplier
b	deplib/ntl-main/include/NTL/lzz_pX.h	/^   zz_pX b;   $/;"	m	class:zz_pXMultiplier
b	deplib/ntl-main/include/NTL/pair.h	/^   T b;  $/;"	m	class:Pair
b	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct BB { B b; };$/;"	m	struct:BB	file:
b	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct BB { B b; };$/;"	m	struct:BB	file:
b	deplib/ntl-main/src/ZZ_pXTest.cpp	/^   ZZ_pX f0, fbi, b;$/;"	m	struct:ZZ_pXTransMultiplier	file:
b	deplib/ntl-main/src/lzz_pXTest.cpp	/^   zz_pX f0, fbi, b;$/;"	m	struct:zz_pXTransMultiplier	file:
bak	deplib/ntl-main/include/NTL/GF2E.h	/^GF2EBak bak;$/;"	m	class:GF2EPush
bak	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ_pBak bak;$/;"	m	class:ZZ_pPush
bak	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pEBak bak;$/;"	m	class:ZZ_pEPush
bak	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_pBak bak;$/;"	m	class:zz_pPush
bak	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pEBak bak;$/;"	m	class:zz_pEPush
bak_type	deplib/ntl-main/include/NTL/GF2.h	/^typedef GF2Bak bak_type;$/;"	t	class:GF2
bak_type	deplib/ntl-main/include/NTL/GF2E.h	/^typedef GF2EBak bak_type;$/;"	t	class:GF2E
bak_type	deplib/ntl-main/include/NTL/ZZ_p.h	/^typedef ZZ_pBak bak_type;$/;"	t	class:ZZ_p
bak_type	deplib/ntl-main/include/NTL/ZZ_pE.h	/^typedef ZZ_pEBak bak_type;$/;"	t	class:ZZ_pE
bak_type	deplib/ntl-main/include/NTL/lzz_p.h	/^typedef zz_pBak bak_type;$/;"	t	class:zz_p
bak_type	deplib/ntl-main/include/NTL/lzz_pE.h	/^typedef zz_pEBak bak_type;$/;"	t	class:zz_pE
base_mul	deplib/ntl-main/src/lip.cpp	/^base_mul (_ntl_limb_t* rp, const _ntl_limb_t* up, long un, const _ntl_limb_t* vp, long vn)$/;"	f	file:
base_pool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   BasicThreadPool *base_pool;$/;"	m	struct:RecursiveThreadPool
basic_inv	deplib/ntl-main/src/mat_lzz_p.cpp	/^void basic_inv(zz_p& d, mat_zz_p& X, const mat_zz_p& A, bool relax)$/;"	f	file:
basic_mul	deplib/ntl-main/src/mat_lzz_p.cpp	/^void basic_mul(const mat_window_zz_p& X, $/;"	f	file:
basic_tri	deplib/ntl-main/src/mat_lzz_p.cpp	/^void basic_tri(zz_p& d, const mat_zz_p& A, const vec_zz_p *bp, $/;"	f	file:
begin	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  void begin(long cnt)$/;"	f	class:BasicThreadPool
begin	deplib/ntl-main/include/NTL/vec_GF2.h	/^   const_iterator begin() const { return const_iterator(INIT_LOOP_HOLE, rep.elts(), 0); }$/;"	f	class:Vec
begin	deplib/ntl-main/include/NTL/vec_GF2.h	/^   iterator begin() { return iterator(INIT_LOOP_HOLE, rep.elts(), 0); }$/;"	f	class:Vec
begin	deplib/ntl-main/include/NTL/vector.h	/^   T* begin() { return elts(); }$/;"	f	class:Vec
begin	deplib/ntl-main/include/NTL/vector.h	/^   const T* begin() const { return elts(); }$/;"	f	class:Vec
berlekamp	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^berlekamp(const GF2EX& f, long verbose=0)$/;"	f
berlekamp	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^berlekamp(const ZZ_pX& f, long verbose=0)$/;"	f
berlekamp	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline vec_pair_zz_pX_long berlekamp(const zz_pX& f, long verbose=0)$/;"	f
berlekamp	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void berlekamp(vec_pair_GF2EX_long& factors, const GF2EX& f, long verbose)$/;"	f
berlekamp	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void berlekamp(vec_pair_ZZ_pX_long& factors, const ZZ_pX& f, long verbose)$/;"	f
berlekamp	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void berlekamp(vec_pair_zz_pX_long& factors, const zz_pX& f, long verbose)$/;"	f
bigtab	deplib/ntl-main/include/NTL/FFT.h	/^   UniquePtr< FFTMulTabs, FFTMulTabsDeleterPolicy > bigtab;$/;"	m	struct:FFTPrimeInfo
bit	deplib/ntl-main/include/NTL/ZZ.h	/^inline long bit(const ZZ& a, long k)$/;"	f
bit	deplib/ntl-main/src/ZZ.cpp	/^long bit(long a, long k)$/;"	f
bit_and	deplib/ntl-main/include/NTL/ZZ.h	/^inline void bit_and(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
bit_and	deplib/ntl-main/include/NTL/ZZ.h	/^inline void bit_and(ZZ& x, long a, const ZZ& b)$/;"	f
bit_and	deplib/ntl-main/src/ZZ.cpp	/^void bit_and(ZZ& x, const ZZ& a, long b)$/;"	f
bit_or	deplib/ntl-main/include/NTL/ZZ.h	/^inline void bit_or(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
bit_or	deplib/ntl-main/include/NTL/ZZ.h	/^inline void bit_or(ZZ& x, long a, const ZZ& b)$/;"	f
bit_or	deplib/ntl-main/src/ZZ.cpp	/^void bit_or(ZZ& x, const ZZ& a, long b)$/;"	f
bit_xor	deplib/ntl-main/include/NTL/ZZ.h	/^inline void bit_xor(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
bit_xor	deplib/ntl-main/include/NTL/ZZ.h	/^inline void bit_xor(ZZ& x, long a, const ZZ& b)$/;"	f
bit_xor	deplib/ntl-main/src/ZZ.cpp	/^void bit_xor(ZZ& x, const ZZ& a, long b)$/;"	f
bitlen	deplib/ntl-main/src/ZZ.cpp	/^   _ntl_uint32 bitlen[2];$/;"	m	struct:SHA256_CTX	file:
bl	deplib/ntl-main/src/G_LLL_FP.cpp	/^   UniqueArray<long> bl;$/;"	m	class:GivensCache_FP	file:
bl	deplib/ntl-main/src/G_LLL_QP.cpp	/^   UniqueArray<long> bl;$/;"	m	class:GivensCache_QP	file:
bl	deplib/ntl-main/src/G_LLL_RR.cpp	/^   UniqueArray<long> bl;$/;"	m	class:GivensCache_RR	file:
bl	deplib/ntl-main/src/G_LLL_XD.cpp	/^   UniqueArray<long> bl;$/;"	m	class:GivensCache_XD	file:
blend2	deplib/ntl-main/include/NTL/PD.h	/^blend2(PD<4> a, PD<4> b)$/;"	f
blend2	deplib/ntl-main/include/NTL/PD.h	/^blend2(PD<8> a, PD<8> b)$/;"	f
blend4	deplib/ntl-main/include/NTL/PD.h	/^blend4(PD<8> a, PD<8> b)$/;"	f
blk_inv_DD	deplib/ntl-main/src/mat_lzz_p.cpp	/^void blk_inv_DD(zz_p& d, mat_zz_p& X, const mat_zz_p& A, bool relax)$/;"	f	file:
blk_inv_L	deplib/ntl-main/src/mat_lzz_p.cpp	/^void blk_inv_L(zz_p& d, mat_zz_p& X, const mat_zz_p& A, bool relax)$/;"	f	file:
blk_inv_LL	deplib/ntl-main/src/mat_lzz_p.cpp	/^void blk_inv_LL(zz_p& d, mat_zz_p& X, const mat_zz_p& A, bool relax)$/;"	f	file:
blk_mul_DD	deplib/ntl-main/src/mat_lzz_p.cpp	/^void blk_mul_DD(const mat_window_zz_p& X, $/;"	f	file:
blk_mul_L	deplib/ntl-main/src/mat_lzz_p.cpp	/^void blk_mul_L(const mat_window_zz_p& X, $/;"	f	file:
blk_mul_LL	deplib/ntl-main/src/mat_lzz_p.cpp	/^void blk_mul_LL(const mat_window_zz_p& X, $/;"	f	file:
blk_tri_DD	deplib/ntl-main/src/mat_lzz_p.cpp	/^void blk_tri_DD(zz_p& d, const mat_zz_p& A, const vec_zz_p *bp, $/;"	f	file:
blk_tri_L	deplib/ntl-main/src/mat_lzz_p.cpp	/^void blk_tri_L(zz_p& d, const mat_zz_p& A, const vec_zz_p *bp, $/;"	f	file:
blk_tri_LL	deplib/ntl-main/src/mat_lzz_p.cpp	/^void blk_tri_LL(zz_p& d, const mat_zz_p& A, const vec_zz_p *bp, $/;"	f	file:
bninv	deplib/ntl-main/include/NTL/sp_arith.h	/^   unsigned long bninv;$/;"	m	struct:sp_muldivrem_struct
body	deplib/ntl-main/src/lip.cpp	/^   mpz_t body;$/;"	m	struct:wrapped_mpz	file:
body	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   mat_ZZ_p body;$/;"	m	struct:mat_ZZ_p_opaque_body_plain	file:
body	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   mat_ZZ_p_crt_rep body;$/;"	m	struct:mat_ZZ_p_opaque_body_crt	file:
bound	deplib/ntl-main/src/FFT.cpp	/^   long bound;$/;"	m	class:FFTMulTabs	file:
bp	deplib/ntl-main/src/G_LLL_FP.cpp	/^   long bp;$/;"	m	class:GivensCache_FP	file:
bp	deplib/ntl-main/src/G_LLL_QP.cpp	/^   long bp;$/;"	m	class:GivensCache_QP	file:
bp	deplib/ntl-main/src/G_LLL_RR.cpp	/^   long bp;$/;"	m	class:GivensCache_RR	file:
bp	deplib/ntl-main/src/G_LLL_XD.cpp	/^   long bp;$/;"	m	class:GivensCache_XD	file:
bsize	deplib/ntl-main/include/NTL/GF2XVec.h	/^   long bsize;$/;"	m	class:GF2XVec
bsize	deplib/ntl-main/include/NTL/ZZVec.h	/^   long bsize;$/;"	m	class:ZZVec
buf	deplib/ntl-main/include/NTL/ZZ.h	/^   const unsigned char *buf;$/;"	m	class:RandomStream
buf	deplib/ntl-main/include/NTL/ZZ.h	/^   unsigned char buf[64];$/;"	m	class:old_RandomStream
buf	deplib/ntl-main/src/G_LLL_FP.cpp	/^   Unique2DArray<double> buf;$/;"	m	class:GivensCache_FP	file:
buf	deplib/ntl-main/src/G_LLL_QP.cpp	/^   Unique2DArray<quad_float> buf;$/;"	m	class:GivensCache_QP	file:
buf	deplib/ntl-main/src/G_LLL_RR.cpp	/^   mat_RR buf;$/;"	m	class:GivensCache_RR	file:
buf	deplib/ntl-main/src/G_LLL_XD.cpp	/^   Unique2DArray<xdouble> buf;$/;"	m	class:GivensCache_XD	file:
buf	deplib/ntl-main/src/ZZ.cpp	/^   unsigned char buf[64];$/;"	m	struct:RandomStream_impl	file:
buf	deplib/ntl-main/src/ZZ.cpp	/^   unsigned char buf[BUFSIZE];$/;"	m	struct:RandomStream_impl	file:
buf	deplib/ntl-main/src/newnames.cpp	/^char buf[10000];$/;"	v
buf_len	deplib/ntl-main/include/NTL/ZZ.h	/^   long buf_len;$/;"	m	class:RandomStream
buf_store	deplib/ntl-main/src/ZZ.cpp	/^   AlignedArray<unsigned char> buf_store;$/;"	m	struct:RandomStream_impl	file:
build	deplib/ntl-main/include/NTL/ZZ.h	/^   void build(long _p)$/;"	f	struct:RandomBndGenerator
build	deplib/ntl-main/include/NTL/ZZ.h	/^   void build(long _p)$/;"	f	struct:sp_ZZ_reduce_struct
build	deplib/ntl-main/src/GF2EX.cpp	/^void build(GF2EXArgument& A, const GF2EX& h, const GF2EXModulus& F, long m)$/;"	f
build	deplib/ntl-main/src/GF2EX.cpp	/^void build(GF2EXModulus& F, const GF2EX& f)$/;"	f
build	deplib/ntl-main/src/GF2EX.cpp	/^void build(GF2EXTransMultiplier& B, const GF2EX& b, const GF2EXModulus& F)$/;"	f
build	deplib/ntl-main/src/GF2X1.cpp	/^void build(GF2XArgument& A, const GF2X& h, const GF2XModulus& F, long m)$/;"	f
build	deplib/ntl-main/src/GF2X1.cpp	/^void build(GF2XModulus& F, const GF2X& f)$/;"	f
build	deplib/ntl-main/src/GF2X1.cpp	/^void build(GF2XTransMultiplier& B, const GF2X& b, const GF2XModulus& F)$/;"	f
build	deplib/ntl-main/src/MatPrime.cpp	/^void build(MatPrime_crt_helper& H, const ZZ& P)$/;"	f
build	deplib/ntl-main/src/ZZ_pEX.cpp	/^void build(ZZ_pEXArgument& A, const ZZ_pEX& h, const ZZ_pEXModulus& F, long m)$/;"	f
build	deplib/ntl-main/src/ZZ_pEX.cpp	/^void build(ZZ_pEXModulus& F, const ZZ_pEX& f)$/;"	f
build	deplib/ntl-main/src/ZZ_pEX.cpp	/^void build(ZZ_pEXTransMultiplier& B, const ZZ_pEX& b, const ZZ_pEXModulus& F)$/;"	f
build	deplib/ntl-main/src/ZZ_pX.cpp	/^void build(ZZ_pXModulus& x, const ZZ_pX& f)$/;"	f
build	deplib/ntl-main/src/ZZ_pX.cpp	/^void build(ZZ_pXMultiplier& x, const ZZ_pX& b, $/;"	f
build	deplib/ntl-main/src/ZZ_pX1.cpp	/^void build(ZZ_pXArgument& A, const ZZ_pX& h, const ZZ_pXModulus& F, long m)$/;"	f
build	deplib/ntl-main/src/ZZ_pX1.cpp	/^void build(ZZ_pXNewArgument& H, const ZZ_pX& h, const ZZ_pXModulus& F, long m)$/;"	f
build	deplib/ntl-main/src/ZZ_pXTest.cpp	/^void build(ZZ_pXTransMultiplier& B, const ZZ_pX& b, const ZZ_pXModulus& F)$/;"	f
build	deplib/ntl-main/src/lzz_pEX.cpp	/^void build(zz_pEXArgument& A, const zz_pEX& h, const zz_pEXModulus& F, long m)$/;"	f
build	deplib/ntl-main/src/lzz_pEX.cpp	/^void build(zz_pEXModulus& F, const zz_pEX& f)$/;"	f
build	deplib/ntl-main/src/lzz_pEX.cpp	/^void build(zz_pEXTransMultiplier& B, const zz_pEX& b, const zz_pEXModulus& F)$/;"	f
build	deplib/ntl-main/src/lzz_pX.cpp	/^void build(zz_pXModulus& x, const zz_pX& f)$/;"	f
build	deplib/ntl-main/src/lzz_pX.cpp	/^void build(zz_pXMultiplier& x, const zz_pX& b, $/;"	f
build	deplib/ntl-main/src/lzz_pX1.cpp	/^void build(zz_pXArgument& A, const zz_pX& h, const zz_pXModulus& F, long m)$/;"	f
build	deplib/ntl-main/src/lzz_pX1.cpp	/^void build(zz_pXNewArgument& H, const zz_pX& h, const zz_pXModulus& F, long m)$/;"	f
build	deplib/ntl-main/src/lzz_pXTest.cpp	/^void build(zz_pXTransMultiplier& B, const zz_pX& b, const zz_pXModulus& F)$/;"	f
building	deplib/ntl-main/include/NTL/Lazy.h	/^      bool building;$/;"	m	class:Lazy::Builder
built	deplib/ntl-main/include/NTL/Lazy.h	/^   bool built()  const { return initialized; }$/;"	f	class:Lazy
bv	deplib/ntl-main/src/G_LLL_FP.cpp	/^   UniqueArray<long> bv;$/;"	m	class:GivensCache_FP	file:
bv	deplib/ntl-main/src/G_LLL_QP.cpp	/^   UniqueArray<long> bv;$/;"	m	class:GivensCache_QP	file:
bv	deplib/ntl-main/src/G_LLL_RR.cpp	/^   UniqueArray<long> bv;$/;"	m	class:GivensCache_RR	file:
bv	deplib/ntl-main/src/G_LLL_XD.cpp	/^   UniqueArray<long> bv;$/;"	m	class:GivensCache_XD	file:
c	deplib/ntl-main/include/NTL/GF2E.h	/^GF2EContext c;$/;"	m	class:GF2EBak
c	deplib/ntl-main/include/NTL/ZZ_p.h	/^ZZ_pContext c;$/;"	m	class:ZZ_pBak
c	deplib/ntl-main/include/NTL/ZZ_pE.h	/^ZZ_pEContext c;$/;"	m	class:ZZ_pEBak
c	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_pContext c;$/;"	m	class:zz_pBak
c	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pEContext c;$/;"	m	class:zz_pEBak
c	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct CC { C c; };$/;"	m	struct:CC	file:
c	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct CC { C c; };$/;"	m	struct:CC	file:
c_offset	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long c_offset;$/;"	m	struct:const_mat_window_zz_p	file:
c_offset	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long c_offset;$/;"	m	struct:mat_window_zz_p	file:
cannot_compare_these_types	deplib/ntl-main/include/NTL/SmartPtr.h	/^   bool cannot_compare_these_types() const { return false; }$/;"	f	class:AlignedArray
cannot_compare_these_types	deplib/ntl-main/include/NTL/SmartPtr.h	/^   bool cannot_compare_these_types() const { return false; }$/;"	f	class:CopiedPtr
cannot_compare_these_types	deplib/ntl-main/include/NTL/SmartPtr.h	/^   bool cannot_compare_these_types() const { return false; }$/;"	f	class:Unique2DArray
cannot_compare_these_types	deplib/ntl-main/include/NTL/SmartPtr.h	/^   bool cannot_compare_these_types() const { return false; }$/;"	f	class:UniqueArray
cannot_compare_these_types	deplib/ntl-main/include/NTL/SmartPtr.h	/^   bool cannot_compare_these_types() const { return false; }$/;"	f	class:UniquePtr
cardinality	deplib/ntl-main/src/GF2E.cpp	/^const ZZ& GF2E::cardinality()$/;"	f	class:GF2E
cardinality	deplib/ntl-main/src/ZZ_pE.cpp	/^const ZZ& ZZ_pE::cardinality()$/;"	f	class:ZZ_pE
cardinality	deplib/ntl-main/src/lzz_pE.cpp	/^const ZZ& zz_pE::cardinality()$/;"	f	class:zz_pE
cast_signed	deplib/ntl-main/include/NTL/tools.h	/^inline int cast_signed(unsigned int a) $/;"	f
cast_signed	deplib/ntl-main/include/NTL/tools.h	/^inline int cast_signed(unsigned int a) { return int(a); }$/;"	f
cast_signed	deplib/ntl-main/include/NTL/tools.h	/^inline long cast_signed(unsigned long a) $/;"	f
cast_signed	deplib/ntl-main/include/NTL/tools.h	/^inline long cast_signed(unsigned long a) { return long(a); }$/;"	f
cast_unsigned	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned int cast_unsigned(int a) { return (unsigned int) a; }$/;"	f
cast_unsigned	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned long cast_unsigned(long a) { return (unsigned long) a; }$/;"	f
ceil	deplib/ntl-main/include/NTL/RR.h	/^inline RR ceil(const RR& a)$/;"	f
ceil	deplib/ntl-main/src/RR.cpp	/^void ceil(RR& z, const RR& a)$/;"	f
ceil	deplib/ntl-main/src/quad_float1.cpp	/^quad_float ceil(const quad_float& x) { $/;"	f
ceil	deplib/ntl-main/src/xdouble.cpp	/^xdouble ceil(const xdouble& aa)$/;"	f
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_AES_NI\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_ALIGNED_ARRAY\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_AVX2\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_AVX512F\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_AVX\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_BUILTIN_CLZL\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_CHRONO_TIME\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_COPY_TRAITS1\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_COPY_TRAITS2\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_FMA\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_KMA\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_LL_TYPE\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_MACOS_TIME\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_PCLMUL\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_POSIX_TIME\\n";$/;"	m	class:std
cerr	deplib/ntl-main/include/NTL/REPORT_ALL_FEATURES.h	/^   std::cerr << "NTL_HAVE_SSSE3\\n";$/;"	m	class:std
choose_fn	deplib/ntl-main/src/ZZXFactoring.cpp	/^ZZ choose_fn(long r, long k)$/;"	f	file:
chunk_count	deplib/ntl-main/src/ZZ.cpp	/^   long chunk_count;$/;"	m	struct:RandomStream_impl	file:
clean_data	deplib/ntl-main/src/GF2XTimeTest.cpp	/^double clean_data(double *t)$/;"	f
clean_data	deplib/ntl-main/src/Poly1TimeTest.cpp	/^double clean_data(double *t)$/;"	f
clean_data	deplib/ntl-main/src/Poly2TimeTest.cpp	/^double clean_data(double *t)$/;"	f
clean_data	deplib/ntl-main/src/Poly3TimeTest.cpp	/^double clean_data(double *t)$/;"	f
clear	deplib/ntl-main/include/NTL/GF2.h	/^inline void clear(GF2& x) { x = 0; }$/;"	f
clear	deplib/ntl-main/include/NTL/GF2.h	/^inline void clear(ref_GF2 x) { x = 0; }$/;"	f
clear	deplib/ntl-main/include/NTL/GF2E.h	/^inline void clear(GF2E& x)$/;"	f
clear	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void clear(GF2EX& x) $/;"	f
clear	deplib/ntl-main/include/NTL/GF2X.h	/^inline void clear(GF2X& x) $/;"	f
clear	deplib/ntl-main/include/NTL/PD.h	/^clear(PD<2>& x) $/;"	f
clear	deplib/ntl-main/include/NTL/PD.h	/^clear(PD<4>& x) $/;"	f
clear	deplib/ntl-main/include/NTL/PD.h	/^clear(PD<8>& x) $/;"	f
clear	deplib/ntl-main/include/NTL/ZZ.h	/^inline void clear(ZZ& x)$/;"	f
clear	deplib/ntl-main/include/NTL/ZZX.h	/^inline void clear(ZZX& x) $/;"	f
clear	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void clear(ZZ_p& x)$/;"	f
clear	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void clear(ZZ_pE& x)$/;"	f
clear	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void clear(ZZ_pEX& x) $/;"	f
clear	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void clear(ZZ_pX& x) $/;"	f
clear	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void clear(zz_p& x)$/;"	f
clear	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void clear(zz_pE& x)$/;"	f
clear	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void clear(zz_pEX& x) $/;"	f
clear	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void clear(zz_pX& x) $/;"	f
clear	deplib/ntl-main/src/RR.cpp	/^void clear(RR& z)$/;"	f
clear	deplib/ntl-main/src/mat_GF2.cpp	/^void clear(mat_GF2& x)$/;"	f
clear	deplib/ntl-main/src/mat_GF2E.cpp	/^void clear(mat_GF2E& x)$/;"	f
clear	deplib/ntl-main/src/mat_RR.cpp	/^void clear(mat_RR& x)$/;"	f
clear	deplib/ntl-main/src/mat_ZZ.cpp	/^void clear(mat_ZZ& x)$/;"	f
clear	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void clear(mat_ZZ_p& x)$/;"	f
clear	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void clear(mat_ZZ_pE& x)$/;"	f
clear	deplib/ntl-main/src/mat_lzz_p.cpp	/^void clear(const mat_window_zz_p& X)$/;"	f
clear	deplib/ntl-main/src/mat_lzz_p.cpp	/^void clear(mat_zz_p& x)$/;"	f
clear	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void clear(mat_zz_pE& x)$/;"	f
clear	deplib/ntl-main/src/vec_GF2.cpp	/^void clear(vec_GF2& x)$/;"	f
clear	deplib/ntl-main/src/vec_GF2E.cpp	/^void clear(vec_GF2E& x)$/;"	f
clear	deplib/ntl-main/src/vec_RR.cpp	/^void clear(vec_RR& x)$/;"	f
clear	deplib/ntl-main/src/vec_ZZ.cpp	/^void clear(vec_ZZ& x)$/;"	f
clear	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void clear(vec_ZZ_p& x)$/;"	f
clear	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void clear(vec_ZZ_pE& x)$/;"	f
clear	deplib/ntl-main/src/vec_lzz_p.cpp	/^void clear(vec_zz_p& x)$/;"	f
clear	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void clear(vec_zz_pE& x)$/;"	f
clone	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr clone() const $/;"	f	class:CloneablePtr
clone	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtrControl *clone() const $/;"	f	class:CloneablePtrControlDerived
clone	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtrControl *clone() const \\$/;"	f	class:MakeCloneableAux
clone	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   mat_ZZ_p_opaque_body* clone() const $/;"	f	struct:mat_ZZ_p_opaque_body_crt
clone	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   mat_ZZ_p_opaque_body* clone() const $/;"	f	struct:mat_ZZ_p_opaque_body_plain
cnt	deplib/ntl-main/include/NTL/SmartPtr.h	/^   AtomicRefCount cnt;$/;"	m	class:SmartPtrControl
cnt	deplib/ntl-main/include/NTL/thread.h	/^   NTL_SNS atomic_long cnt;$/;"	m	class:AtomicRefCount
cnt	deplib/ntl-main/include/NTL/thread.h	/^   NTL_SNS atomic_ulong cnt;$/;"	m	class:AtomicCounter
coeff	deplib/ntl-main/include/NTL/MatPrime.h	/^   ZZVec coeff;$/;"	m	struct:MatPrime_crt_helper
coeff	deplib/ntl-main/src/GF2EX.cpp	/^const GF2E& coeff(const GF2EX& a, long i)$/;"	f
coeff	deplib/ntl-main/src/GF2X.cpp	/^const GF2 coeff(const GF2X& a, long i)$/;"	f
coeff	deplib/ntl-main/src/ZZX.cpp	/^const ZZ& coeff(const ZZX& a, long i)$/;"	f
coeff	deplib/ntl-main/src/ZZ_pEX.cpp	/^const ZZ_pE& coeff(const ZZ_pEX& a, long i)$/;"	f
coeff	deplib/ntl-main/src/ZZ_pX.cpp	/^const ZZ_p& coeff(const ZZ_pX& a, long i)$/;"	f
coeff	deplib/ntl-main/src/lzz_pEX.cpp	/^const zz_pE& coeff(const zz_pEX& a, long i)$/;"	f
coeff	deplib/ntl-main/src/lzz_pX.cpp	/^const zz_p coeff(const zz_pX& a, long i)$/;"	f
coeff_type	deplib/ntl-main/include/NTL/GF2EX.h	/^typedef GF2E coeff_type;$/;"	t	class:GF2EX
coeff_type	deplib/ntl-main/include/NTL/GF2X.h	/^typedef GF2 coeff_type;$/;"	t	class:GF2X
coeff_type	deplib/ntl-main/include/NTL/ZZX.h	/^typedef ZZ coeff_type;$/;"	t	class:ZZX
coeff_type	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^typedef ZZ_pE coeff_type;$/;"	t	class:ZZ_pEX
coeff_type	deplib/ntl-main/include/NTL/ZZ_pX.h	/^typedef ZZ_p coeff_type;$/;"	t	class:ZZ_pX
coeff_type	deplib/ntl-main/include/NTL/lzz_pEX.h	/^typedef zz_pE coeff_type;$/;"	t	class:zz_pEX
coeff_type	deplib/ntl-main/include/NTL/lzz_pX.h	/^typedef zz_p coeff_type;$/;"	t	class:zz_pX
coeff_vec	deplib/ntl-main/src/ZZX1.cpp	/^   Vec<long> coeff_vec;    \/\/ length == nprimes, coeff_vec[i] = (prod\/p_i)^{-1} mod p_i$/;"	m	struct:NewFastCRTHelper	file:
coeff_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_gbigint_wrapped> coeff_vec;$/;"	m	class:_ntl_crt_struct_fast	file:
coeffpinv_vec	deplib/ntl-main/src/ZZX1.cpp	/^   Vec<mulmod_precon_t> coeffpinv_vec; \/\/ length == nprimes$/;"	m	struct:NewFastCRTHelper	file:
compare	deplib/ntl-main/include/NTL/RR.h	/^inline long compare(double a, const RR& b) { return -compare(b, a); }$/;"	f
compare	deplib/ntl-main/include/NTL/ZZ.h	/^inline long compare(const ZZ& a, const ZZ& b)$/;"	f
compare	deplib/ntl-main/include/NTL/ZZ.h	/^inline long compare(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b); }$/;"	f
compare	deplib/ntl-main/include/NTL/ZZ.h	/^inline long compare(long a, const ZZ& b) { return -_ntl_gscompare(b.rep, a); }$/;"	f
compare	deplib/ntl-main/include/NTL/quad_float.h	/^inline long compare(const quad_float& x, double y)$/;"	f
compare	deplib/ntl-main/include/NTL/quad_float.h	/^inline long compare(double x, const quad_float& y)$/;"	f
compare	deplib/ntl-main/include/NTL/xdouble.h	/^inline long compare(const xdouble& a, double b)$/;"	f
compare	deplib/ntl-main/include/NTL/xdouble.h	/^inline long compare(double a, const xdouble& b)$/;"	f
compare	deplib/ntl-main/src/BerlekampTest.cpp	/^long compare(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
compare	deplib/ntl-main/src/CanZassTest.cpp	/^long compare(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
compare	deplib/ntl-main/src/RR.cpp	/^long compare(const RR& a, const RR& b)$/;"	f
compare	deplib/ntl-main/src/RR.cpp	/^long compare(const RR& a, double b)$/;"	f
compare	deplib/ntl-main/src/ZZXFacTest.cpp	/^long compare(const ZZX& a, const ZZX& b)$/;"	f
compare	deplib/ntl-main/src/quad_float1.cpp	/^long compare(const quad_float& x, const quad_float& y)$/;"	f
compare	deplib/ntl-main/src/xdouble.cpp	/^long compare(const xdouble& a, const xdouble& b)$/;"	f
compat	deplib/ntl-main/doc/tour-gmp.html	/^<a name="compat">$/;"	a
concurrent	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   bool concurrent() { return mid != 0; }$/;"	f	struct:RecursiveThreadPoolHelper
cons	deplib/ntl-main/include/NTL/pair.h	/^inline Pair<S,T> cons(const S& x, const T& y) { return Pair<S,T>(x, y); } $/;"	f
const_iterator	deplib/ntl-main/include/NTL/vec_GF2.h	/^   typedef const_proxy_iterator const_iterator;$/;"	t	class:Vec
const_iterator	deplib/ntl-main/include/NTL/vector.h	/^   typedef const value_type *const_iterator; $/;"	t	class:Vec
const_mat_window_zz_p	deplib/ntl-main/src/mat_lzz_p.cpp	/^   const_mat_window_zz_p(const const_mat_window_zz_p& w, long r1, long c1, long r2, long c2) :$/;"	f	struct:const_mat_window_zz_p
const_mat_window_zz_p	deplib/ntl-main/src/mat_lzz_p.cpp	/^   const_mat_window_zz_p(const mat_window_zz_p& w) :$/;"	f	struct:const_mat_window_zz_p
const_mat_window_zz_p	deplib/ntl-main/src/mat_lzz_p.cpp	/^   const_mat_window_zz_p(const mat_zz_p& _A) : $/;"	f	struct:const_mat_window_zz_p
const_mat_window_zz_p	deplib/ntl-main/src/mat_lzz_p.cpp	/^struct const_mat_window_zz_p {$/;"	s	file:
const_proxy_iterator	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const_proxy_iterator() { }$/;"	f	struct:Vec::const_proxy_iterator
const_proxy_iterator	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const_proxy_iterator(INIT_LOOP_HOLE_TYPE, const unsigned long *ptr, long idx)$/;"	f	struct:Vec::const_proxy_iterator
const_proxy_iterator	deplib/ntl-main/include/NTL/vec_GF2.h	/^   struct const_proxy_iterator {$/;"	s	class:Vec
const_reference	deplib/ntl-main/include/NTL/matrix.h	/^   typedef typename Vec<T>::const_reference const_reference;$/;"	t	class:Mat
const_reference	deplib/ntl-main/include/NTL/vec_GF2.h	/^   typedef const GF2 const_reference;$/;"	t	class:Vec
const_reference	deplib/ntl-main/include/NTL/vector.h	/^   typedef const value_type& const_reference;$/;"	t	class:Vec
content	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZ content(const ZZX& f)$/;"	f
content	deplib/ntl-main/src/ZZX1.cpp	/^void content(ZZ& d, const ZZX& f)$/;"	f
context	deplib/ntl-main/include/NTL/MatPrime.h	/^   zz_pContext context; $/;"	m	struct:MatPrimeInfo
context_type	deplib/ntl-main/include/NTL/GF2.h	/^typedef GF2Context context_type;$/;"	t	class:GF2
context_type	deplib/ntl-main/include/NTL/GF2E.h	/^typedef GF2EContext context_type;$/;"	t	class:GF2E
context_type	deplib/ntl-main/include/NTL/ZZ_p.h	/^typedef ZZ_pContext context_type;$/;"	t	class:ZZ_p
context_type	deplib/ntl-main/include/NTL/ZZ_pE.h	/^typedef ZZ_pEContext context_type;$/;"	t	class:ZZ_pE
context_type	deplib/ntl-main/include/NTL/lzz_p.h	/^typedef zz_pContext context_type;$/;"	t	class:zz_p
context_type	deplib/ntl-main/include/NTL/lzz_pE.h	/^typedef zz_pEContext context_type;$/;"	t	class:zz_pE
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(GF2& x, GF2 a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(GF2& x, const ZZ& a) { x = to_GF2(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(GF2& x, long a) { x = to_GF2(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(ZZ& x, GF2 a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(int& x, GF2 a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(long& x, GF2 a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(ref_GF2 x, GF2 a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(ref_GF2 x, const ZZ& a) { x = to_GF2(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(ref_GF2 x, long a) { x = to_GF2(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(unsigned int& x, GF2 a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2.h	/^inline void conv(unsigned long& x, GF2 a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2E.h	/^inline void conv(GF2E& x, GF2 a)$/;"	f
conv	deplib/ntl-main/include/NTL/GF2E.h	/^inline void conv(GF2E& x, const GF2E& a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2E.h	/^inline void conv(GF2E& x, const GF2X& a)$/;"	f
conv	deplib/ntl-main/include/NTL/GF2E.h	/^inline void conv(GF2E& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/include/NTL/GF2E.h	/^inline void conv(GF2E& x, long a)$/;"	f
conv	deplib/ntl-main/include/NTL/GF2E.h	/^inline void conv(GF2X& x, const GF2E& a) { x = rep(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void conv(GF2EX& x, const GF2EX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void conv(vec_GF2E& x, const GF2EX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/GF2X.h	/^inline void conv(GF2X& x, const GF2X& a)$/;"	f
conv	deplib/ntl-main/include/NTL/GF2X.h	/^inline void conv(GF2X& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/include/NTL/RR.h	/^inline void conv(RR& z, float a) { conv(z, double(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/RR.h	/^inline void conv(RR& z, int a) { conv(z, long(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/RR.h	/^inline void conv(RR& z, unsigned int a) { conv(z, (unsigned long)(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/RR.h	/^inline void conv(float& z, const RR& a) $/;"	f
conv	deplib/ntl-main/include/NTL/RR.h	/^inline void conv(int& z, const RR& a) $/;"	f
conv	deplib/ntl-main/include/NTL/RR.h	/^inline void conv(unsigned int& x, const RR& a)$/;"	f
conv	deplib/ntl-main/include/NTL/RR.h	/^inline void conv(unsigned long& x, const RR& a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(ZZ& x, const ZZ& a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(ZZ& x, double a) { _ntl_gdoubtoz(a, &x.rep); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(ZZ& x, float a) { _ntl_gdoubtoz(double(a), &x.rep); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(ZZ& x, int a) { _ntl_gintoz(long(a), &x.rep); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(ZZ& x, long a) { _ntl_gintoz(a, &x.rep); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(ZZ& x, unsigned int a) { _ntl_guintoz((unsigned long)(a), &x.rep); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(ZZ& x, unsigned long a) { _ntl_guintoz(a, &x.rep); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(double& x, const ZZ& a) { x = _ntl_gdoub(a.rep); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(float& x, const ZZ& a) { x = float(_ntl_gdoub(a.rep)); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(int& x, const ZZ& a) $/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(long& x, const ZZ& a) { x = _ntl_gtoint(a.rep); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(unsigned int& x, const ZZ& a) $/;"	f
conv	deplib/ntl-main/include/NTL/ZZ.h	/^inline void conv(unsigned long& x, const ZZ& a) { x = _ntl_gtouint(a.rep); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZX.h	/^inline void conv(ZZX& x, const ZZX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZX.h	/^inline void conv(vec_ZZ& x, const ZZX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void conv(ZZ& x, const ZZ_p& a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void conv(ZZ_p& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void conv(ZZ_p& x, const ZZ_p& a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void conv(int& x, const ZZ_p& a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void conv(long& x, const ZZ_p& a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void conv(unsigned int& x, const ZZ_p& a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void conv(unsigned long& x, const ZZ_p& a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pE& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pE& x, const ZZ_p& a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pE& x, const ZZ_pE& a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pE& x, const ZZ_pX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pE& x, long a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void conv(ZZ_pX& x, const ZZ_pE& a) { x = rep(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void conv(ZZ_pEX& x, const ZZ_pEX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void conv(vec_ZZ_pE& x, const ZZ_pEX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void conv(ZZ_pX& x, const ZZ_pX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void conv(vec_ZZ_p& x, const ZZ_pX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void conv(ZZ& x, zz_p a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void conv(int& x, zz_p a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void conv(long& x, zz_p a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void conv(unsigned int& x, zz_p a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void conv(unsigned long& x, zz_p a) { conv(x, rep(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void conv(zz_p& x, zz_p a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_p.h	/^void conv(zz_p& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_p.h	/^void conv(zz_p& x, long a)$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void conv(zz_pE& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void conv(zz_pE& x, const zz_p& a)$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void conv(zz_pE& x, const zz_pE& a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void conv(zz_pE& x, const zz_pX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void conv(zz_pE& x, long a)$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void conv(zz_pX& x, const zz_pE& a) { x = rep(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void conv(vec_zz_pE& x, const zz_pEX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void conv(zz_pEX& x, const zz_pEX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void conv(vec_zz_p& x, const zz_pX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void conv(zz_pX& x, const zz_pX& a)$/;"	f
conv	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline void conv(mat_GF2& x, const vec_vec_GF2& a) {$/;"	f
conv	deplib/ntl-main/include/NTL/matrix.h	/^void conv(Mat<T>& x, const Mat<S>& a)$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(double& x, const quad_float& a) { x = to_double(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(float& x, const quad_float& a) { x = to_float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(int& x, const quad_float& a) { x = to_int(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(long& x, const quad_float& a) { x = to_long(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(quad_float& x, const quad_float& a)$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(quad_float& x, double a) { x = to_quad_float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(quad_float& x, float a) { x = to_quad_float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(quad_float& x, int a) { x = to_quad_float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(quad_float& x, long a) { x = to_quad_float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(quad_float& x, unsigned int a) { x = to_quad_float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(quad_float& x, unsigned long a) { x = to_quad_float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(unsigned int& x, const quad_float& a)$/;"	f
conv	deplib/ntl-main/include/NTL/quad_float.h	/^inline void conv(unsigned long& x, const quad_float& a)$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^T conv(const S& a)$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^conv(S& x, T y)$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(double& x, double a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(double& x, float a) { x = double(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(double& x, int a) { x = double(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(double& x, long a) { x = double(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(double& x, unsigned a) { x = double(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(double& x, unsigned long a) { x = double(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(float& x, double a) { x = float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(float& x, float a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(float& x, int a) { x = float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(float& x, long a) { x = float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(float& x, unsigned a) { x = float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(float& x, unsigned long a) { x = float(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(int& x, double a) { x = int(NTL_SNS floor(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(int& x, float a) { x = int(NTL_SNS floor(double(a))); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(int& x, int a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(int& x, long a) $/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(int& x, unsigned a) $/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(int& x, unsigned long a)$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(long& x, double a) { x = long(NTL_SNS floor(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(long& x, float a) { x = long(NTL_SNS floor(double(a))); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(long& x, int a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(long& x, long a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(long& x, unsigned a)$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(long& x, unsigned long a)$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned int& x, double a) { x = ((unsigned int) to_long(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned int& x, float a) { x = ((unsigned int) to_long(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned int& x, int a) { x = ((unsigned int)(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned int& x, long a) { x = ((unsigned int)(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned int& x, unsigned a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned int& x, unsigned long a) { x = ((unsigned int)(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned long& x, double a) { x = ((unsigned int) to_long(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned long& x, float a) { x = ((unsigned int) to_long(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned long& x, int a) { x = ((unsigned long)(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned long& x, long a) { x = ((unsigned long)(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned long& x, unsigned a) { x = ((unsigned long)(a)); }$/;"	f
conv	deplib/ntl-main/include/NTL/tools.h	/^inline void conv(unsigned long& x, unsigned long a) { x = a; }$/;"	f
conv	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline void conv(vec_GF2& x, const vec_GF2& a)$/;"	f
conv	deplib/ntl-main/include/NTL/vector.h	/^void conv(Vec<T>& x, const Vec<S>& a)$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(float& x, const xdouble& a) $/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(int& x, const xdouble& a)$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(long& x, const xdouble& a)$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(unsigned int& x, const xdouble& a)$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(unsigned long& x, const xdouble& a)$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(xdouble& x, const xdouble& a)$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(xdouble& x, double a) { x = to_xdouble(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(xdouble& x, float a) { x = to_xdouble(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(xdouble& x, int a) { x = to_xdouble(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(xdouble& x, long a) { x = to_xdouble(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(xdouble& x, unsigned int a) { x = to_xdouble(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(xdouble& x, unsigned long a) { x = to_xdouble(a); }$/;"	f
conv	deplib/ntl-main/include/NTL/xdouble.h	/^inline void conv(xdouble& z, const ZZ& a)$/;"	f
conv	deplib/ntl-main/src/GF2EX.cpp	/^void conv(GF2EX& x, GF2 a)$/;"	f
conv	deplib/ntl-main/src/GF2EX.cpp	/^void conv(GF2EX& x, const GF2E& a)$/;"	f
conv	deplib/ntl-main/src/GF2EX.cpp	/^void conv(GF2EX& x, const GF2X& aa)$/;"	f
conv	deplib/ntl-main/src/GF2EX.cpp	/^void conv(GF2EX& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/src/GF2EX.cpp	/^void conv(GF2EX& x, const ZZX& a)$/;"	f
conv	deplib/ntl-main/src/GF2EX.cpp	/^void conv(GF2EX& x, const vec_GF2E& a)$/;"	f
conv	deplib/ntl-main/src/GF2EX.cpp	/^void conv(GF2EX& x, long a)$/;"	f
conv	deplib/ntl-main/src/GF2X1.cpp	/^void conv(GF2X& c, GF2 a)$/;"	f
conv	deplib/ntl-main/src/GF2X1.cpp	/^void conv(GF2X& c, long a)$/;"	f
conv	deplib/ntl-main/src/GF2X1.cpp	/^void conv(GF2X& x, const ZZX& a)$/;"	f
conv	deplib/ntl-main/src/GF2X1.cpp	/^void conv(GF2X& x, const vec_GF2& a)$/;"	f
conv	deplib/ntl-main/src/GF2X1.cpp	/^void conv(ZZX& x, const GF2X& a)$/;"	f
conv	deplib/ntl-main/src/GF2X1.cpp	/^void conv(vec_GF2& x, const GF2X& a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(RR& x, const RR& a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(RR& z, const ZZ& a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(RR& z, const quad_float& a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(RR& z, const xdouble& a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(RR& z, double a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(RR& z, long a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(RR& z, unsigned long a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(ZZ& z, const RR& a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(double& z, const RR& aa)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(long& z, const RR& a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(quad_float& z, const RR& a)$/;"	f
conv	deplib/ntl-main/src/RR.cpp	/^void conv(xdouble& z, const RR& a)$/;"	f
conv	deplib/ntl-main/src/ZZX.cpp	/^void conv(ZZX& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/src/ZZX.cpp	/^void conv(ZZX& x, const ZZ_pX& a)$/;"	f
conv	deplib/ntl-main/src/ZZX.cpp	/^void conv(ZZX& x, const vec_ZZ& a)$/;"	f
conv	deplib/ntl-main/src/ZZX.cpp	/^void conv(ZZX& x, long a)$/;"	f
conv	deplib/ntl-main/src/ZZX.cpp	/^void conv(ZZ_pX& x, const ZZX& a)$/;"	f
conv	deplib/ntl-main/src/ZZX1.cpp	/^void conv(ZZX& x, const zz_pX& a)$/;"	f
conv	deplib/ntl-main/src/ZZX1.cpp	/^void conv(vec_zz_p& x, const ZZVec& a)$/;"	f	file:
conv	deplib/ntl-main/src/ZZX1.cpp	/^void conv(zz_pX& x, const ZZX& a)$/;"	f
conv	deplib/ntl-main/src/ZZ_p.cpp	/^void conv(ZZ_p& x, long a)$/;"	f
conv	deplib/ntl-main/src/ZZ_pEX.cpp	/^void conv(ZZ_pEX& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/src/ZZ_pEX.cpp	/^void conv(ZZ_pEX& x, const ZZX& a)$/;"	f
conv	deplib/ntl-main/src/ZZ_pEX.cpp	/^void conv(ZZ_pEX& x, const ZZ_p& a)$/;"	f
conv	deplib/ntl-main/src/ZZ_pEX.cpp	/^void conv(ZZ_pEX& x, const ZZ_pE& a)$/;"	f
conv	deplib/ntl-main/src/ZZ_pEX.cpp	/^void conv(ZZ_pEX& x, const ZZ_pX& aa)$/;"	f
conv	deplib/ntl-main/src/ZZ_pEX.cpp	/^void conv(ZZ_pEX& x, const vec_ZZ_pE& a)$/;"	f
conv	deplib/ntl-main/src/ZZ_pEX.cpp	/^void conv(ZZ_pEX& x, long a)$/;"	f
conv	deplib/ntl-main/src/ZZ_pX.cpp	/^void conv(ZZ_pX& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/src/ZZ_pX.cpp	/^void conv(ZZ_pX& x, const ZZ_p& a)$/;"	f
conv	deplib/ntl-main/src/ZZ_pX.cpp	/^void conv(ZZ_pX& x, const vec_ZZ_p& a)$/;"	f
conv	deplib/ntl-main/src/ZZ_pX.cpp	/^void conv(ZZ_pX& x, long a)$/;"	f
conv	deplib/ntl-main/src/lzz_pEX.cpp	/^void conv(zz_pEX& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/src/lzz_pEX.cpp	/^void conv(zz_pEX& x, const ZZX& a)$/;"	f
conv	deplib/ntl-main/src/lzz_pEX.cpp	/^void conv(zz_pEX& x, const vec_zz_pE& a)$/;"	f
conv	deplib/ntl-main/src/lzz_pEX.cpp	/^void conv(zz_pEX& x, const zz_p& a)$/;"	f
conv	deplib/ntl-main/src/lzz_pEX.cpp	/^void conv(zz_pEX& x, const zz_pE& a)$/;"	f
conv	deplib/ntl-main/src/lzz_pEX.cpp	/^void conv(zz_pEX& x, const zz_pX& aa)$/;"	f
conv	deplib/ntl-main/src/lzz_pEX.cpp	/^void conv(zz_pEX& x, long a)$/;"	f
conv	deplib/ntl-main/src/lzz_pX.cpp	/^void conv(zz_pX& x, const ZZ& a)$/;"	f
conv	deplib/ntl-main/src/lzz_pX.cpp	/^void conv(zz_pX& x, const vec_zz_p& a)$/;"	f
conv	deplib/ntl-main/src/lzz_pX.cpp	/^void conv(zz_pX& x, long a)$/;"	f
conv	deplib/ntl-main/src/lzz_pX.cpp	/^void conv(zz_pX& x, zz_p a)$/;"	f
conv	deplib/ntl-main/src/mat_ZZ.cpp	/^void conv(mat_ZZ_p& x, const mat_ZZ& a)$/;"	f
conv	deplib/ntl-main/src/mat_ZZ.cpp	/^void conv(mat_zz_p& x, const mat_ZZ& a)$/;"	f
conv	deplib/ntl-main/src/quad_float1.cpp	/^void conv(ZZ& z, const quad_float& x)$/;"	f
conv	deplib/ntl-main/src/quad_float1.cpp	/^void conv(quad_float& z, const ZZ& a)$/;"	f
conv	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void conv(vec_ZZ_p& x, const vec_ZZ& a)$/;"	f
conv	deplib/ntl-main/src/vec_lzz_p.cpp	/^void conv(vec_zz_p& x, const Vec<long>& a)$/;"	f
conv	deplib/ntl-main/src/vec_lzz_p.cpp	/^void conv(vec_zz_p& x, const vec_ZZ& a)$/;"	f
conv	deplib/ntl-main/src/xdouble.cpp	/^void conv(ZZ& x, const xdouble& a)$/;"	f
conv	deplib/ntl-main/src/xdouble.cpp	/^void conv(double& xx, const xdouble& a)$/;"	f
copier	deplib/ntl-main/include/NTL/SmartPtr.h	/^   static T* copier(T *p) { return (p ?  MakeRaw<T>(*p) : 0); }$/;"	f	struct:DefaultCopierPolicy
copier	deplib/ntl-main/include/NTL/SmartPtr.h	/^   static T* copier(T *p) { return (p ?  p->clone() : 0); }$/;"	f	struct:CloningCopier
copy	deplib/ntl-main/src/ZZ_pX.cpp	/^void copy(ZZ_pX& x, const ZZ_pX& a, long lo, long hi)$/;"	f
copy	deplib/ntl-main/src/lzz_pX.cpp	/^void copy(zz_pX& x, const zz_pX& a, long lo, long hi)$/;"	f
copyable	deplib/ntl-main/include/NTL/vector.h	/^   static constexpr bool copyable = Relocate_aux_has_any_copy((T*)0);$/;"	m	class:Vec
corr_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> corr_vec;$/;"	m	class:_ntl_rem_struct_medium	file:
corraux_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<mulmod_precon_t> corraux_vec;$/;"	m	class:_ntl_rem_struct_medium	file:
correct_deficit	deplib/ntl-main/include/NTL/PD.h	/^correct_deficit(PD<2> a, PD<2> b)$/;"	f
correct_deficit	deplib/ntl-main/include/NTL/PD.h	/^correct_deficit(PD<4> a, PD<4> b)$/;"	f
correct_deficit	deplib/ntl-main/include/NTL/PD.h	/^correct_deficit(PD<8> a, PD<8> b)$/;"	f
correct_excess	deplib/ntl-main/include/NTL/PD.h	/^correct_excess(PD<2> a, PD<2> b)$/;"	f
correct_excess	deplib/ntl-main/include/NTL/PD.h	/^correct_excess(PD<4> a, PD<4> b)$/;"	f
correct_excess	deplib/ntl-main/include/NTL/PD.h	/^correct_excess(PD<8> a, PD<8> b)$/;"	f
cos	deplib/ntl-main/include/NTL/RR.h	/^inline RR cos(const RR& a)$/;"	f
cos	deplib/ntl-main/src/RR.cpp	/^void cos(RR& res, const RR& x)$/;"	f
cost	deplib/ntl-main/include/NTL/MatPrime.h	/^   double cost;$/;"	m	struct:MatPrime_crt_helper
counter	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  std::atomic<long> counter;$/;"	m	class:BasicThreadPool
cp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr(CloneablePtr&& other) noexcept : dp(other.dp), cp(other.cp) $/;"	f	class:CloneablePtr
cp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr(CloneablePtr<Y>&& other) noexcept : dp(other.dp), cp(other.cp) $/;"	f	class:CloneablePtr
cp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtrControl *cp;$/;"	m	class:CloneablePtr
cp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr(SmartPtr&& other) noexcept : dp(other.dp), cp(other.cp) $/;"	f	class:SmartPtr
cp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr(SmartPtr<Y>&& other) noexcept : dp(other.dp), cp(other.cp) $/;"	f	class:SmartPtr
cp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtrControl *cp;$/;"	m	class:SmartPtr
cpacf_kma	deplib/ntl-main/include/NTL/linux_s390x.h	/^cpacf_kma(unsigned long fc, void *param, unsigned char *out, const unsigned char *aad,$/;"	f
crt_struct	deplib/ntl-main/include/NTL/ZZ_p.h	/^   ZZ_CRTStructAdapter crt_struct;$/;"	m	class:ZZ_pFFTInfoT
crt_tmp_vec	deplib/ntl-main/include/NTL/ZZ_p.h	/^  ZZ_TmpVecAdapter crt_tmp_vec;$/;"	m	class:ZZ_pTmpSpaceT
crypto_stream	deplib/ntl-main/src/ZZ.cpp	/^void crypto_stream($/;"	f
curlen	deplib/ntl-main/include/NTL/LazyTable.h	/^      long curlen;$/;"	m	class:LazyTable::Builder
cv	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     std::condition_variable cv;$/;"	m	class:BasicThreadPool::CompositeSignal
cv	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     std::condition_variable cv;$/;"	m	class:BasicThreadPool::SimpleSignal
cvt	deplib/ntl-main/src/BitMatTest.cpp	/^void cvt(mat_GF2& x, const mat_zz_p& a)$/;"	f
cvt	deplib/ntl-main/src/BitMatTest.cpp	/^void cvt(vec_GF2& x, const vec_zz_p& a)$/;"	f
d	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T d;$/;"	m	class:CloneablePtrControlDerived
d	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T d;$/;"	m	class:MakeCloneableAux
d	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T d;$/;"	m	class:MakeSmartAux
d	deplib/ntl-main/include/NTL/SmartPtr.h	/^public: T d; $/;"	m	class:MakeSmartAux
d	deplib/ntl-main/include/NTL/tools.h	/^struct Relocate_aux_TwoChars { char d[2]; };$/;"	m	struct:Relocate_aux_TwoChars
d	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct DD { D d; };$/;"	m	struct:DD	file:
d	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct DD { D d; };$/;"	m	struct:DD	file:
d	deplib/ntl-main/src/CheckThreads.cpp	/^   long d;$/;"	m	struct:X	file:
d1_val	deplib/ntl-main/src/ZZXFactoring.cpp	/^long d1_val(long bit_delta, long r, long s)$/;"	f	file:
data	deplib/ntl-main/include/NTL/Lazy.h	/^   mutable UniquePtr<T, P> data;$/;"	m	class:Lazy
data	deplib/ntl-main/include/NTL/LazyTable.h	/^   mutable UniqueArray< UniquePtr<T> > data;$/;"	m	class:LazyTable
data	deplib/ntl-main/include/NTL/PD.h	/^   __m128d data;$/;"	m	struct:PD
data	deplib/ntl-main/include/NTL/PD.h	/^   __m256d data;$/;"	m	struct:PD
data	deplib/ntl-main/include/NTL/PD.h	/^   __m512d data;$/;"	m	struct:PD
data	deplib/ntl-main/include/NTL/fileio.h	/^   Vec< Vec<char> > data;$/;"	m	class:FileList
data	deplib/ntl-main/include/NTL/sp_arith.h	/^   wide_double_impl_t data;$/;"	m	class:wide_double
data	deplib/ntl-main/include/NTL/thread.h	/^   NTL_SNS atomic_bool data;$/;"	m	class:AtomicBool
data	deplib/ntl-main/include/NTL/thread.h	/^   NTL_SNS atomic_long data;$/;"	m	class:AtomicLong
data	deplib/ntl-main/include/NTL/thread.h	/^   NTL_SNS atomic_ulong data;$/;"	m	class:AtomicLowWaterMark
data	deplib/ntl-main/include/NTL/vector.h	/^   T* data() { return elts(); }$/;"	f	class:Vec
data	deplib/ntl-main/include/NTL/vector.h	/^   const T* data() const { return elts(); }$/;"	f	class:Vec
data	deplib/ntl-main/src/ZZ.cpp	/^   Vec<long> data;$/;"	m	struct:_ZZ_local_stack	file:
data	deplib/ntl-main/src/ZZ.cpp	/^   unsigned char data[64];$/;"	m	struct:SHA256_CTX	file:
datalen	deplib/ntl-main/src/ZZ.cpp	/^   _ntl_uint32 datalen;$/;"	m	struct:SHA256_CTX	file:
dec	deplib/ntl-main/include/NTL/thread.h	/^   bool dec() $/;"	f	class:AtomicRefCount
dec	deplib/ntl-main/include/NTL/vec_GF2.h	/^      void dec() { idx--; }$/;"	f	struct:Vec::proxy_iterator_impl
default_BlockConstruct	deplib/ntl-main/include/NTL/vector.h	/^void default_BlockConstruct(T* p, long n)  $/;"	f
default_BlockConstructFromObj	deplib/ntl-main/include/NTL/vector.h	/^void default_BlockConstructFromObj(T* p, long n, const T& q)  $/;"	f
default_BlockConstructFromVec	deplib/ntl-main/include/NTL/vector.h	/^void default_BlockConstructFromVec(T* p, long n, const T* q)  $/;"	f
default_BlockDestroy	deplib/ntl-main/include/NTL/vector.h	/^void default_BlockDestroy(T* p, long n)  $/;"	f
deflate	deplib/ntl-main/src/ZZXFactoring.cpp	/^void deflate(ZZX& g, const ZZX& f, long m)$/;"	f	file:
deg	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long deg(const GF2EX& a) { return a.rep.length() - 1; }$/;"	f
deg	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long deg(const GF2EXModulus& F) { return F.n; }$/;"	f
deg	deplib/ntl-main/include/NTL/GF2X.h	/^inline long deg(const GF2XModulus& F) { return F.n; }$/;"	f
deg	deplib/ntl-main/include/NTL/ZZX.h	/^inline long deg(const ZZX& a) { return a.rep.length() - 1; }$/;"	f
deg	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long deg(const ZZ_pEX& a) { return a.rep.length() - 1; }$/;"	f
deg	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long deg(const ZZ_pEXModulus& F) { return F.n; }$/;"	f
deg	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline long deg(const ZZ_pX& a) { return a.rep.length() - 1; }$/;"	f
deg	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline long deg(const ZZ_pXModulus& F) { return F.n; }$/;"	f
deg	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long deg(const zz_pEX& a) { return a.rep.length() - 1; }$/;"	f
deg	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long deg(const zz_pEXModulus& F) { return F.n; }$/;"	f
deg	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline long deg(const zz_pX& a) { return a.rep.length() - 1; }$/;"	f
deg	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline long deg(const zz_pXModulus& F) { return F.n; }$/;"	f
deg	deplib/ntl-main/src/GF2X.cpp	/^long deg(const GF2X& aa)$/;"	f
degree	deplib/ntl-main/include/NTL/GF2E.h	/^static long degree() { return GF2EInfo->p.n; }$/;"	f	class:GF2E
degree	deplib/ntl-main/include/NTL/ZZ_pE.h	/^static long degree() { return deg(ZZ_pEInfo->p); }$/;"	f	class:ZZ_pE
degree	deplib/ntl-main/include/NTL/lzz_pE.h	/^static long degree() { return deg(zz_pEInfo->p); }$/;"	f	class:zz_pE
delete_list	deplib/ntl-main/include/NTL/tools.h	/^delete_list(void *vp)$/;"	f	namespace:details_pthread
delete_list	deplib/ntl-main/src/CheckThreads.cpp	/^delete_list(void *vp)$/;"	f	namespace:details_pthread
deleter	deplib/ntl-main/include/NTL/SmartPtr.h	/^   static void deleter(T *p) { delete p; }$/;"	f	struct:DefaultDeleterPolicy
deleter	deplib/ntl-main/include/NTL/ZZ.h	/^   static void deleter(RandomStream_impl* p) { RandomStream_impl_delete(p); }$/;"	f	struct:RandomStream_impl_deleter
deleter	deplib/ntl-main/include/NTL/ZZ.h	/^   void deleter(_ntl_general_rem_one_struct *pinfo)$/;"	f	struct:sp_ZZ_reduce_struct_policy
deleter	deplib/ntl-main/include/NTL/ZZ_p.h	/^      static void deleter(MatPrime_crt_helper *p) { MatPrime_crt_helper_deleter(p); }$/;"	f	struct:ZZ_pInfoT::MatPrime_crt_helper_deleter_policy
deleter	deplib/ntl-main/src/FFT.cpp	/^void FFTMulTabsDeleterPolicy::deleter(FFTMulTabs *p) { delete p; }$/;"	f	class:FFTMulTabsDeleterPolicy
details_pthread	deplib/ntl-main/include/NTL/tools.h	/^namespace details_pthread {$/;"	n
details_pthread	deplib/ntl-main/src/CheckThreads.cpp	/^namespace details_pthread {$/;"	n	file:
determinant	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline GF2 determinant(const mat_GF2& a)$/;"	f
determinant	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline GF2E determinant(const mat_GF2E& a)$/;"	f
determinant	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline ZZ determinant(const mat_ZZ& a, long deterministic=0)$/;"	f
determinant	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline ZZ_p determinant(const mat_ZZ_p& a)$/;"	f
determinant	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline ZZ_pE determinant(const mat_ZZ_pE& A)$/;"	f
determinant	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void determinant(zz_p& d, const mat_zz_p& A)$/;"	f
determinant	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline zz_p determinant(const mat_zz_p& a)$/;"	f
determinant	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline zz_pE determinant(const mat_zz_pE& A)$/;"	f
determinant	deplib/ntl-main/src/mat_GF2.cpp	/^void determinant(ref_GF2 d, const mat_GF2& M_in)$/;"	f
determinant	deplib/ntl-main/src/mat_GF2E.cpp	/^void determinant(GF2E& d, const Mat<GF2E>& M_in)$/;"	f
determinant	deplib/ntl-main/src/mat_RR.cpp	/^RR determinant(const mat_RR& a)$/;"	f
determinant	deplib/ntl-main/src/mat_RR.cpp	/^void determinant(RR& d, const mat_RR& M_in)$/;"	f
determinant	deplib/ntl-main/src/mat_ZZ.cpp	/^void determinant(ZZ& rres, const mat_ZZ& a, long deterministic)$/;"	f
determinant	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void determinant(ZZ_p& d, const mat_ZZ_p& M_in)$/;"	f
determinant	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void determinant(ZZ_pE& d, const Mat<ZZ_pE>& M_in)$/;"	f
determinant	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void determinant(zz_pE& d, const Mat<zz_pE>& M_in)$/;"	f
diag	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 diag(long n, GF2 d)$/;"	f
diag	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E diag(long n, const GF2E& d)$/;"	f
diag	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR diag(long n, const RR& d)$/;"	f
diag	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ diag(long n, const ZZ& d)$/;"	f
diag	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p diag(long n, const ZZ_p& d)$/;"	f
diag	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE diag(long n, const ZZ_pE& d)$/;"	f
diag	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p diag(long n, zz_p d)$/;"	f
diag	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE diag(long n, const zz_pE& d)$/;"	f
diag	deplib/ntl-main/src/mat_GF2.cpp	/^void diag(mat_GF2& X, long n, GF2 d)  $/;"	f
diag	deplib/ntl-main/src/mat_GF2E.cpp	/^void diag(mat_GF2E& X, long n, const GF2E& d_in)  $/;"	f
diag	deplib/ntl-main/src/mat_RR.cpp	/^void diag(mat_RR& X, long n, const RR& d_in)  $/;"	f
diag	deplib/ntl-main/src/mat_ZZ.cpp	/^void diag(mat_ZZ& X, long n, const ZZ& d_in)  $/;"	f
diag	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void diag(mat_ZZ_p& X, long n, const ZZ_p& d_in)  $/;"	f
diag	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void diag(mat_ZZ_pE& X, long n, const ZZ_pE& d_in)  $/;"	f
diag	deplib/ntl-main/src/mat_lzz_p.cpp	/^void diag(mat_zz_p& X, long n, zz_p d)  $/;"	f
diag	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void diag(mat_zz_pE& X, long n, const zz_pE& d_in)  $/;"	f
diff	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX diff(const GF2EX& a)$/;"	f
diff	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X diff(const GF2X& a)$/;"	f
diff	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX diff(const ZZX& a)$/;"	f
diff	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX diff(const ZZ_pEX& a)$/;"	f
diff	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX diff(const ZZ_pX& a)$/;"	f
diff	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX diff(const zz_pEX& a)$/;"	f
diff	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX diff(const zz_pX& a)$/;"	f
diff	deplib/ntl-main/include/NTL/vec_GF2.h	/^      long diff(const proxy_iterator_impl& other) const$/;"	f	struct:Vec::proxy_iterator_impl
diff	deplib/ntl-main/src/GF2EX.cpp	/^void diff(GF2EX& x, const GF2EX& a)$/;"	f
diff	deplib/ntl-main/src/GF2X1.cpp	/^void diff(GF2X& c, const GF2X& a)$/;"	f
diff	deplib/ntl-main/src/ZZX1.cpp	/^void diff(ZZX& x, const ZZX& a)$/;"	f
diff	deplib/ntl-main/src/ZZ_pEX.cpp	/^void diff(ZZ_pEX& x, const ZZ_pEX& a)$/;"	f
diff	deplib/ntl-main/src/ZZ_pX1.cpp	/^void diff(ZZ_pX& x, const ZZ_pX& a)$/;"	f
diff	deplib/ntl-main/src/lzz_pEX.cpp	/^void diff(zz_pEX& x, const zz_pEX& a)$/;"	f
diff	deplib/ntl-main/src/lzz_pX1.cpp	/^void diff(zz_pX& x, const zz_pX& a)$/;"	f
digit	deplib/ntl-main/include/NTL/ZZ.h	/^inline long digit(const ZZ& a, long k)$/;"	f
discriminant	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZ discriminant(const ZZX& a, long deterministic=0)$/;"	f
discriminant	deplib/ntl-main/src/ZZX1.cpp	/^void discriminant(ZZ& d, const ZZX& a, long deterministic)$/;"	f
div	deplib/ntl-main/include/NTL/GF2.h	/^inline void div(GF2& x, GF2 a, GF2 b)   $/;"	f
div	deplib/ntl-main/include/NTL/GF2.h	/^inline void div(GF2& x, GF2 a, long b)$/;"	f
div	deplib/ntl-main/include/NTL/GF2.h	/^inline void div(GF2& x, long a, GF2 b)$/;"	f
div	deplib/ntl-main/include/NTL/GF2.h	/^inline void div(ref_GF2 x, GF2 a, GF2 b)   $/;"	f
div	deplib/ntl-main/include/NTL/GF2.h	/^inline void div(ref_GF2 x, GF2 a, long b)$/;"	f
div	deplib/ntl-main/include/NTL/GF2.h	/^inline void div(ref_GF2 x, long a, GF2 b)$/;"	f
div	deplib/ntl-main/include/NTL/GF2E.h	/^inline void div(GF2E& x, const GF2E& a, GF2 b)$/;"	f
div	deplib/ntl-main/include/NTL/GF2E.h	/^inline void div(GF2E& x, const GF2E& a, long b)$/;"	f
div	deplib/ntl-main/include/NTL/ZZ.h	/^inline void div(ZZ& q, const ZZ& a, const ZZ& b)$/;"	f
div	deplib/ntl-main/include/NTL/ZZ.h	/^inline void div(ZZ& q, const ZZ& a, long b)$/;"	f
div	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void div(zz_p& x, long a, zz_p b) { div(x, to_zz_p(a), b); }$/;"	f
div	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void div(zz_p& x, zz_p a, long b) { div(x, a, to_zz_p(b)); }$/;"	f
div	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void div(zz_p& x, zz_p a, zz_p b)$/;"	f
div	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void div(zz_pX& q, const zz_pX& a, long b)$/;"	f
div	deplib/ntl-main/src/GF2E.cpp	/^void div(GF2E& x, GF2 a, const GF2E& b)$/;"	f
div	deplib/ntl-main/src/GF2E.cpp	/^void div(GF2E& x, const GF2E& a, const GF2E& b)$/;"	f
div	deplib/ntl-main/src/GF2E.cpp	/^void div(GF2E& x, long a, const GF2E& b)$/;"	f
div	deplib/ntl-main/src/GF2EX.cpp	/^void div(GF2EX& q, const GF2EX& a, GF2 b)$/;"	f
div	deplib/ntl-main/src/GF2EX.cpp	/^void div(GF2EX& q, const GF2EX& a, const GF2E& b)$/;"	f
div	deplib/ntl-main/src/GF2EX.cpp	/^void div(GF2EX& q, const GF2EX& a, const GF2EX& b)$/;"	f
div	deplib/ntl-main/src/GF2EX.cpp	/^void div(GF2EX& q, const GF2EX& a, const GF2EXModulus& F)$/;"	f
div	deplib/ntl-main/src/GF2EX.cpp	/^void div(GF2EX& q, const GF2EX& a, long b)$/;"	f
div	deplib/ntl-main/src/GF2X.cpp	/^void div(GF2X& q, const GF2X& a, GF2 b)$/;"	f
div	deplib/ntl-main/src/GF2X.cpp	/^void div(GF2X& q, const GF2X& a, long b)$/;"	f
div	deplib/ntl-main/src/GF2X1.cpp	/^void div(GF2X& q, const GF2X& a, const GF2X& b)$/;"	f
div	deplib/ntl-main/src/GF2X1.cpp	/^void div(GF2X& q, const GF2X& a, const GF2XModulus& F)$/;"	f
div	deplib/ntl-main/src/RR.cpp	/^void div(RR& z, const RR& a, const RR& b)$/;"	f
div	deplib/ntl-main/src/RR.cpp	/^void div(RR& z, const RR& a, double b)$/;"	f
div	deplib/ntl-main/src/RR.cpp	/^void div(RR& z, double a, const RR& b)$/;"	f
div	deplib/ntl-main/src/ZZX1.cpp	/^void div(ZZX& q, const ZZX& a, const ZZ& b)$/;"	f
div	deplib/ntl-main/src/ZZX1.cpp	/^void div(ZZX& q, const ZZX& a, const ZZX& b)$/;"	f
div	deplib/ntl-main/src/ZZX1.cpp	/^void div(ZZX& q, const ZZX& a, long b)$/;"	f
div	deplib/ntl-main/src/ZZ_p.cpp	/^void div(ZZ_p& x, const ZZ_p& a, const ZZ_p& b)$/;"	f
div	deplib/ntl-main/src/ZZ_p.cpp	/^void div(ZZ_p& x, const ZZ_p& a, long b)$/;"	f
div	deplib/ntl-main/src/ZZ_p.cpp	/^void div(ZZ_p& x, long a, const ZZ_p& b)$/;"	f
div	deplib/ntl-main/src/ZZ_pE.cpp	/^void div(ZZ_pE& x, const ZZ_p& a, const ZZ_pE& b)$/;"	f
div	deplib/ntl-main/src/ZZ_pE.cpp	/^void div(ZZ_pE& x, const ZZ_pE& a, const ZZ_p& b)$/;"	f
div	deplib/ntl-main/src/ZZ_pE.cpp	/^void div(ZZ_pE& x, const ZZ_pE& a, const ZZ_pE& b)$/;"	f
div	deplib/ntl-main/src/ZZ_pE.cpp	/^void div(ZZ_pE& x, const ZZ_pE& a, long b)$/;"	f
div	deplib/ntl-main/src/ZZ_pE.cpp	/^void div(ZZ_pE& x, long a, const ZZ_pE& b)$/;"	f
div	deplib/ntl-main/src/ZZ_pEX.cpp	/^void div(ZZ_pEX& q, const ZZ_pEX& a, const ZZ_p& b)$/;"	f
div	deplib/ntl-main/src/ZZ_pEX.cpp	/^void div(ZZ_pEX& q, const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
div	deplib/ntl-main/src/ZZ_pEX.cpp	/^void div(ZZ_pEX& q, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
div	deplib/ntl-main/src/ZZ_pEX.cpp	/^void div(ZZ_pEX& q, const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
div	deplib/ntl-main/src/ZZ_pEX.cpp	/^void div(ZZ_pEX& q, const ZZ_pEX& a, long b)$/;"	f
div	deplib/ntl-main/src/ZZ_pX.cpp	/^void div(ZZ_pX& q, const ZZ_pX& a, const ZZ_p& b)$/;"	f
div	deplib/ntl-main/src/ZZ_pX.cpp	/^void div(ZZ_pX& q, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
div	deplib/ntl-main/src/ZZ_pX.cpp	/^void div(ZZ_pX& q, const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
div	deplib/ntl-main/src/ZZ_pX.cpp	/^void div(ZZ_pX& q, const ZZ_pX& a, long b)$/;"	f
div	deplib/ntl-main/src/lzz_pE.cpp	/^void div(zz_pE& x, const zz_p& a, const zz_pE& b)$/;"	f
div	deplib/ntl-main/src/lzz_pE.cpp	/^void div(zz_pE& x, const zz_pE& a, const zz_p& b)$/;"	f
div	deplib/ntl-main/src/lzz_pE.cpp	/^void div(zz_pE& x, const zz_pE& a, const zz_pE& b)$/;"	f
div	deplib/ntl-main/src/lzz_pE.cpp	/^void div(zz_pE& x, const zz_pE& a, long b)$/;"	f
div	deplib/ntl-main/src/lzz_pE.cpp	/^void div(zz_pE& x, long a, const zz_pE& b)$/;"	f
div	deplib/ntl-main/src/lzz_pEX.cpp	/^void div(zz_pEX& q, const zz_pEX& a, const zz_p& b)$/;"	f
div	deplib/ntl-main/src/lzz_pEX.cpp	/^void div(zz_pEX& q, const zz_pEX& a, const zz_pE& b)$/;"	f
div	deplib/ntl-main/src/lzz_pEX.cpp	/^void div(zz_pEX& q, const zz_pEX& a, const zz_pEX& b)$/;"	f
div	deplib/ntl-main/src/lzz_pEX.cpp	/^void div(zz_pEX& q, const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
div	deplib/ntl-main/src/lzz_pEX.cpp	/^void div(zz_pEX& q, const zz_pEX& a, long b)$/;"	f
div	deplib/ntl-main/src/lzz_pX.cpp	/^void div(zz_pX& q, const zz_pX& a, const zz_pX& b)$/;"	f
div	deplib/ntl-main/src/lzz_pX.cpp	/^void div(zz_pX& q, const zz_pX& a, const zz_pXModulus& F)$/;"	f
div	deplib/ntl-main/src/lzz_pX.cpp	/^void div(zz_pX& q, const zz_pX& a, zz_p b)$/;"	f
div21	deplib/ntl-main/src/ZZ_pX.cpp	/^void div21(ZZ_pX& x, const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
div21	deplib/ntl-main/src/lzz_pX.cpp	/^void div21(zz_pX& x, const zz_pX& a, const zz_pXModulus& F)$/;"	f
divide	deplib/ntl-main/src/GF2EX.cpp	/^long divide(GF2EX& q, const GF2EX& a, const GF2EX& b)$/;"	f
divide	deplib/ntl-main/src/GF2EX.cpp	/^long divide(const GF2EX& a, const GF2EX& b)$/;"	f
divide	deplib/ntl-main/src/GF2X1.cpp	/^long divide(GF2X& q, const GF2X& a, const GF2X& b)$/;"	f
divide	deplib/ntl-main/src/GF2X1.cpp	/^long divide(const GF2X& a, const GF2X& b)$/;"	f
divide	deplib/ntl-main/src/ZZ.cpp	/^long divide(ZZ& q, const ZZ& a, const ZZ& b)$/;"	f
divide	deplib/ntl-main/src/ZZ.cpp	/^long divide(ZZ& q, const ZZ& a, long b)$/;"	f
divide	deplib/ntl-main/src/ZZ.cpp	/^long divide(const ZZ& a, const ZZ& b)$/;"	f
divide	deplib/ntl-main/src/ZZ.cpp	/^long divide(const ZZ& a, long b)$/;"	f
divide	deplib/ntl-main/src/ZZX1.cpp	/^long divide(ZZX& q, const ZZX& a, const ZZ& b)$/;"	f
divide	deplib/ntl-main/src/ZZX1.cpp	/^long divide(ZZX& q, const ZZX& a, const ZZX& b)$/;"	f
divide	deplib/ntl-main/src/ZZX1.cpp	/^long divide(ZZX& q, const ZZX& a, long b)$/;"	f
divide	deplib/ntl-main/src/ZZX1.cpp	/^long divide(const ZZX& a, const ZZ& b)$/;"	f
divide	deplib/ntl-main/src/ZZX1.cpp	/^long divide(const ZZX& a, const ZZX& b)$/;"	f
divide	deplib/ntl-main/src/ZZX1.cpp	/^long divide(const ZZX& a, long b)$/;"	f
divide	deplib/ntl-main/src/ZZ_pEX.cpp	/^long divide(ZZ_pEX& q, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
divide	deplib/ntl-main/src/ZZ_pEX.cpp	/^long divide(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
divide	deplib/ntl-main/src/ZZ_pX1.cpp	/^long divide(ZZ_pX& q, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
divide	deplib/ntl-main/src/ZZ_pX1.cpp	/^long divide(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
divide	deplib/ntl-main/src/lzz_pEX.cpp	/^long divide(const zz_pEX& a, const zz_pEX& b)$/;"	f
divide	deplib/ntl-main/src/lzz_pEX.cpp	/^long divide(zz_pEX& q, const zz_pEX& a, const zz_pEX& b)$/;"	f
divide	deplib/ntl-main/src/lzz_pX1.cpp	/^long divide(const zz_pX& a, const zz_pX& b)$/;"	f
divide	deplib/ntl-main/src/lzz_pX1.cpp	/^long divide(zz_pX& q, const zz_pX& a, const zz_pX& b)$/;"	f
divremtest	deplib/ntl-main/src/ZZ_pXTest.cpp	/^void divremtest()$/;"	f
divremtest	deplib/ntl-main/src/lzz_pXTest.cpp	/^void divremtest()$/;"	f
do_BlockConstruct	deplib/ntl-main/include/NTL/vector.h	/^static void do_BlockConstruct(T* p, long n) $/;"	f	struct:VecStrategy
do_BlockConstructFromObj	deplib/ntl-main/include/NTL/vector.h	/^static void do_BlockConstructFromObj(T* p, long n, const T& q)  $/;"	f	struct:VecStrategy
do_BlockConstructFromVec	deplib/ntl-main/include/NTL/vector.h	/^static void do_BlockConstructFromVec(T* p, long n, const T* q) $/;"	f	struct:VecStrategy
do_BlockDestroy	deplib/ntl-main/include/NTL/vector.h	/^static void do_BlockDestroy(T* p, long n) $/;"	f	struct:VecStrategy
do_get	deplib/ntl-main/src/ZZ.cpp	/^void old_RandomStream::do_get(unsigned char *res, long n)$/;"	f	class:old_RandomStream
double_MixedMul1	deplib/ntl-main/src/mat_ZZ.cpp	/^void double_MixedMul1(vec_ZZ& x, double *a, double **B, long n)$/;"	f	file:
double_MixedMul2	deplib/ntl-main/src/mat_ZZ.cpp	/^void double_MixedMul2(vec_ZZ& x, double *a, double **B, long n, long limit)$/;"	f	file:
dp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:AlignedArray
dp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:CloneablePtr
dp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:CopiedPtr
dp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:SmartPtr
dp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:UniqueArray
dp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T *dp;$/;"	m	class:UniquePtr
dp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   UniqueArray<T_ptr> dp;$/;"	m	class:Unique2DArray
dp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   UniquePtr<T> dp;$/;"	m	class:OptionalVal
dup2even	deplib/ntl-main/include/NTL/PD.h	/^dup2even(PD<4> a)$/;"	f
dup2even	deplib/ntl-main/include/NTL/PD.h	/^dup2even(PD<8> a)$/;"	f
dup2odd	deplib/ntl-main/include/NTL/PD.h	/^dup2odd(PD<4> a)$/;"	f
dup2odd	deplib/ntl-main/include/NTL/PD.h	/^dup2odd(PD<8> a)$/;"	f
dup4even	deplib/ntl-main/include/NTL/PD.h	/^dup4even(PD<8> a)$/;"	f
dup4odd	deplib/ntl-main/include/NTL/PD.h	/^dup4odd(PD<8> a)$/;"	f
e	deplib/ntl-main/include/NTL/RR.h	/^long e;$/;"	m	class:RR
e	deplib/ntl-main/include/NTL/xdouble.h	/^long e;$/;"	m	class:xdouble
e	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct EE { E e; };$/;"	m	struct:EE	file:
e	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct EE { E e; };$/;"	m	struct:EE	file:
efficiency	deplib/ntl-main/doc/tour-struct.html	/^<a name="efficiency">$/;"	a
elim	deplib/ntl-main/src/mat_lzz_p.cpp	/^long elim(const mat_zz_p& A, mat_zz_p *im, mat_zz_p *ker, long w, bool full)$/;"	f	file:
elim_basic	deplib/ntl-main/src/mat_lzz_p.cpp	/^long elim_basic(const mat_zz_p& A, mat_zz_p *im, mat_zz_p *ker,$/;"	f	file:
elim_blk_DD	deplib/ntl-main/src/mat_lzz_p.cpp	/^long elim_blk_DD(const mat_zz_p& A, mat_zz_p *im, mat_zz_p *ker,$/;"	f	file:
elim_blk_L	deplib/ntl-main/src/mat_lzz_p.cpp	/^long elim_blk_L(const mat_zz_p& A, mat_zz_p *im, mat_zz_p *ker,$/;"	f	file:
elim_blk_LL	deplib/ntl-main/src/mat_lzz_p.cpp	/^long elim_blk_LL(const mat_zz_p& A, mat_zz_p *im, mat_zz_p *ker,$/;"	f	file:
elts	deplib/ntl-main/include/NTL/GF2XVec.h	/^   GF2X* elts() { return v; }$/;"	f	class:GF2XVec
elts	deplib/ntl-main/include/NTL/GF2XVec.h	/^   const GF2X* elts() const { return v; }$/;"	f	class:GF2XVec
elts	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T *elts() const { return dp; }$/;"	f	class:UniqueArray
elts	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* elts() const { return dp; }$/;"	f	class:AlignedArray
elts	deplib/ntl-main/include/NTL/WordVector.h	/^   _ntl_ulong* elts() { return rep; }  $/;"	f	class:WordVector
elts	deplib/ntl-main/include/NTL/WordVector.h	/^   const _ntl_ulong* elts() const { return rep; }  $/;"	f	class:WordVector
elts	deplib/ntl-main/include/NTL/ZZVec.h	/^   ZZ* elts() { return v; }$/;"	f	class:ZZVec
elts	deplib/ntl-main/include/NTL/ZZVec.h	/^   const ZZ* elts() const { return v; }$/;"	f	class:ZZVec
elts	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   ZZ_pX elts[2][2];$/;"	m	class:ZZ_pXMatrix
elts	deplib/ntl-main/include/NTL/lzz_pX.h	/^   zz_pX elts[2][2];$/;"	m	class:zz_pXMatrix
elts	deplib/ntl-main/include/NTL/vector.h	/^   T* elts() { return _vec__rep; }  $/;"	f	class:Vec
elts	deplib/ntl-main/include/NTL/vector.h	/^   const T* elts() const { return _vec__rep; }  $/;"	f	class:Vec
elts	deplib/ntl-main/src/GF2EX.cpp	/^   GF2EX elts[2][2];$/;"	m	class:_NTL_GF2EXMatrix	file:
elts	deplib/ntl-main/src/GF2X1.cpp	/^   GF2X elts[2][2];$/;"	m	class:_NTL_GF2XMatrix	file:
elts	deplib/ntl-main/src/ZZ_pEX.cpp	/^   ZZ_pEX elts[2][2];$/;"	m	class:_NTL_ZZ_pEXMatrix	file:
elts	deplib/ntl-main/src/lzz_pEX.cpp	/^   zz_pEX elts[2][2];$/;"	m	class:_NTL_zz_pEXMatrix	file:
empty	deplib/ntl-main/src/ZZ.cpp	/^   long empty() { return (top == -1); }$/;"	f	struct:_ZZ_local_stack
end	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  void end()$/;"	f	class:BasicThreadPool
end	deplib/ntl-main/include/NTL/vec_GF2.h	/^   const_iterator end() const { $/;"	f	class:Vec
end	deplib/ntl-main/include/NTL/vec_GF2.h	/^   iterator end() { $/;"	f	class:Vec
end	deplib/ntl-main/include/NTL/vector.h	/^   T* end() { $/;"	f	class:Vec
end	deplib/ntl-main/include/NTL/vector.h	/^   const T* end() const { $/;"	f	class:Vec
eptr	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  std::exception_ptr eptr;$/;"	m	class:BasicThreadPool
eptr_guard	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  std::mutex eptr_guard;$/;"	m	class:BasicThreadPool
eq	deplib/ntl-main/include/NTL/vec_GF2.h	/^      bool eq(const proxy_iterator_impl& other) const$/;"	f	struct:Vec::proxy_iterator_impl
equals	deplib/ntl-main/include/NTL/lzz_p.h	/^bool equals(const zz_pContext& other) const { return ptr == other.ptr; } $/;"	f	class:zz_pContext
err_quit	aes_tests.c	/^static void err_quit(const char *fmt, ...) {$/;"	f	file:
err_quit	aes_whitebox_compiler.cc	/^void err_quit(const char *fmt, ...) {$/;"	f	namespace:__anon4
eval	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2E eval(const GF2EX& f, const GF2E& a)$/;"	f
eval	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2E eval(const GF2X& f, const GF2E& a)$/;"	f
eval	deplib/ntl-main/include/NTL/GF2EX.h	/^inline vec_GF2E eval(const GF2EX& f, const vec_GF2E& a)$/;"	f
eval	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void eval(GF2E& b, const GF2X& f, const GF2E& a)$/;"	f
eval	deplib/ntl-main/include/NTL/ZZ.h	/^   void eval(ZZ& t, const long *a, ZZ_TmpVecAdapter& tmp_vec) const$/;"	f	class:ZZ_CRTStructAdapter
eval	deplib/ntl-main/include/NTL/ZZ.h	/^   void eval(ZZ& x, ZZ& a) const$/;"	f	class:ZZ_ReduceStructAdapter
eval	deplib/ntl-main/include/NTL/ZZ.h	/^   void eval(long *x, const ZZ& a, ZZ_TmpVecAdapter& tmp_vec) const$/;"	f	class:ZZ_RemStructAdapter
eval	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pE eval(const ZZ_pEX& f, const ZZ_pE& a)$/;"	f
eval	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pE eval(const ZZ_pX& f, const ZZ_pE& a)$/;"	f
eval	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline vec_ZZ_pE eval(const ZZ_pEX& f, const vec_ZZ_pE& a)$/;"	f
eval	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void eval(ZZ_pE& b, const ZZ_pX& f, const ZZ_pE& a)$/;"	f
eval	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_p eval(const ZZ_pX& f, const ZZ_p& a)$/;"	f
eval	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline vec_ZZ_p eval(const ZZ_pX& f, const vec_ZZ_p& a)$/;"	f
eval	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline vec_zz_pE eval(const zz_pEX& f, const vec_zz_pE& a)$/;"	f
eval	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void eval(zz_pE& b, const zz_pX& f, const zz_pE& a)$/;"	f
eval	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pE eval(const zz_pEX& f, const zz_pE& a)$/;"	f
eval	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pE eval(const zz_pX& f, const zz_pE& a)$/;"	f
eval	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline vec_zz_p eval(const zz_pX& f, const vec_zz_p& a)$/;"	f
eval	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_p eval(const zz_pX& f, zz_p a)$/;"	f
eval	deplib/ntl-main/src/GF2EX.cpp	/^void eval(GF2E& b, const GF2EX& f, const GF2E& a)$/;"	f
eval	deplib/ntl-main/src/GF2EX.cpp	/^void eval(vec_GF2E& b, const GF2EX& f, const vec_GF2E& a)$/;"	f
eval	deplib/ntl-main/src/ZZ_pEX.cpp	/^void eval(ZZ_pE& b, const ZZ_pEX& f, const ZZ_pE& a)$/;"	f
eval	deplib/ntl-main/src/ZZ_pEX.cpp	/^void eval(vec_ZZ_pE& b, const ZZ_pEX& f, const vec_ZZ_pE& a)$/;"	f
eval	deplib/ntl-main/src/ZZ_pX1.cpp	/^void eval(ZZ_p& b, const ZZ_pX& f, const ZZ_p& a)$/;"	f
eval	deplib/ntl-main/src/ZZ_pX1.cpp	/^void eval(vec_ZZ_p& b, const ZZ_pX& f, const vec_ZZ_p& a)$/;"	f
eval	deplib/ntl-main/src/lip.cpp	/^   void eval(_ntl_gbigint *rres, _ntl_gbigint *TT)$/;"	f	class:_ntl_reduce_struct_plain
eval	deplib/ntl-main/src/lip.cpp	/^void _ntl_crt_struct_basic::eval(_ntl_gbigint *x, const long *b, _ntl_tmp_vec *generic_tmp_vec)$/;"	f	class:_ntl_crt_struct_basic
eval	deplib/ntl-main/src/lip.cpp	/^void _ntl_crt_struct_fast::eval(_ntl_gbigint *x, const long *b, _ntl_tmp_vec *generic_tmp_vec)$/;"	f	class:_ntl_crt_struct_fast
eval	deplib/ntl-main/src/lip.cpp	/^void _ntl_crt_struct_tbl::eval(_ntl_gbigint *x, const long *b, _ntl_tmp_vec *generic_tmp_vec)$/;"	f	class:_ntl_crt_struct_tbl
eval	deplib/ntl-main/src/lip.cpp	/^void _ntl_reduce_struct_montgomery::eval(_ntl_gbigint *rres, _ntl_gbigint *TT)$/;"	f	class:_ntl_reduce_struct_montgomery
eval	deplib/ntl-main/src/lip.cpp	/^void _ntl_rem_struct_basic::eval(long *x, _ntl_gbigint a, $/;"	f	class:_ntl_rem_struct_basic
eval	deplib/ntl-main/src/lip.cpp	/^void _ntl_rem_struct_fast::eval(long *x, _ntl_gbigint a, $/;"	f	class:_ntl_rem_struct_fast
eval	deplib/ntl-main/src/lip.cpp	/^void _ntl_rem_struct_medium::eval(long *x, _ntl_gbigint a, $/;"	f	class:_ntl_rem_struct_medium
eval	deplib/ntl-main/src/lip.cpp	/^void _ntl_rem_struct_tbl::eval(long *x, _ntl_gbigint a, $/;"	f	class:_ntl_rem_struct_tbl
eval	deplib/ntl-main/src/lzz_pEX.cpp	/^void eval(vec_zz_pE& b, const zz_pEX& f, const vec_zz_pE& a)$/;"	f
eval	deplib/ntl-main/src/lzz_pEX.cpp	/^void eval(zz_pE& b, const zz_pEX& f, const zz_pE& a)$/;"	f
eval	deplib/ntl-main/src/lzz_pX1.cpp	/^void eval(vec_zz_p& b, const zz_pX& f, const vec_zz_p& a)$/;"	f
eval	deplib/ntl-main/src/lzz_pX1.cpp	/^void eval(zz_p& b, const zz_pX& f, zz_p a)$/;"	f
except	deplib/ntl-main/doc/tour-struct.html	/^<a name="except">Error Handling and Exceptions<\/a>$/;"	a
exception_counter	deplib/ntl-main/src/ExceptionTest.cpp	/^unsigned long exception_counter = 0;$/;"	v
exec_index	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  void exec_index(long cnt, const Fct& fct) $/;"	f	class:BasicThreadPool
exec_pair	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   void exec_pair(long mid, const Fct0& fct0, const Fct1& fct1) $/;"	f	struct:RecursiveThreadPool
exec_range	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  void exec_range(long sz, const Fct& fct) $/;"	f	class:BasicThreadPool
exhausted	deplib/ntl-main/include/NTL/ZZ.h	/^long exhausted;$/;"	m	class:PrimeSeq
exists	deplib/ntl-main/include/NTL/SmartPtr.h	/^   bool exists() const { return dp != 0; } $/;"	f	class:OptionalVal
exp	deplib/ntl-main/include/NTL/RR.h	/^inline RR exp(const RR& a)$/;"	f
exp	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble exp(const xdouble& x) { return xexp(to_double(x)); }$/;"	f
exp	deplib/ntl-main/src/RR.cpp	/^void exp(RR& res, const RR& x)$/;"	f
exp	deplib/ntl-main/src/quad_float1.cpp	/^quad_float exp(const quad_float& x) { \/\/ New version 97 Aug 05$/;"	f
expm1	deplib/ntl-main/include/NTL/RR.h	/^inline RR expm1(const RR& a)$/;"	f
expm1	deplib/ntl-main/src/RR.cpp	/^void expm1(RR& res, const RR& x)$/;"	f
exponent	deplib/ntl-main/include/NTL/RR.h	/^long exponent() const { return e; }$/;"	f	class:RR
exponent	deplib/ntl-main/include/NTL/xdouble.h	/^long exponent() const { return e; }$/;"	f	class:xdouble
extract	deplib/ntl-main/src/lip.cpp	/^_ntl_tmp_vec *_ntl_crt_struct_basic::extract()$/;"	f	class:_ntl_crt_struct_basic
extract	deplib/ntl-main/src/lip.cpp	/^_ntl_tmp_vec *_ntl_crt_struct_fast::extract()$/;"	f	class:_ntl_crt_struct_fast
extract	deplib/ntl-main/src/lip.cpp	/^_ntl_tmp_vec *_ntl_crt_struct_tbl::extract()$/;"	f	class:_ntl_crt_struct_tbl
f	deplib/ntl-main/include/NTL/GF2EX.h	/^   GF2EX f;   \/\/ the modulus$/;"	m	class:GF2EXModulus
f	deplib/ntl-main/include/NTL/GF2X.h	/^   GF2X f;   \/\/ the modulus$/;"	m	class:GF2XModulus
f	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   ZZ_pEX f;   \/\/ the modulus$/;"	m	class:ZZ_pEXModulus
f	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   ZZ_pX f;   \/\/ the modulus$/;"	m	class:ZZ_pXModulus
f	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   zz_pEX f;   \/\/ the modulus$/;"	m	class:zz_pEXModulus
f	deplib/ntl-main/include/NTL/lzz_pX.h	/^   zz_pX f;   \/\/ the modulus$/;"	m	class:zz_pXModulus
f	deplib/ntl-main/include/NTL/tools.h	/^    typename std::remove_reference<F>::type f;$/;"	m	class:scope_guard
f0	deplib/ntl-main/include/NTL/GF2EX.h	/^   GF2EX f0, fbi, b;$/;"	m	struct:GF2EXTransMultiplier
f0	deplib/ntl-main/include/NTL/GF2EX.h	/^   GF2EX f0;$/;"	m	class:GF2EXModulus
f0	deplib/ntl-main/include/NTL/GF2X.h	/^   GF2X f0, fbi, b;$/;"	m	struct:GF2XTransMultiplier
f0	deplib/ntl-main/include/NTL/GF2X.h	/^   GF2X h0, f0;$/;"	m	class:GF2XModulus
f0	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   ZZ_pEX f0, fbi, b;$/;"	m	struct:ZZ_pEXTransMultiplier
f0	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   ZZ_pEX f0;$/;"	m	class:ZZ_pEXModulus
f0	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   zz_pEX f0, fbi, b;$/;"	m	struct:zz_pEXTransMultiplier
f0	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   zz_pEX f0;$/;"	m	class:zz_pEXModulus
f0	deplib/ntl-main/src/ZZ_pXTest.cpp	/^   ZZ_pX f0, fbi, b;$/;"	m	struct:ZZ_pXTransMultiplier	file:
f0	deplib/ntl-main/src/lzz_pXTest.cpp	/^   zz_pX f0, fbi, b;$/;"	m	struct:zz_pXTransMultiplier	file:
fabs	deplib/ntl-main/include/NTL/RR.h	/^inline RR fabs(const RR& a)$/;"	f
fabs	deplib/ntl-main/src/quad_float1.cpp	/^quad_float fabs(const quad_float& x) $/;"	f
fabs	deplib/ntl-main/src/xdouble.cpp	/^xdouble fabs(const xdouble& a)$/;"	f
factor	deplib/ntl-main/src/ZZXFactoring.cpp	/^void factor(ZZ& c,$/;"	f
fake_null_function	deplib/ntl-main/include/NTL/Lazy.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:Lazy
fake_null_function	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:AlignedArray
fake_null_function	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:CloneablePtr
fake_null_function	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:CopiedPtr
fake_null_function	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:SmartPtr
fake_null_function	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:Unique2DArray
fake_null_function	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:UniqueArray
fake_null_function	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void fake_null_function(Dummy) const {}$/;"	f	class:UniquePtr
fbi	deplib/ntl-main/include/NTL/GF2EX.h	/^   GF2EX f0, fbi, b;$/;"	m	struct:GF2EXTransMultiplier
fbi	deplib/ntl-main/include/NTL/GF2X.h	/^   GF2X f0, fbi, b;$/;"	m	struct:GF2XTransMultiplier
fbi	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   ZZ_pEX f0, fbi, b;$/;"	m	struct:ZZ_pEXTransMultiplier
fbi	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   zz_pEX f0, fbi, b;$/;"	m	struct:zz_pEXTransMultiplier
fbi	deplib/ntl-main/src/ZZ_pXTest.cpp	/^   ZZ_pX f0, fbi, b;$/;"	m	struct:ZZ_pXTransMultiplier	file:
fbi	deplib/ntl-main/src/lzz_pXTest.cpp	/^   zz_pX f0, fbi, b;$/;"	m	struct:zz_pXTransMultiplier	file:
fct	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^      const Fct& fct;$/;"	m	class:BasicThreadPool::ConcurrentTaskFct1
fct	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     const Fct& fct;$/;"	m	class:BasicThreadPool::ConcurrentTaskFct
fetch	deplib/ntl-main/include/NTL/ZZ.h	/^inline void ZZ_TmpVecAdapter::fetch(ZZ_CRTStructAdapter& crt_struct)$/;"	f	class:ZZ_TmpVecAdapter
fetch	deplib/ntl-main/include/NTL/ZZ.h	/^inline void ZZ_TmpVecAdapter::fetch(const ZZ_CRTStructAdapter& crt_struct)$/;"	f	class:ZZ_TmpVecAdapter
fetch	deplib/ntl-main/include/NTL/ZZ.h	/^inline void ZZ_TmpVecAdapter::fetch(const ZZ_RemStructAdapter& rem_struct)$/;"	f	class:ZZ_TmpVecAdapter
fetch	deplib/ntl-main/src/lip.cpp	/^_ntl_tmp_vec *_ntl_crt_struct_basic::fetch()$/;"	f	class:_ntl_crt_struct_basic
fetch	deplib/ntl-main/src/lip.cpp	/^_ntl_tmp_vec *_ntl_crt_struct_fast::fetch()$/;"	f	class:_ntl_crt_struct_fast
fetch	deplib/ntl-main/src/lip.cpp	/^_ntl_tmp_vec *_ntl_crt_struct_tbl::fetch()$/;"	f	class:_ntl_crt_struct_tbl
fetch	deplib/ntl-main/src/lip.cpp	/^_ntl_tmp_vec *_ntl_rem_struct_basic::fetch()$/;"	f	class:_ntl_rem_struct_basic
fetch	deplib/ntl-main/src/lip.cpp	/^_ntl_tmp_vec *_ntl_rem_struct_fast::fetch()$/;"	f	class:_ntl_rem_struct_fast
fetch	deplib/ntl-main/src/lip.cpp	/^_ntl_tmp_vec *_ntl_rem_struct_medium::fetch()$/;"	f	class:_ntl_rem_struct_medium
fetch	deplib/ntl-main/src/lip.cpp	/^_ntl_tmp_vec *_ntl_rem_struct_tbl::fetch()$/;"	f	class:_ntl_rem_struct_tbl
fft	deplib/ntl-main/src/ZZX1.cpp	/^fft(ZZVec& a, long r, long l, const ZZ& p, long n)$/;"	f	file:
fft1	deplib/ntl-main/src/ZZX1.cpp	/^fft1(ZZVec& a, long r, long l, long l1, const ZZ& p, long n)$/;"	f	file:
fftRep	deplib/ntl-main/include/NTL/lzz_pX.h	/^   fftRep() : k(-1), MaxK(-1), len(0), NumPrimes(0) { }$/;"	f	class:fftRep
fftRep	deplib/ntl-main/include/NTL/lzz_pX.h	/^   fftRep(INIT_SIZE_TYPE, long InitK) : k(-1), MaxK(-1), len(0), NumPrimes(0)$/;"	f	class:fftRep
fftRep	deplib/ntl-main/include/NTL/lzz_pX.h	/^   fftRep(const fftRep& R) : k(-1), MaxK(-1), len(0), NumPrimes(0)$/;"	f	class:fftRep
fftRep	deplib/ntl-main/include/NTL/lzz_pX.h	/^class fftRep {$/;"	c
fft_base	deplib/ntl-main/src/ZZX1.cpp	/^fft_base(ZZ* xp, long lgN, long r, long l, const ZZ& p, long n,$/;"	f	file:
fft_layer	deplib/ntl-main/src/ZZX1.cpp	/^fft_layer(ZZ* xp, long blocks, long size, long level, long r, long l,$/;"	f	file:
fft_rec	deplib/ntl-main/src/ZZX1.cpp	/^fft_rec(ZZ* xp, long lgN, long r, long l, const ZZ& p, long n,$/;"	f	file:
fft_short	deplib/ntl-main/src/ZZX1.cpp	/^fft_short(ZZ* xp, long yn, long xn, long lgN, $/;"	f	file:
fft_trunc	deplib/ntl-main/src/ZZX1.cpp	/^fft_trunc(ZZVec& a, long yn, long xn, $/;"	f	file:
fft_trunc_pair	deplib/ntl-main/src/ZZX1.cpp	/^fft_trunc_pair(ZZVec& a_0, ZZVec& a_1, long yn, long xn_0, long xn_1, $/;"	f	file:
fft_type	deplib/ntl-main/include/NTL/ZZ_pX.h	/^typedef FFTRep fft_type;$/;"	t	class:ZZ_pX
fft_type	deplib/ntl-main/include/NTL/lzz_pX.h	/^typedef fftRep fft_type;$/;"	t	class:zz_pX
fill_nprimes_vec	deplib/ntl-main/src/ZZX1.cpp	/^void NewFastCRTHelper::fill_nprimes_vec(long index) $/;"	f	class:NewFastCRTHelper
fill_prod_vec	deplib/ntl-main/src/ZZX1.cpp	/^void NewFastCRTHelper::fill_prod_vec(long index)$/;"	f	class:NewFastCRTHelper
first_vec	deplib/ntl-main/src/ZZX1.cpp	/^   Vec<long> first_vec;    \/\/ length == nblocks$/;"	m	struct:NewFastCRTHelper	file:
fixed	deplib/ntl-main/include/NTL/vec_GF2.h	/^   long fixed() const { return _maxlen & 1; }$/;"	f	class:Vec
fixed	deplib/ntl-main/include/NTL/vector.h	/^   long fixed() const $/;"	f	class:Vec
fixed	deplib/ntl-main/include/NTL/vector.h	/^   long fixed;$/;"	m	struct:_ntl_VectorHeader
floor	deplib/ntl-main/include/NTL/RR.h	/^inline RR floor(const RR& a)$/;"	f
floor	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double floor(wide_double x)$/;"	f
floor	deplib/ntl-main/src/RR.cpp	/^void floor(RR& z, const RR& a)$/;"	f
floor	deplib/ntl-main/src/quad_float1.cpp	/^quad_float floor(const quad_float& x)$/;"	f
floor	deplib/ntl-main/src/xdouble.cpp	/^xdouble floor(const xdouble& aa)$/;"	f
flush	deplib/ntl-main/src/G_LLL_FP.cpp	/^void GivensCache_FP::flush()$/;"	f	class:GivensCache_FP
flush	deplib/ntl-main/src/G_LLL_QP.cpp	/^void GivensCache_QP::flush()$/;"	f	class:GivensCache_QP
flush	deplib/ntl-main/src/G_LLL_RR.cpp	/^void GivensCache_RR::flush()$/;"	f	class:GivensCache_RR
flush	deplib/ntl-main/src/G_LLL_XD.cpp	/^void GivensCache_XD::flush()$/;"	f	class:GivensCache_XD
fma_test	deplib/ntl-main/src/CheckContractAux.cpp	/^double fma_test(double a, double b, double c)$/;"	f
fma_test	deplib/ntl-main/src/MakeDescAux.cpp	/^double fma_test(double a, double b, double c)$/;"	f
foo	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct C { virtual void foo() { } };$/;"	f	struct:C
foo	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct C { virtual void foo() { } };$/;"	f	struct:C
from_mat_ZZ_p_crt_rep	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void from_mat_ZZ_p_crt_rep(const mat_ZZ_p_crt_rep& X, mat_ZZ_p& A)$/;"	f
from_scalar	aes_whitebox_compiler.cc	/^inline NTL::vec_GF2 from_scalar(uint32_t in) {$/;"	f	namespace:__anon4
from_scalar	aes_whitebox_compiler.cc	/^inline NTL::vec_GF2 from_scalar(uint8_t in) {$/;"	f	namespace:__anon4
fun	deplib/ntl-main/src/CheckAVX.cpp	/^void fun(double * x, const double *a, const double *b)$/;"	f
fun	deplib/ntl-main/src/CheckAVX2.cpp	/^void fun(unsigned int* x, const unsigned int *a)$/;"	f
fun	deplib/ntl-main/src/CheckAVX512F.cpp	/^void fun(double * x, const double *a, const double *b)$/;"	f
fun	deplib/ntl-main/src/CheckFMA.cpp	/^void fun(double * x, const double *a, const double *b)$/;"	f
fun	deplib/ntl-main/src/CheckSSSE3.cpp	/^void fun(unsigned int* x, const unsigned int *a)$/;"	f
fun	deplib/ntl-main/src/gf2x_version_1_2_or_later_required.cpp	/^void fun()$/;"	f
fun1	deplib/ntl-main/src/CheckAVX512F.cpp	/^void fun1(double *x, const long *p)$/;"	f
func_append	deplib/ntl-main/src/libtool-origin/configure	/^func_append ()\\$/;"	f
func_append	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_append ()$/;"	f
func_append_quoted	deplib/ntl-main/src/libtool-origin/configure	/^func_append_quoted ()\\$/;"	f
func_append_quoted	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_append_quoted ()$/;"	f
func_arith	deplib/ntl-main/src/libtool-origin/configure	/^func_arith ()\\$/;"	f
func_arith	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_arith ()$/;"	f
func_basename	deplib/ntl-main/src/libtool-origin/configure	/^func_basename ()\\$/;"	f
func_basename	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_basename ()$/;"	f
func_check_version_match	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_cygpath ()$/;"	f
func_dirname	deplib/ntl-main/src/libtool-origin/configure	/^func_dirname ()\\$/;"	f
func_dirname	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_dirname ()$/;"	f
func_dirname_and_basename	deplib/ntl-main/src/libtool-origin/configure	/^func_dirname_and_basename ()\\$/;"	f
func_dirname_and_basename	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	deplib/ntl-main/src/libtool-origin/configure	/^func_echo_all ()$/;"	f
func_echo_all	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_error ()$/;"	f
func_exec_program	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_exec_program_core ()$/;"	f
func_execute_cmds	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	deplib/ntl-main/src/libtool-origin/configure	/^  func_fallback_echo ()$/;"	f
func_fallback_echo	deplib/ntl-main/src/libtool-origin/configure	/^func_fallback_echo ()$/;"	f
func_fallback_echo	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_grep ()$/;"	f
func_help	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	deplib/ntl-main/src/libtool-origin/configure	/^func_len ()\\$/;"	f
func_len	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_len ()$/;"	f
func_lo2o	deplib/ntl-main/src/libtool-origin/configure	/^func_lo2o ()\\$/;"	f
func_lo2o	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_lo2o ()$/;"	f
func_lt_dump_args	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_relative_path ()$/;"	f
func_replace_sysroot	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_show_eval	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_source ()$/;"	f
func_split_long_opt	deplib/ntl-main/src/libtool-origin/configure	/^func_split_long_opt ()\\$/;"	f
func_split_long_opt	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_short_opt	deplib/ntl-main/src/libtool-origin/configure	/^func_split_short_opt ()\\$/;"	f
func_split_short_opt	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_split_short_opt ()$/;"	f
func_stripname	deplib/ntl-main/src/libtool-origin/configure	/^func_stripname ()\\$/;"	f
func_stripname	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_stripname ()$/;"	f
func_stripname_cnf	deplib/ntl-main/src/libtool-origin/configure	/^func_stripname_cnf ()$/;"	f
func_to_host_file	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_usage ()$/;"	f
func_verbose	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_verbose ()$/;"	f
func_version	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_version ()$/;"	f
func_warning	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	deplib/ntl-main/src/libtool-origin/configure	/^func_xform ()\\$/;"	f
func_xform	deplib/ntl-main/src/libtool-origin/ltmain.sh	/^func_xform ()$/;"	f
fused_muladd	deplib/ntl-main/include/NTL/PD.h	/^fused_muladd(PD<2> a, PD<2> b, PD<2> c) $/;"	f
fused_muladd	deplib/ntl-main/include/NTL/PD.h	/^fused_muladd(PD<4> a, PD<4> b, PD<4> c) $/;"	f
fused_muladd	deplib/ntl-main/include/NTL/PD.h	/^fused_muladd(PD<8> a, PD<8> b, PD<8> c) $/;"	f
fused_mulsub	deplib/ntl-main/include/NTL/PD.h	/^fused_mulsub(PD<2> a, PD<2> b, PD<2> c) $/;"	f
fused_mulsub	deplib/ntl-main/include/NTL/PD.h	/^fused_mulsub(PD<4> a, PD<4> b, PD<4> c) $/;"	f
fused_mulsub	deplib/ntl-main/include/NTL/PD.h	/^fused_mulsub(PD<8> a, PD<8> b, PD<8> c) $/;"	f
fused_negmuladd	deplib/ntl-main/include/NTL/PD.h	/^fused_negmuladd(PD<2> a, PD<2> b, PD<2> c) $/;"	f
fused_negmuladd	deplib/ntl-main/include/NTL/PD.h	/^fused_negmuladd(PD<4> a, PD<4> b, PD<4> c) $/;"	f
fused_negmuladd	deplib/ntl-main/include/NTL/PD.h	/^fused_negmuladd(PD<8> a, PD<8> b, PD<8> c) $/;"	f
fwd_butterfly	deplib/ntl-main/src/FFT.cpp	1250;"	d	file:
fwd_butterfly	deplib/ntl-main/src/pd_FFT.cpp	240;"	d	file:
fwd_butterfly0	deplib/ntl-main/src/FFT.cpp	1284;"	d	file:
fwd_butterfly1	deplib/ntl-main/src/FFT.cpp	1272;"	d	file:
fwd_butterfly_full	deplib/ntl-main/src/pd_FFT.cpp	226;"	d	file:
fwd_butterfly_half	deplib/ntl-main/src/pd_FFT.cpp	214;"	d	file:
fwd_butterfly_neg	deplib/ntl-main/src/FFT.cpp	1261;"	d	file:
fwd_butterfly_x4	deplib/ntl-main/src/pd_FFT.cpp	273;"	d	file:
gadd_mul_many	deplib/ntl-main/src/lip.cpp	/^void gadd_mul_many(_ntl_gbigint *res, _ntl_gbigint *a, long *b, $/;"	f	file:
gauss	deplib/ntl-main/src/ZZXFactoring.cpp	/^void gauss(ZZ& d_out, mat_ZZ& R_out, const mat_ZZ& M)$/;"	f	file:
gauss	deplib/ntl-main/src/mat_GF2.cpp	/^long gauss(mat_GF2& M)$/;"	f
gauss	deplib/ntl-main/src/mat_GF2.cpp	/^long gauss(mat_GF2& M, long w)$/;"	f
gauss	deplib/ntl-main/src/mat_GF2E.cpp	/^long gauss(Mat<GF2E>& M)$/;"	f
gauss	deplib/ntl-main/src/mat_GF2E.cpp	/^long gauss(Mat<GF2E>& M_in, long w)$/;"	f
gauss	deplib/ntl-main/src/mat_ZZ_p.cpp	/^long gauss(mat_ZZ_p& M)$/;"	f
gauss	deplib/ntl-main/src/mat_ZZ_p.cpp	/^long gauss(mat_ZZ_p& M_in, long w)$/;"	f
gauss	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^long gauss(Mat<ZZ_pE>& M)$/;"	f
gauss	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^long gauss(Mat<ZZ_pE>& M_in, long w)$/;"	f
gauss	deplib/ntl-main/src/mat_lzz_p.cpp	/^long gauss(mat_zz_p& M)$/;"	f
gauss	deplib/ntl-main/src/mat_lzz_p.cpp	/^long gauss(mat_zz_p& M, long w)$/;"	f
gauss	deplib/ntl-main/src/mat_lzz_pE.cpp	/^long gauss(Mat<zz_pE>& M)$/;"	f
gauss	deplib/ntl-main/src/mat_lzz_pE.cpp	/^long gauss(Mat<zz_pE>& M_in, long w)$/;"	f
get	deplib/ntl-main/include/NTL/Lazy.h	/^   const T* get() const { return data.get(); }$/;"	f	class:Lazy
get	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* get() const { return dp.get(); }$/;"	f	class:OptionalVal
get	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:AlignedArray
get	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:CloneablePtr
get	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:CopiedPtr
get	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:SmartPtr
get	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:UniqueArray
get	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* get() const { return dp; }$/;"	f	class:UniquePtr
get	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T_ptr* get() const { return dp.get(); }$/;"	f	class:Unique2DArray
get	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void *get() { return &d; }$/;"	f	class:CloneablePtrControlDerived
get	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void *get() { return &d; }$/;"	f	class:MakeCloneableAux
get	deplib/ntl-main/include/NTL/ZZ.h	/^   void get(unsigned char *res, long n) $/;"	f	class:RandomStream
get	deplib/ntl-main/include/NTL/ZZ.h	/^   void get(unsigned char *res, long n) $/;"	f	class:old_RandomStream
get	deplib/ntl-main/include/NTL/matrix.h	/^   const_reference get(long i, long j) const { return _mat__rep[i].get(j); }$/;"	f	class:Mat
get	deplib/ntl-main/include/NTL/vec_GF2.h	/^   const GF2 get(long i) const$/;"	f	class:Vec
get	deplib/ntl-main/include/NTL/vector.h	/^   const T& get(long i) const $/;"	f	class:Vec
getBasicThreadPool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     BasicThreadPool *getBasicThreadPool() const { return pool; }$/;"	f	class:BasicThreadPool::ConcurrentTask
get_MatPrime_crt_helper_info	deplib/ntl-main/src/mat_ZZ_p.cpp	/^const MatPrime_crt_helper& get_MatPrime_crt_helper_info()$/;"	f	file:
get_a	deplib/ntl-main/include/NTL/ZZ.h	/^   const ZZ& get_a() const { return *a_ptr; }$/;"	f	class:InvModErrorObject
get_a	deplib/ntl-main/include/NTL/ZZ.h	/^   const ZZ& get_a() const { return ZZ::zero(); }$/;"	f	class:InvModErrorObject
get_buf	deplib/ntl-main/src/ZZ.cpp	/^   get_buf() const$/;"	f	struct:RandomStream_impl
get_buf_len	deplib/ntl-main/src/ZZ.cpp	/^   get_buf_len() const$/;"	f	struct:RandomStream_impl
get_bytes	deplib/ntl-main/src/ZZ.cpp	/^   get_bytes(unsigned char *NTL_RESTRICT res, $/;"	f	struct:RandomStream_impl
get_bytes	deplib/ntl-main/src/ZZ.cpp	/^   long get_bytes(unsigned char *res, long n, long pos) $/;"	f	struct:RandomStream_impl
get_bytes	deplib/ntl-main/src/ZZ.cpp	/^   long get_bytes(unsigned char *res, long n, long pos)$/;"	f	struct:RandomStream_impl
get_count	deplib/ntl-main/include/NTL/SmartPtr.h	/^   long get_count() const { return cp ? cp->cnt.get_count() : 0; }$/;"	f	class:CloneablePtr
get_count	deplib/ntl-main/include/NTL/SmartPtr.h	/^   long get_count() const { return cp ? cp->cnt.get_count() : 0; }$/;"	f	class:SmartPtr
get_count	deplib/ntl-main/include/NTL/thread.h	/^   long get_count() const { return cnt; }$/;"	f	class:AtomicRefCount
get_hi	deplib/ntl-main/include/NTL/PD.h	/^get_hi(PD<4> a)$/;"	f
get_hi	deplib/ntl-main/include/NTL/PD.h	/^get_hi(PD<8> a)$/;"	f
get_lo	deplib/ntl-main/include/NTL/PD.h	/^get_lo(PD<4> a)$/;"	f
get_lo	deplib/ntl-main/include/NTL/PD.h	/^get_lo(PD<8> a)$/;"	f
get_n	deplib/ntl-main/include/NTL/ZZ.h	/^   const ZZ& get_n() const { return *n_ptr; }$/;"	f	class:InvModErrorObject
get_n	deplib/ntl-main/include/NTL/ZZ.h	/^   const ZZ& get_n() const { return ZZ::zero(); }$/;"	f	class:InvModErrorObject
gf2x_ternary_fft_info_srcptr	deplib/ntl-main/src/gf2x_version_1_2_or_later_required.cpp	/^typedef const struct gf2x_ternary_fft_info_s * gf2x_ternary_fft_info_srcptr;$/;"	t	typeref:struct:gf2x_ternary_fft_info_s	file:
gf_mul	aes_private.h	/^constexpr uint8_t gf_mul[256][6] = {$/;"	m	namespace:__anon2
give_advice	deplib/ntl-main/src/libtool-origin/missing	/^give_advice ()$/;"	f
globalSignal	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  SimpleSignal<bool> globalSignal;$/;"	m	class:BasicThreadPool
gmod_simple	deplib/ntl-main/src/lip.cpp	/^void gmod_simple(_ntl_gbigint a, _ntl_gbigint d, _ntl_gbigint *rr)$/;"	f	file:
guard	deplib/ntl-main/include/NTL/Lazy.h	/^      GuardProxy guard;$/;"	m	class:Lazy::Builder
guard	deplib/ntl-main/include/NTL/LazyTable.h	/^      GuardProxy guard;$/;"	m	class:LazyTable::Builder
gweights_mp_limb	deplib/ntl-main/src/lip.cpp	/^gweights_mp_limb($/;"	f	file:
gxxeucl	deplib/ntl-main/src/lip.cpp	/^gxxeucl($/;"	f	file:
gxxeucl_basic	deplib/ntl-main/src/lip.cpp	/^gxxeucl_basic($/;"	f	file:
h	deplib/ntl-main/include/NTL/vector.h	/^   _ntl_VectorHeader h;$/;"	m	union:_ntl_AlignedVectorHeader
h0	deplib/ntl-main/include/NTL/GF2EX.h	/^   GF2EX h0;$/;"	m	class:GF2EXModulus
h0	deplib/ntl-main/include/NTL/GF2X.h	/^   GF2X h0, f0;$/;"	m	class:GF2XModulus
h0	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   ZZ_pEX h0;$/;"	m	class:ZZ_pEXModulus
h0	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   zz_pEX h0;$/;"	m	class:zz_pEXModulus
hadamard	deplib/ntl-main/src/mat_ZZ.cpp	/^void hadamard(ZZ& num_bound, ZZ& den_bound, $/;"	f	file:
hi	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   long lo, hi; \/\/ range of indices is [lo..hi)$/;"	m	struct:RecursiveThreadPool
hi	deplib/ntl-main/include/NTL/quad_float.h	/^  double hi, lo;$/;"	m	class:quad_float
hi	deplib/ntl-main/include/NTL/tools.h	/^   unsigned long hi, lo;$/;"	m	struct:ll_type
hlc	deplib/ntl-main/include/NTL/GF2EX.h	/^   GF2E hlc;$/;"	m	class:GF2EXModulus
hlc	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   ZZ_pE hlc;$/;"	m	class:ZZ_pEXModulus
hlc	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   zz_pE hlc;$/;"	m	class:zz_pEXModulus
hmac_sha256	deplib/ntl-main/src/ZZ.cpp	/^void hmac_sha256(const unsigned char *key, long klen, $/;"	f	file:
ident	deplib/ntl-main/src/mat_GF2.cpp	/^void ident(mat_GF2& X, long n)  $/;"	f
ident	deplib/ntl-main/src/mat_GF2E.cpp	/^void ident(mat_GF2E& X, long n)  $/;"	f
ident	deplib/ntl-main/src/mat_RR.cpp	/^void ident(mat_RR& X, long n)  $/;"	f
ident	deplib/ntl-main/src/mat_ZZ.cpp	/^void ident(mat_ZZ& X, long n)  $/;"	f
ident	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void ident(mat_ZZ_p& X, long n)  $/;"	f
ident	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void ident(mat_ZZ_pE& X, long n)  $/;"	f
ident	deplib/ntl-main/src/mat_lzz_p.cpp	/^void ident(mat_zz_p& X, long n)  $/;"	f
ident	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void ident(mat_zz_pE& X, long n)  $/;"	f
ident_mat_GF2	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 ident_mat_GF2(long n)$/;"	f
ident_mat_GF2E	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E ident_mat_GF2E(long n)$/;"	f
ident_mat_RR	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR ident_mat_RR(long n)$/;"	f
ident_mat_ZZ	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ ident_mat_ZZ(long n)$/;"	f
ident_mat_ZZ_p	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p ident_mat_ZZ_p(long n)$/;"	f
ident_mat_ZZ_pE	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE ident_mat_ZZ_pE(long n)$/;"	f
ident_mat_zz_p	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p ident_mat_zz_p(long n)$/;"	f
ident_mat_zz_pE	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE ident_mat_zz_pE(long n)$/;"	f
idx	deplib/ntl-main/include/NTL/vec_GF2.h	/^      long idx;$/;"	m	struct:Vec::proxy_iterator_impl
ifft	deplib/ntl-main/src/ZZX1.cpp	/^ifft(ZZVec& a, long r, long l, const ZZ& p, long n)$/;"	f	file:
ifft1	deplib/ntl-main/src/ZZX1.cpp	/^ifft1(ZZVec& a, long r, long l, long l1, const ZZ& p, long n)$/;"	f	file:
ifft_base	deplib/ntl-main/src/ZZX1.cpp	/^ifft_base(ZZ* xp, long lgN, long r, long l, const ZZ& p, long n,$/;"	f	file:
ifft_layer	deplib/ntl-main/src/ZZX1.cpp	/^ifft_layer(ZZ* xp, long blocks, long size, long level, long r, long l,$/;"	f	file:
ifft_rec	deplib/ntl-main/src/ZZX1.cpp	/^ifft_rec(ZZ* xp, long lgN, long r, long l, const ZZ& p, long n,$/;"	f	file:
ifft_short0	deplib/ntl-main/src/ZZX1.cpp	/^ifft_short0(ZZ* xp, long lgN, $/;"	f	file:
ifft_short1	deplib/ntl-main/src/ZZX1.cpp	/^ifft_short1(ZZ* xp, long yn, long lgN, $/;"	f	file:
ifft_short2	deplib/ntl-main/src/ZZX1.cpp	/^ifft_short2(ZZ* xp, long yn, long lgN, $/;"	f	file:
ifft_trunc	deplib/ntl-main/src/ZZX1.cpp	/^ifft_trunc(ZZVec& a, long yn, long r, long l, long l1, const ZZ& p, long n)$/;"	f	file:
image	deplib/ntl-main/src/LLL.cpp	/^long image(ZZ& det, mat_ZZ& B, long verbose)$/;"	f
image	deplib/ntl-main/src/LLL.cpp	/^long image(ZZ& det, mat_ZZ& B, mat_ZZ& U, long verbose)$/;"	f
image	deplib/ntl-main/src/LLL.cpp	/^long image(ZZ& det, mat_ZZ& B, mat_ZZ* U, long verbose)$/;"	f	file:
image	deplib/ntl-main/src/mat_GF2.cpp	/^void image(mat_GF2& X, const mat_GF2& A)$/;"	f
image	deplib/ntl-main/src/mat_GF2E.cpp	/^void image(Mat<GF2E>& X, const Mat<GF2E>& A)$/;"	f
image	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void image(mat_ZZ_p& X, const mat_ZZ_p& A)$/;"	f
image	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void image(Mat<ZZ_pE>& X, const Mat<ZZ_pE>& A)$/;"	f
image	deplib/ntl-main/src/mat_lzz_p.cpp	/^void image(mat_zz_p& X, const mat_zz_p& A)$/;"	f
image	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void image(Mat<zz_pE>& X, const Mat<zz_pE>& A)$/;"	f
impl	deplib/ntl-main/include/NTL/ZZ.h	/^   UniquePtr<RandomStream_impl,RandomStream_impl_deleter> impl;$/;"	m	class:RandomStream
inc	deplib/ntl-main/include/NTL/thread.h	/^   unsigned long inc() $/;"	f	class:AtomicCounter
inc	deplib/ntl-main/include/NTL/thread.h	/^   void inc() { cnt.fetch_add(1, NTL_SNS memory_order_relaxed); }$/;"	f	class:AtomicRefCount
inc	deplib/ntl-main/include/NTL/vec_GF2.h	/^      void inc() { idx++; }$/;"	f	struct:Vec::proxy_iterator_impl
inc32	deplib/ntl-main/src/ZZ.cpp	/^inc32(unsigned char ctr[16])$/;"	f	file:
inc_red_fudge	deplib/ntl-main/src/G_LLL_FP.cpp	/^static void inc_red_fudge()$/;"	f	file:
inc_red_fudge	deplib/ntl-main/src/G_LLL_QP.cpp	/^static void inc_red_fudge()$/;"	f	file:
inc_red_fudge	deplib/ntl-main/src/G_LLL_RR.cpp	/^static void inc_red_fudge()$/;"	f	file:
inc_red_fudge	deplib/ntl-main/src/G_LLL_XD.cpp	/^static void inc_red_fudge()$/;"	f	file:
inc_red_fudge	deplib/ntl-main/src/LLL_FP.cpp	/^static void inc_red_fudge()$/;"	f	file:
inc_red_fudge	deplib/ntl-main/src/LLL_QP.cpp	/^static void inc_red_fudge()$/;"	f	file:
inc_red_fudge	deplib/ntl-main/src/LLL_RR.cpp	/^static void inc_red_fudge()$/;"	f	file:
inc_red_fudge	deplib/ntl-main/src/LLL_XD.cpp	/^static void inc_red_fudge()$/;"	f	file:
incle	deplib/ntl-main/src/ZZ.cpp	/^static inline void incle(unsigned char n[16]) {$/;"	f	file:
incr	deplib/ntl-main/src/G_LLL_FP.cpp	/^void GivensCache_FP::incr()$/;"	f	class:GivensCache_FP
incr	deplib/ntl-main/src/G_LLL_QP.cpp	/^void GivensCache_QP::incr()$/;"	f	class:GivensCache_QP
incr	deplib/ntl-main/src/G_LLL_RR.cpp	/^void GivensCache_RR::incr()$/;"	f	class:GivensCache_RR
incr	deplib/ntl-main/src/G_LLL_XD.cpp	/^void GivensCache_XD::incr()$/;"	f	class:GivensCache_XD
index_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> index_vec;$/;"	m	class:_ntl_crt_struct_fast	file:
index_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> index_vec;$/;"	m	class:_ntl_rem_struct_fast	file:
index_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> index_vec;$/;"	m	class:_ntl_rem_struct_medium	file:
inflate	deplib/ntl-main/src/ZZXFactoring.cpp	/^void inflate(ZZX& g, const ZZX& f, long m)$/;"	f	file:
info	deplib/ntl-main/include/NTL/tools.h	/^    const char *info;$/;"	m	class:scope_guard
info	deplib/ntl-main/include/NTL/tools.h	/^   const char *info;$/;"	m	struct:scope_guard_builder
init	deplib/ntl-main/include/NTL/ZZ.h	/^   void init(const ZZ& p, const ZZ& excess)$/;"	f	class:ZZ_ReduceStructAdapter
init	deplib/ntl-main/include/NTL/ZZ.h	/^   void init(long n, const ZZ& p, long (*primes)(long))$/;"	f	class:ZZ_CRTStructAdapter
init	deplib/ntl-main/include/NTL/ZZ.h	/^   void init(long n, const ZZ& p, long (*primes)(long))$/;"	f	class:ZZ_RemStructAdapter
init	deplib/ntl-main/include/NTL/vector.h	/^   long init;$/;"	m	struct:_ntl_VectorHeader
init	deplib/ntl-main/src/GF2E.cpp	/^void GF2E::init(const GF2X& p)$/;"	f	class:GF2E
init	deplib/ntl-main/src/ZZ_p.cpp	/^void ZZ_p::init(const ZZ& p)$/;"	f	class:ZZ_p
init	deplib/ntl-main/src/ZZ_pE.cpp	/^void ZZ_pE::init(const ZZ_pX& p)$/;"	f	class:ZZ_pE
init	deplib/ntl-main/src/lzz_p.cpp	/^void zz_p::init(long p, long maxroot)$/;"	f	class:zz_p
init	deplib/ntl-main/src/lzz_pE.cpp	/^void zz_pE::init(const zz_pX& p)$/;"	f	class:zz_pE
init_red_fudge	deplib/ntl-main/src/G_LLL_FP.cpp	/^static void init_red_fudge()$/;"	f	file:
init_red_fudge	deplib/ntl-main/src/G_LLL_QP.cpp	/^static void init_red_fudge()$/;"	f	file:
init_red_fudge	deplib/ntl-main/src/G_LLL_RR.cpp	/^static void init_red_fudge()$/;"	f	file:
init_red_fudge	deplib/ntl-main/src/G_LLL_XD.cpp	/^static void init_red_fudge()$/;"	f	file:
init_red_fudge	deplib/ntl-main/src/LLL_FP.cpp	/^static void init_red_fudge()$/;"	f	file:
init_red_fudge	deplib/ntl-main/src/LLL_QP.cpp	/^static void init_red_fudge()$/;"	f	file:
init_red_fudge	deplib/ntl-main/src/LLL_RR.cpp	/^static void init_red_fudge()$/;"	f	file:
init_red_fudge	deplib/ntl-main/src/LLL_XD.cpp	/^static void init_red_fudge()$/;"	f	file:
init_scratch	deplib/ntl-main/src/ZZX1.cpp	/^void NewFastCRTHelper::init_scratch(NewFastCRTHelperScratch& scratch) const$/;"	f	class:NewFastCRTHelper
initialized	deplib/ntl-main/include/NTL/Lazy.h	/^   mutable AtomicBool initialized; $/;"	m	class:Lazy
initialized	deplib/ntl-main/include/NTL/ZZ_pE.h	/^static long initialized() { return (ZZ_pEInfo != 0); }$/;"	f	class:ZZ_pE
initialized	deplib/ntl-main/include/NTL/lzz_pE.h	/^static long initialized() { return (zz_pEInfo != 0); }$/;"	f	class:zz_pE
initialized	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^   bool initialized() const $/;"	f	struct:mat_ZZ_p_opaque
inplace_rev	deplib/ntl-main/src/ZZXFactoring.cpp	/^void inplace_rev(ZZX& f)$/;"	f	file:
insert	deplib/ntl-main/include/NTL/ZZ.h	/^   void insert(long i, const ZZ& m)$/;"	f	class:ZZ_CRTStructAdapter
insert	deplib/ntl-main/src/lip.cpp	/^void _ntl_crt_struct_basic::insert(long i, _ntl_gbigint m)$/;"	f	class:_ntl_crt_struct_basic
insert	deplib/ntl-main/src/lip.cpp	/^void _ntl_crt_struct_fast::insert(long i, _ntl_gbigint m)$/;"	f	class:_ntl_crt_struct_fast
insert	deplib/ntl-main/src/lip.cpp	/^void _ntl_crt_struct_tbl::insert(long i, _ntl_gbigint m)$/;"	f	class:_ntl_crt_struct_tbl
install	deplib/ntl-main/include/NTL/ZZ_p.h	/^static void install()$/;"	f	class:ZZ_p
interpolate	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX interpolate(const vec_GF2E& a, const vec_GF2E& b)$/;"	f
interpolate	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX interpolate(const vec_ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
interpolate	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX interpolate(const vec_ZZ_p& a, const vec_ZZ_p& b)$/;"	f
interpolate	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX interpolate(const vec_zz_pE& a, const vec_zz_pE& b)$/;"	f
interpolate	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX interpolate(const vec_zz_p& a, const vec_zz_p& b)$/;"	f
interpolate	deplib/ntl-main/src/GF2EX.cpp	/^void interpolate(GF2EX& f, const vec_GF2E& a, const vec_GF2E& b)$/;"	f
interpolate	deplib/ntl-main/src/ZZ_pEX.cpp	/^void interpolate(ZZ_pEX& f, const vec_ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
interpolate	deplib/ntl-main/src/ZZ_pX1.cpp	/^void interpolate(ZZ_pX& f, const vec_ZZ_p& a, const vec_ZZ_p& b)$/;"	f
interpolate	deplib/ntl-main/src/lzz_pEX.cpp	/^void interpolate(zz_pEX& f, const vec_zz_pE& a, const vec_zz_pE& b)$/;"	f
interpolate	deplib/ntl-main/src/lzz_pX1.cpp	/^void interpolate(zz_pX& f, const vec_zz_p& a, const vec_zz_p& b)$/;"	f
interval	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   void interval(long& first, long& last, long i) const$/;"	f	struct:PartitionInfo
intervalsz	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   long intervalsz;  \/\/ interval size$/;"	m	struct:PartitionInfo
inv	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 inv(GF2 a)$/;"	f
inv	deplib/ntl-main/include/NTL/GF2.h	/^inline void inv(GF2& x, GF2 a)$/;"	f
inv	deplib/ntl-main/include/NTL/GF2.h	/^inline void inv(ref_GF2 x, GF2 a)$/;"	f
inv	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E inv(const GF2E& a)$/;"	f
inv	deplib/ntl-main/include/NTL/RR.h	/^inline RR inv(const RR& a)$/;"	f
inv	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p inv(const ZZ_p& a)$/;"	f
inv	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE inv(const ZZ_pE& a)$/;"	f
inv	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void inv(zz_p& x, zz_p a)$/;"	f
inv	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p inv(zz_p a)$/;"	f
inv	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE inv(const zz_pE& a)$/;"	f
inv	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 inv(const mat_GF2& A)$/;"	f
inv	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E inv(const mat_GF2E& A)$/;"	f
inv	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR inv(const mat_RR& A)$/;"	f
inv	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ inv(const mat_ZZ& A)$/;"	f
inv	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p inv(const mat_ZZ_p& A)$/;"	f
inv	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE inv(const mat_ZZ_pE& A)$/;"	f
inv	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p inv(const mat_zz_p& A)$/;"	f
inv	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void inv(mat_zz_p& X, const mat_zz_p& A)$/;"	f
inv	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void inv(zz_p& d, mat_zz_p& X, const mat_zz_p& A)$/;"	f
inv	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE inv(const mat_zz_pE& A)$/;"	f
inv	deplib/ntl-main/include/NTL/sp_arith.h	/^   unsigned long inv;$/;"	m	struct:sp_inverse
inv	deplib/ntl-main/include/NTL/sp_arith.h	/^   unsigned long inv;$/;"	m	struct:sp_ll_reduce_struct
inv	deplib/ntl-main/src/GF2E.cpp	/^void inv(GF2E& x, const GF2E& a)$/;"	f
inv	deplib/ntl-main/src/RR.cpp	/^void inv(RR& z, const RR& a)$/;"	f
inv	deplib/ntl-main/src/ZZ_p.cpp	/^void inv(ZZ_p& x, const ZZ_p& a)$/;"	f
inv	deplib/ntl-main/src/ZZ_pE.cpp	/^void inv(ZZ_pE& x, const ZZ_pE& a)$/;"	f
inv	deplib/ntl-main/src/lip.cpp	/^   _ntl_limb_t inv;$/;"	m	class:_ntl_reduce_struct_montgomery	file:
inv	deplib/ntl-main/src/lzz_pE.cpp	/^void inv(zz_pE& x, const zz_pE& a)$/;"	f
inv	deplib/ntl-main/src/mat_GF2.cpp	/^void inv(mat_GF2& X, const mat_GF2& A)$/;"	f
inv	deplib/ntl-main/src/mat_GF2.cpp	/^void inv(ref_GF2 d, mat_GF2& X, const mat_GF2& A)$/;"	f
inv	deplib/ntl-main/src/mat_GF2E.cpp	/^void inv(GF2E& d, Mat<GF2E>& X, const Mat<GF2E>& A)$/;"	f
inv	deplib/ntl-main/src/mat_GF2E.cpp	/^void inv(mat_GF2E& X, const mat_GF2E& A)$/;"	f
inv	deplib/ntl-main/src/mat_RR.cpp	/^void inv(RR& d, mat_RR& X, const mat_RR& A)$/;"	f
inv	deplib/ntl-main/src/mat_RR.cpp	/^void inv(mat_RR& X, const mat_RR& A)$/;"	f
inv	deplib/ntl-main/src/mat_ZZ.cpp	/^void inv(ZZ& d_out, mat_ZZ& x_out, const mat_ZZ& A, long deterministic)$/;"	f
inv	deplib/ntl-main/src/mat_ZZ.cpp	/^void inv(mat_ZZ& X, const mat_ZZ& A)$/;"	f
inv	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void inv(ZZ_p& d, mat_ZZ_p& X, const mat_ZZ_p& A)$/;"	f
inv	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void inv(mat_ZZ_p& X, const mat_ZZ_p& A)$/;"	f
inv	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void inv(ZZ_pE& d, Mat<ZZ_pE>& X, const Mat<ZZ_pE>& A)$/;"	f
inv	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void inv(mat_ZZ_pE& X, const mat_ZZ_pE& A)$/;"	f
inv	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void inv(mat_zz_pE& X, const mat_zz_pE& A)$/;"	f
inv	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void inv(zz_pE& d, Mat<zz_pE>& X, const Mat<zz_pE>& A)$/;"	f
inv_butterfly	deplib/ntl-main/src/FFT.cpp	1743;"	d	file:
inv_butterfly	deplib/ntl-main/src/pd_FFT.cpp	711;"	d	file:
inv_butterfly0	deplib/ntl-main/src/FFT.cpp	1723;"	d	file:
inv_butterfly1_neg	deplib/ntl-main/src/FFT.cpp	1753;"	d	file:
inv_butterfly_half	deplib/ntl-main/src/pd_FFT.cpp	700;"	d	file:
inv_butterfly_neg	deplib/ntl-main/src/FFT.cpp	1733;"	d	file:
inv_butterfly_x4	deplib/ntl-main/src/pd_FFT.cpp	721;"	d	file:
inv_primes	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_limb_t> inv_primes;$/;"	m	class:_ntl_rem_struct_tbl	file:
inv_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_limb_t> inv_vec;$/;"	m	class:_ntl_rem_struct_medium	file:
inv_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> inv_vec;$/;"	m	class:_ntl_crt_struct_fast	file:
invtab	deplib/ntl-main/src/GF2X1.cpp	/^static const _ntl_ulong invtab[128] = {$/;"	v	file:
iodigits	deplib/ntl-main/src/ZZ.cpp	/^static NTL_CHEAP_THREAD_LOCAL long iodigits = 0;$/;"	v	file:
ioradix	deplib/ntl-main/src/ZZ.cpp	/^static NTL_CHEAP_THREAD_LOCAL long ioradix = 0;$/;"	v	file:
iterator	deplib/ntl-main/include/NTL/vec_GF2.h	/^   typedef proxy_iterator iterator;$/;"	t	class:Vec
iterator	deplib/ntl-main/include/NTL/vector.h	/^   typedef value_type *iterator;$/;"	t	class:Vec
iv	deplib/ntl-main/src/ZZ.cpp	/^   unsigned char iv[16];$/;"	m	struct:RandomStream_impl	file:
ivec_t	deplib/ntl-main/src/ZZ.cpp	/^typedef __m128i ivec_t;$/;"	t	file:
ivec_t	deplib/ntl-main/src/ZZ.cpp	/^typedef __m256i ivec_t;$/;"	t	file:
join	deplib/ntl-main/include/NTL/PD.h	/^join(PD<2> a, PD<2> b)$/;"	f
join	deplib/ntl-main/include/NTL/PD.h	/^join(PD<4> a, PD<4> b)$/;"	f
k	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long k;                \/\/ a 2^k point representation$/;"	m	class:FFTRep
k	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long k;     \/\/ least k s\/t 2^k >= n$/;"	m	class:ZZ_pXModulus
k	deplib/ntl-main/include/NTL/lzz_pX.h	/^   long k;                \/\/ a 2^k point representation$/;"	m	class:fftRep
k	deplib/ntl-main/include/NTL/lzz_pX.h	/^   long k;     \/\/ least k s\/t 2^k >= n$/;"	m	class:zz_pXModulus
k1	deplib/ntl-main/include/NTL/GF2X.h	/^   long k1;$/;"	m	class:GF2XModulus
k2	deplib/ntl-main/include/NTL/GF2X.h	/^   long k2; $/;"	m	class:GF2XModulus
k3	deplib/ntl-main/include/NTL/GF2X.h	/^   long k3; \/\/ used for trinomials and pentanomials$/;"	m	class:GF2XModulus
kar_add	deplib/ntl-main/src/lip.cpp	/^void kar_add(_ntl_limb_t *c, const _ntl_limb_t *T, long sT, long hsa)$/;"	f	file:
kar_fix	deplib/ntl-main/src/lip.cpp	/^void kar_fix(_ntl_limb_t *c, const _ntl_limb_t *T, long sT, long hsa)$/;"	f	file:
kar_fold	deplib/ntl-main/src/lip.cpp	/^long kar_fold(_ntl_limb_t *T, const _ntl_limb_t *b, long sb, long hsa)$/;"	f	file:
kar_mul	deplib/ntl-main/src/lip.cpp	/^void kar_mul(_ntl_limb_t *c, const _ntl_limb_t *a, long sa, $/;"	f	file:
kar_sq	deplib/ntl-main/src/lip.cpp	/^void kar_sq(_ntl_limb_t *c, const _ntl_limb_t *a, long sa) $/;"	f	file:
kar_sq	deplib/ntl-main/src/lip.cpp	/^void kar_sq(_ntl_limb_t *c, const _ntl_limb_t *a, long sa, $/;"	f	file:
kar_sub	deplib/ntl-main/src/lip.cpp	/^void kar_sub(_ntl_limb_t *T, const _ntl_limb_t *c, long sc)$/;"	f	file:
kernel	deplib/ntl-main/src/mat_GF2.cpp	/^void kernel(mat_GF2& X, const mat_GF2& A)$/;"	f
kernel	deplib/ntl-main/src/mat_GF2E.cpp	/^void kernel(Mat<GF2E>& X, const Mat<GF2E>& A)$/;"	f
kernel	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void kernel(mat_ZZ_p& X, const mat_ZZ_p& A)$/;"	f
kernel	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void kernel(Mat<ZZ_pE>& X, const Mat<ZZ_pE>& A)$/;"	f
kernel	deplib/ntl-main/src/mat_lzz_p.cpp	/^void kernel(mat_zz_p& X, const mat_zz_p& A)$/;"	f
kernel	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void kernel(Mat<zz_pE>& X, const Mat<zz_pE>& A)$/;"	f
key	deplib/ntl-main/include/NTL/tools.h	/^   pthread_key_t key;$/;"	m	struct:details_pthread::key_wrapper
key	deplib/ntl-main/src/CheckThreads.cpp	/^   pthread_key_t key;$/;"	m	struct:details_pthread::key_wrapper	file:
key	deplib/ntl-main/src/ZZ.cpp	/^   unsigned char key[32];$/;"	m	struct:RandomStream_impl	file:
key_wrapper	deplib/ntl-main/include/NTL/tools.h	/^   key_wrapper(void (*destructor)(void*))$/;"	f	struct:details_pthread::key_wrapper
key_wrapper	deplib/ntl-main/include/NTL/tools.h	/^struct key_wrapper {$/;"	s	namespace:details_pthread
key_wrapper	deplib/ntl-main/src/CheckThreads.cpp	/^   key_wrapper(void (*destructor)(void*))$/;"	f	struct:details_pthread::key_wrapper
key_wrapper	deplib/ntl-main/src/CheckThreads.cpp	/^struct key_wrapper {$/;"	s	namespace:details_pthread	file:
kill	deplib/ntl-main/include/NTL/GF2EX.h	/^void kill() $/;"	f	class:GF2EX
kill	deplib/ntl-main/include/NTL/GF2X.h	/^void kill() { xrep.kill(); }$/;"	f	class:GF2X
kill	deplib/ntl-main/include/NTL/Lazy.h	/^   void kill() $/;"	f	class:Lazy
kill	deplib/ntl-main/include/NTL/ZZ.h	/^void kill()$/;"	f	class:ZZ
kill	deplib/ntl-main/include/NTL/ZZX.h	/^void kill() $/;"	f	class:ZZX
kill	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^void kill() $/;"	f	class:ZZ_pEX
kill	deplib/ntl-main/include/NTL/ZZ_pX.h	/^void kill() $/;"	f	class:ZZ_pX
kill	deplib/ntl-main/include/NTL/lzz_pEX.h	/^void kill() $/;"	f	class:zz_pEX
kill	deplib/ntl-main/include/NTL/lzz_pX.h	/^void kill() $/;"	f	class:zz_pX
kill	deplib/ntl-main/include/NTL/matrix.h	/^void Mat<T>::kill()  $/;"	f	class:Mat
kill	deplib/ntl-main/include/NTL/tools.h	/^   void kill() { if (rep) { Deleter::apply(rep); rep = 0; } }$/;"	f	class:WrappedPtr
kill	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::kill()  $/;"	f	class:Vec
kill	deplib/ntl-main/src/GF2XVec.cpp	/^void GF2XVec::kill()$/;"	f	class:GF2XVec
kill	deplib/ntl-main/src/WordVector.cpp	/^void WordVector::kill()  $/;"	f	class:WordVector
kill	deplib/ntl-main/src/ZZVec.cpp	/^void ZZVec::kill()$/;"	f	class:ZZVec
kill	deplib/ntl-main/src/vec_GF2.cpp	/^void vec_GF2::kill()$/;"	f	class:vec_GF2
l	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long l;     \/\/ least l s\/t 2^l >= 2n-3$/;"	m	class:ZZ_pXModulus
l	deplib/ntl-main/include/NTL/lzz_pX.h	/^   long l;     \/\/ least l s\/t 2^l >= 2n-3$/;"	m	class:zz_pXModulus
launch	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  void launch(ConcurrentTask *task, long index)$/;"	f	class:BasicThreadPool
lck	deplib/ntl-main/include/NTL/thread.h	/^   NTL_SNS unique_lock<NTL_SNS mutex> lck;$/;"	m	class:GuardProxy
ldexp	deplib/ntl-main/src/quad_float1.cpp	/^quad_float ldexp(const quad_float& x, long exp) { \/\/ x*2^exp$/;"	f
len	deplib/ntl-main/include/NTL/GF2XVec.h	/^   long len;$/;"	m	class:GF2XVec
len	deplib/ntl-main/include/NTL/LazyTable.h	/^   mutable AtomicLong len; $/;"	m	class:LazyTable
len	deplib/ntl-main/include/NTL/SmartPtr.h	/^   long len;$/;"	m	class:Unique2DArray
len	deplib/ntl-main/include/NTL/ZZVec.h	/^   long len;$/;"	m	class:ZZVec
len	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long len;              \/\/ length of truncated FFT$/;"	m	class:FFTRep
len	deplib/ntl-main/include/NTL/lzz_pX.h	/^   long len;              \/\/ length of truncated FFT$/;"	m	class:fftRep
len_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> len_vec;$/;"	m	class:_ntl_rem_struct_medium	file:
length	deplib/ntl-main/include/NTL/GF2XVec.h	/^   long length() const { return len; }$/;"	f	class:GF2XVec
length	deplib/ntl-main/include/NTL/LazyTable.h	/^   long length() const { return len; }$/;"	f	class:LazyTable
length	deplib/ntl-main/include/NTL/WordVector.h	/^   long length() const { return (!rep) ?  0 : long(rep[-1]); }  $/;"	f	class:WordVector
length	deplib/ntl-main/include/NTL/ZZVec.h	/^   long length() const { return len; }$/;"	f	class:ZZVec
length	deplib/ntl-main/include/NTL/vec_GF2.h	/^   long length() const { return _len; }$/;"	f	class:Vec
length	deplib/ntl-main/include/NTL/vector.h	/^   long length() const $/;"	f	class:Vec
length	deplib/ntl-main/include/NTL/vector.h	/^   long length;$/;"	m	struct:_ntl_VectorHeader
levels	deplib/ntl-main/src/lip.cpp	/^   long levels;$/;"	m	class:_ntl_crt_struct_fast	file:
levels	deplib/ntl-main/src/lip.cpp	/^   long levels;$/;"	m	class:_ntl_rem_struct_fast	file:
levels	deplib/ntl-main/src/lip.cpp	/^   long levels;$/;"	m	class:_ntl_rem_struct_medium	file:
link	deplib/ntl-main/include/NTL/FacVec.h	/^   long link;$/;"	m	struct:IntFactor
ll_G_LLL_FP	deplib/ntl-main/src/G_LLL_FP.cpp	/^long ll_G_LLL_FP(mat_ZZ& B, mat_ZZ* U, double delta, long deep, $/;"	f	file:
ll_G_LLL_QP	deplib/ntl-main/src/G_LLL_QP.cpp	/^long ll_G_LLL_QP(mat_ZZ& B, mat_ZZ* U, quad_float delta, long deep, $/;"	f	file:
ll_G_LLL_RR	deplib/ntl-main/src/G_LLL_RR.cpp	/^long ll_G_LLL_RR(mat_ZZ& B, mat_ZZ* U, const RR& delta, long deep, $/;"	f	file:
ll_G_LLL_XD	deplib/ntl-main/src/G_LLL_XD.cpp	/^long ll_G_LLL_XD(mat_ZZ& B, mat_ZZ* U, xdouble delta, long deep, $/;"	f	file:
ll_LLL_FP	deplib/ntl-main/src/LLL_FP.cpp	/^long ll_LLL_FP(mat_ZZ& B, mat_ZZ* U, double delta, long deep, $/;"	f	file:
ll_LLL_QP	deplib/ntl-main/src/LLL_QP.cpp	/^long ll_LLL_QP(mat_ZZ& B, mat_ZZ* U, quad_float delta, long deep, $/;"	f	file:
ll_LLL_RR	deplib/ntl-main/src/LLL_RR.cpp	/^long ll_LLL_RR(mat_ZZ& B, mat_ZZ* U, const RR& delta, long deep, $/;"	f	file:
ll_LLL_XD	deplib/ntl-main/src/LLL_XD.cpp	/^long ll_LLL_XD(mat_ZZ& B, mat_ZZ* U, xdouble delta, long deep, $/;"	f	file:
ll_SFFactor	deplib/ntl-main/src/ZZXFactoring.cpp	/^void ll_SFFactor(vec_ZZX& factors, const ZZX& ff, $/;"	f	file:
ll_add	deplib/ntl-main/include/NTL/tools.h	/^ll_add(ll_type& x, const ll_type& a)$/;"	f
ll_add	deplib/ntl-main/include/NTL/tools.h	/^ll_add(ll_type& x, unsigned long a)$/;"	f
ll_get_hi	deplib/ntl-main/include/NTL/tools.h	/^ll_get_hi(const ll_type& x)$/;"	f
ll_get_lo	deplib/ntl-main/include/NTL/tools.h	/^ll_get_lo(const ll_type& x)$/;"	f
ll_imul	deplib/ntl-main/include/NTL/tools.h	/^ll_imul(ll_type& x, unsigned long a, unsigned long b)$/;"	f
ll_imul_add	deplib/ntl-main/include/NTL/tools.h	/^ll_imul_add(ll_type& x, unsigned long a, unsigned long b)$/;"	f
ll_init	deplib/ntl-main/include/NTL/tools.h	/^ll_init(ll_type& x, unsigned long a)$/;"	f
ll_mul	deplib/ntl-main/include/NTL/tools.h	/^ll_mul(ll_type& x, unsigned long a, unsigned long b)$/;"	f
ll_mul_add	deplib/ntl-main/include/NTL/tools.h	/^ll_mul_add(ll_type& x, unsigned long a, unsigned long b)$/;"	f
ll_mul_hi	deplib/ntl-main/include/NTL/tools.h	/^ll_mul_hi(unsigned long a, unsigned long b)$/;"	f
ll_red_struct	deplib/ntl-main/include/NTL/lzz_p.h	/^   sp_ll_reduce_struct ll_red_struct;$/;"	m	class:zz_pInfoT
ll_red_struct	deplib/ntl-main/include/NTL/lzz_p.h	/^static sp_ll_reduce_struct ll_red_struct() { return zz_pInfo->ll_red_struct; }$/;"	f	class:zz_p
ll_rshift_get_lo	deplib/ntl-main/include/NTL/tools.h	/^ll_rshift_get_lo(ll_type x)$/;"	f
ll_type	deplib/ntl-main/include/NTL/tools.h	/^struct ll_type {$/;"	s
lo	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   long lo, hi; \/\/ range of indices is [lo..hi)$/;"	m	struct:RecursiveThreadPool
lo	deplib/ntl-main/include/NTL/quad_float.h	/^  double hi, lo;$/;"	m	class:quad_float
lo	deplib/ntl-main/include/NTL/tools.h	/^   unsigned long hi, lo;$/;"	m	struct:ll_type
load	deplib/ntl-main/include/NTL/PD.h	/^   static PD load(const double *p) { return _mm256_load_pd(p); } $/;"	f	struct:PD
load	deplib/ntl-main/include/NTL/PD.h	/^   static PD load(const double *p) { return _mm512_load_pd(p); } $/;"	f	struct:PD
load	deplib/ntl-main/include/NTL/PD.h	/^   static PD load(const double *p) { return _mm_load_pd(p); } $/;"	f	struct:PD
load	deplib/ntl-main/include/NTL/PD.h	/^load(PD<2>& x, const double *p) $/;"	f
load	deplib/ntl-main/include/NTL/PD.h	/^load(PD<2>& x, const long *p)$/;"	f
load	deplib/ntl-main/include/NTL/PD.h	/^load(PD<4>& x, const double *p) $/;"	f
load	deplib/ntl-main/include/NTL/PD.h	/^load(PD<4>& x, const long *p)$/;"	f
load	deplib/ntl-main/include/NTL/PD.h	/^load(PD<8>& x, const double *p) $/;"	f
load	deplib/ntl-main/include/NTL/PD.h	/^load(PD<8>& x, const long *p)$/;"	f
loadu	deplib/ntl-main/include/NTL/PD.h	/^   static PD loadu(const double *p) { return _mm256_loadu_pd(p); } $/;"	f	struct:PD
loadu	deplib/ntl-main/include/NTL/PD.h	/^   static PD loadu(const double *p) { return _mm512_loadu_pd(p); } $/;"	f	struct:PD
loadu	deplib/ntl-main/include/NTL/PD.h	/^   static PD loadu(const double *p) { return _mm_loadu_pd(p); } $/;"	f	struct:PD
loadu	deplib/ntl-main/include/NTL/PD.h	/^loadu(PD<2>& x, const double *p) $/;"	f
loadu	deplib/ntl-main/include/NTL/PD.h	/^loadu(PD<2>& x, const long *p)$/;"	f
loadu	deplib/ntl-main/include/NTL/PD.h	/^loadu(PD<4>& x, const double *p) $/;"	f
loadu	deplib/ntl-main/include/NTL/PD.h	/^loadu(PD<4>& x, const long *p)$/;"	f
loadu	deplib/ntl-main/include/NTL/PD.h	/^loadu(PD<8>& x, const double *p) $/;"	f
loadu	deplib/ntl-main/include/NTL/PD.h	/^loadu(PD<8>& x, const long *p)$/;"	f
localSignal	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^      CompositeSignal< ConcurrentTask *, long > localSignal;$/;"	m	struct:BasicThreadPool::AutomaticThread
lock	deplib/ntl-main/include/NTL/thread.h	/^   void lock() { lck.lock(); }$/;"	f	class:GuardProxy
log	deplib/ntl-main/include/NTL/RR.h	/^inline RR log(const RR& a)$/;"	f
log	deplib/ntl-main/include/NTL/ZZ.h	/^inline double log(const ZZ& a)$/;"	f
log	deplib/ntl-main/src/RR.cpp	/^void log(RR& res, const RR& x)$/;"	f
log	deplib/ntl-main/src/quad_float1.cpp	/^quad_float log(const quad_float& t) { \/\/ Newton method. See Bailey, MPFUN$/;"	f
log	deplib/ntl-main/src/xdouble.cpp	/^double log(const xdouble& a)$/;"	f
log10	deplib/ntl-main/include/NTL/RR.h	/^inline RR log10(const RR& a)$/;"	f
log10	deplib/ntl-main/src/RR.cpp	/^void log10(RR& res, const RR& x)$/;"	f
log1p	deplib/ntl-main/include/NTL/RR.h	/^inline RR log1p(const RR& a)$/;"	f
log1p	deplib/ntl-main/src/RR.cpp	/^void log1p(RR& res, const RR& x)$/;"	f
log_red	deplib/ntl-main/src/G_LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL long log_red = 0;$/;"	v	file:
log_red	deplib/ntl-main/src/G_LLL_QP.cpp	/^static NTL_CHEAP_THREAD_LOCAL long log_red = 0;$/;"	v	file:
log_red	deplib/ntl-main/src/G_LLL_RR.cpp	/^static NTL_CHEAP_THREAD_LOCAL long log_red = 0;$/;"	v	file:
log_red	deplib/ntl-main/src/G_LLL_XD.cpp	/^static NTL_CHEAP_THREAD_LOCAL long log_red = 0;$/;"	v	file:
log_red	deplib/ntl-main/src/LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL long log_red = 0;$/;"	v	file:
log_red	deplib/ntl-main/src/LLL_QP.cpp	/^static NTL_CHEAP_THREAD_LOCAL long log_red = 0;$/;"	v	file:
log_red	deplib/ntl-main/src/LLL_RR.cpp	/^static NTL_CHEAP_THREAD_LOCAL long log_red = 0;$/;"	v	file:
log_red	deplib/ntl-main/src/LLL_XD.cpp	/^static NTL_CHEAP_THREAD_LOCAL long log_red = 0;$/;"	v	file:
long_MixedMul1	deplib/ntl-main/src/mat_ZZ.cpp	/^void long_MixedMul1(vec_ZZ& x, long *a, long **B, long n)$/;"	f	file:
long_MixedMul2	deplib/ntl-main/src/mat_ZZ.cpp	/^void long_MixedMul2(vec_ZZ& x, long *a, long **B, long n, long limit)$/;"	f	file:
lookup_tab_t	deplib/ntl-main/src/ZZXFactoring.cpp	/^typedef Vec< Vec< Vec< TBL_T > > > lookup_tab_t;$/;"	t	file:
lowsieve_storage	deplib/ntl-main/src/ZZ.cpp	/^static Lazy< Vec<char> > lowsieve_storage;$/;"	v	file:
m	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     std::mutex m;$/;"	m	class:BasicThreadPool::CompositeSignal
m	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     std::mutex m;$/;"	m	class:BasicThreadPool::SimpleSignal
m	deplib/ntl-main/include/NTL/matrix.h	/^      long m;$/;"	m	struct:Mat::Fixer
m	deplib/ntl-main/src/lip.cpp	/^   long m;$/;"	m	class:_ntl_reduce_struct_montgomery	file:
main	aes_whitebox_compiler.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	deplib/ntl-main/src/BerlekampTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/BitMatTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CanZassTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CharPolyTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckAES_NI.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckALIGNED_ARRAY.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckAVX.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckAVX2.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckAVX512F.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckBUILTIN_CLZL.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckCHRONO_TIME.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckCompile.cpp	/^int main() { return 0; }$/;"	f
main	deplib/ntl-main/src/CheckContract.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckFMA.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckKMA.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckLL_TYPE.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckMACOS_TIME.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckPCLMUL.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckPOSIX_TIME.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckSSSE3.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/CheckThreads.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/DispSettings.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/ExceptionTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/GF2EXDivCross.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/GF2EXGCDCross.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/GF2EXGCDTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/GF2EXKarCross.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/GF2EXModCross.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/GF2EXTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/GF2XTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/GF2XTimeTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/GenConfigInfo.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/InitSettings.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/LLLTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/MakeDesc.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/MatrixTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/MoreFacTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/Poly1TimeTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/Poly2TimeTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/Poly3TimeTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/QuadTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/QuickTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/RRTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/SSMulTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/TestGetPID.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/TestGetTime.cpp	/^int main(int argc, char **argv)$/;"	f
main	deplib/ntl-main/src/ThreadTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/Timing.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/ZZTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/ZZXFacTest.cpp	/^int main(int argc, char **argv)$/;"	f
main	deplib/ntl-main/src/ZZ_pEXGCDTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/ZZ_pEXTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/ZZ_pXTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/gen_gmp_aux.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/gf2x_version_1_2_or_later_required.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/libtool-origin/config.guess	/^		main()$/;"	f
main	deplib/ntl-main/src/libtool-origin/config.guess	/^	main ()$/;"	f
main	deplib/ntl-main/src/libtool-origin/config.guess	/^main ()$/;"	f
main	deplib/ntl-main/src/lzz_pEXGCDTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/lzz_pEXTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/lzz_pXTest.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/mat_lzz_pTest.cpp	/^int main(int argc, char **argv)$/;"	f
main	deplib/ntl-main/src/newnames.cpp	/^int main()$/;"	f
main	deplib/ntl-main/src/subset.cpp	/^int main()$/;"	f
make	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void make() { dp.make(); }$/;"	f	class:OptionalVal
make	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void make()$/;"	f	class:CopiedPtr
make	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void make()$/;"	f	class:UniquePtr
make	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void make(Args&&... args) $/;"	f	class:CopiedPtr
make	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void make(Args&&... args) $/;"	f	class:OptionalVal
make	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void make(Args&&... args) $/;"	f	class:UniquePtr
make_GF2	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const GF2  make_GF2() const$/;"	f	struct:Vec::proxy_iterator_impl
make_ref_GF2	deplib/ntl-main/include/NTL/vec_GF2.h	/^      ref_GF2 make_ref_GF2() const$/;"	f	struct:Vec::proxy_iterator_impl
make_sp_ll_reduce_struct	deplib/ntl-main/include/NTL/sp_arith.h	/^make_sp_ll_reduce_struct(long n)$/;"	f
make_string	deplib/ntl-main/src/DispSettings.cpp	9;"	d	file:
make_string	deplib/ntl-main/src/InitSettings.cpp	7;"	d	file:
make_string	deplib/ntl-main/src/QuickTest.cpp	13;"	d	file:
make_string_aux	deplib/ntl-main/src/DispSettings.cpp	8;"	d	file:
make_string_aux	deplib/ntl-main/src/InitSettings.cpp	6;"	d	file:
make_string_aux	deplib/ntl-main/src/QuickTest.cpp	12;"	d	file:
mantissa	deplib/ntl-main/include/NTL/RR.h	/^const ZZ& mantissa() const { return x; }$/;"	f	class:RR
mantissa	deplib/ntl-main/include/NTL/xdouble.h	/^double mantissa() const { return x; }$/;"	f	class:xdouble
mask	deplib/ntl-main/include/NTL/ZZ.h	/^   unsigned long mask;$/;"	m	struct:RandomBndGenerator
mat	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   mat_ZZ_p_opaque mat;$/;"	m	struct:ZZ_pXNewArgument
mat	deplib/ntl-main/include/NTL/lzz_pX.h	/^   Mat<zz_p> mat;$/;"	m	struct:zz_pXNewArgument
mat_GF2	deplib/ntl-main/include/NTL/mat_GF2.h	/^typedef Mat<GF2> mat_GF2;$/;"	t
mat_GF2E	deplib/ntl-main/include/NTL/mat_GF2E.h	/^typedef Mat<GF2E> mat_GF2E;$/;"	t
mat_RR	deplib/ntl-main/include/NTL/mat_RR.h	/^typedef Mat<RR> mat_RR;$/;"	t
mat_ZZ	deplib/ntl-main/include/NTL/mat_ZZ.h	/^typedef Mat<ZZ> mat_ZZ;$/;"	t
mat_ZZ_p	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^typedef Mat<ZZ_p> mat_ZZ_p;$/;"	t
mat_ZZ_pE	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^typedef Mat<ZZ_pE> mat_ZZ_pE;$/;"	t
mat_ZZ_p_crt_rep	deplib/ntl-main/src/mat_ZZ_p.cpp	/^struct mat_ZZ_p_crt_rep {$/;"	s	file:
mat_ZZ_p_opaque	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^struct mat_ZZ_p_opaque {$/;"	s
mat_ZZ_p_opaque_body	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^struct mat_ZZ_p_opaque_body {$/;"	s
mat_ZZ_p_opaque_body_crt	deplib/ntl-main/src/mat_ZZ_p.cpp	/^struct mat_ZZ_p_opaque_body_crt : mat_ZZ_p_opaque_body {$/;"	s	file:
mat_ZZ_p_opaque_body_move	deplib/ntl-main/src/mat_ZZ_p.cpp	/^mat_ZZ_p_opaque_body *mat_ZZ_p_opaque_body_move(mat_ZZ_p& A)$/;"	f
mat_ZZ_p_opaque_body_plain	deplib/ntl-main/src/mat_ZZ_p.cpp	/^struct mat_ZZ_p_opaque_body_plain : mat_ZZ_p_opaque_body {$/;"	s	file:
mat_window_zz_p	deplib/ntl-main/src/mat_lzz_p.cpp	/^   mat_window_zz_p(const mat_window_zz_p& w, long r1, long c1, long r2, long c2) :$/;"	f	struct:mat_window_zz_p
mat_window_zz_p	deplib/ntl-main/src/mat_lzz_p.cpp	/^   mat_window_zz_p(mat_zz_p& _A) : $/;"	f	struct:mat_window_zz_p
mat_window_zz_p	deplib/ntl-main/src/mat_lzz_p.cpp	/^struct mat_window_zz_p {$/;"	s	file:
mat_zz_p	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^typedef Mat<zz_p> mat_zz_p;$/;"	t
mat_zz_pE	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^typedef Mat<zz_pE> mat_zz_pE;$/;"	t
max	deplib/ntl-main/include/NTL/tools.h	/^inline int max(int a, int b) { return (a < b) ? b : a; }$/;"	f
max	deplib/ntl-main/include/NTL/tools.h	/^inline long max(int a, long b) { return (a < b) ? b : long(a); }$/;"	f
max	deplib/ntl-main/include/NTL/tools.h	/^inline long max(long a, int b) { return (a < b) ? long(b) : a; }$/;"	f
max	deplib/ntl-main/include/NTL/tools.h	/^inline long max(long a, long b) { return (a < b) ? b : a; }$/;"	f
max	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned int max(unsigned int a, unsigned int b) $/;"	f
max	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned long max(unsigned int a, unsigned long b) $/;"	f
max	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned long max(unsigned long a, unsigned int b) $/;"	f
max	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned long max(unsigned long a, unsigned long b) $/;"	f
max_abs	deplib/ntl-main/src/G_LLL_FP.cpp	/^static double max_abs(double *v, long n)$/;"	f	file:
max_abs	deplib/ntl-main/src/G_LLL_QP.cpp	/^static double max_abs(quad_float *v, long n)$/;"	f	file:
max_abs	deplib/ntl-main/src/LLL_FP.cpp	/^static double max_abs(double *v, long n)$/;"	f	file:
max_abs	deplib/ntl-main/src/LLL_QP.cpp	/^static double max_abs(quad_float *v, long n)$/;"	f	file:
method	deplib/ntl-main/include/NTL/GF2EX.h	/^   long method; \/\/ GF2EX_MOD_PLAIN or GF2EX_MOD_MUL $/;"	m	class:GF2EXModulus
method	deplib/ntl-main/include/NTL/GF2X.h	/^   long method; $/;"	m	class:GF2XModulus
method	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   long method;$/;"	m	class:ZZ_pEXModulus
method	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   long method;$/;"	m	class:zz_pEXModulus
mid	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   long mid;$/;"	m	struct:RecursiveThreadPoolHelper
min	deplib/ntl-main/include/NTL/tools.h	/^inline int min(int a, int b) { return (a < b) ?  a : b; } $/;"	f
min	deplib/ntl-main/include/NTL/tools.h	/^inline long min(int a, long b) { return (a < b) ?  long(a) : b; } $/;"	f
min	deplib/ntl-main/include/NTL/tools.h	/^inline long min(long a, int b) { return (a < b) ?  a : long(b); } $/;"	f
min	deplib/ntl-main/include/NTL/tools.h	/^inline long min(long a, long b) { return (a < b) ?  a : b; } $/;"	f
min	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned int min(unsigned int a, unsigned int b) $/;"	f
min	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned long min(unsigned int a, unsigned long b) $/;"	f
min	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned long min(unsigned long a, unsigned int b) $/;"	f
min	deplib/ntl-main/include/NTL/tools.h	/^inline unsigned long min(unsigned long a, unsigned long b) $/;"	f
mint_t	deplib/ntl-main/src/FFT.cpp	/^typedef long mint_t;$/;"	t	file:
mobius	deplib/ntl-main/src/ThreadTest.cpp	/^long mobius(long n)$/;"	f
modarith	deplib/ntl-main/doc/ZZ.cpp.html	/^<a name="modarith"><\/a>$/;"	a
modulus	deplib/ntl-main/include/NTL/GF2.h	/^static long modulus() { return 2; }$/;"	f	class:GF2
modulus	deplib/ntl-main/include/NTL/GF2E.h	/^static const GF2XModulus& modulus() { return GF2EInfo->p; }$/;"	f	class:GF2E
modulus	deplib/ntl-main/include/NTL/ZZ_p.h	/^static const ZZ& modulus() { return ZZ_pInfo->p; }$/;"	f	class:ZZ_p
modulus	deplib/ntl-main/include/NTL/ZZ_pE.h	/^static const ZZ_pXModulus& modulus() { return ZZ_pEInfo->p; }$/;"	f	class:ZZ_pE
modulus	deplib/ntl-main/include/NTL/lzz_p.h	/^long modulus() const { return ptr->p; }$/;"	f	class:zz_pContext
modulus	deplib/ntl-main/include/NTL/lzz_p.h	/^static long modulus() { return zz_pInfo->p; }$/;"	f	class:zz_p
modulus	deplib/ntl-main/include/NTL/lzz_pE.h	/^static const zz_pXModulus& modulus() { return zz_pEInfo->p; }$/;"	f	class:zz_pE
modulus	deplib/ntl-main/src/lip.cpp	/^   _ntl_gbigint_wrapped modulus;$/;"	m	class:_ntl_crt_struct_fast	file:
modulus_size	deplib/ntl-main/src/lip.cpp	/^   long modulus_size;$/;"	m	class:_ntl_rem_struct_fast	file:
modulus_type	deplib/ntl-main/include/NTL/GF2EX.h	/^typedef GF2EXModulus modulus_type;$/;"	t	class:GF2EX
modulus_type	deplib/ntl-main/include/NTL/GF2X.h	/^typedef GF2XModulus modulus_type;$/;"	t	class:GF2X
modulus_type	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^typedef ZZ_pEXModulus modulus_type;$/;"	t	class:ZZ_pEX
modulus_type	deplib/ntl-main/include/NTL/ZZ_pX.h	/^typedef ZZ_pXModulus modulus_type;$/;"	t	class:ZZ_pX
modulus_type	deplib/ntl-main/include/NTL/lzz_pEX.h	/^typedef zz_pEXModulus modulus_type;$/;"	t	class:zz_pEX
modulus_type	deplib/ntl-main/include/NTL/lzz_pX.h	/^typedef zz_pXModulus modulus_type;$/;"	t	class:zz_pX
montgomery_struct	deplib/ntl-main/include/NTL/MatPrime.h	/^   ZZ_ReduceStructAdapter montgomery_struct;$/;"	m	struct:MatPrime_crt_helper
move	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  void move(BasicThreadPool& other, long n = 1) $/;"	f	class:BasicThreadPool
move	deplib/ntl-main/include/NTL/GF2XVec.h	/^   void move(GF2XVec& other) $/;"	f	class:GF2XVec
move	deplib/ntl-main/include/NTL/Lazy.h	/^      void move(UniquePtr<T, P>& p) $/;"	f	class:Lazy::Builder
move	deplib/ntl-main/include/NTL/LazyTable.h	/^      void move(UniquePtr<T>& p)$/;"	f	class:LazyTable::Builder
move	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void move(AlignedArray& other) { reset(other.release()); }$/;"	f	class:AlignedArray
move	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void move(CopiedPtr& other) { reset(other.release()); }$/;"	f	class:CopiedPtr
move	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void move(OptionalVal& other) { dp.move(other.dp); }$/;"	f	class:OptionalVal
move	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void move(Unique2DArray& other) $/;"	f	class:Unique2DArray
move	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void move(UniqueArray& other) { reset(other.release()); }$/;"	f	class:UniqueArray
move	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void move(UniquePtr& other) { reset(other.release()); }$/;"	f	class:UniquePtr
move	deplib/ntl-main/include/NTL/ZZVec.h	/^   void move(ZZVec& other) $/;"	f	class:ZZVec
move	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^   void move(mat_ZZ_p& A)$/;"	f	struct:mat_ZZ_p_opaque
move	deplib/ntl-main/include/NTL/matrix.h	/^   void move(Mat& other) $/;"	f	class:Mat
move	deplib/ntl-main/include/NTL/tools.h	/^   void move(WrappedPtr& other) $/;"	f	class:WrappedPtr
move	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::move(Vec& y)  $/;"	f	class:Vec
move	deplib/ntl-main/src/vec_GF2.cpp	/^void vec_GF2::move(vec_GF2& y)  $/;"	f	class:vec_GF2
moved	deplib/ntl-main/include/NTL/Lazy.h	/^      bool moved;$/;"	m	class:Lazy::Builder
movesieve	deplib/ntl-main/include/NTL/ZZ.h	/^const char *movesieve;$/;"	m	class:PrimeSeq
movesieve_mem	deplib/ntl-main/include/NTL/ZZ.h	/^Vec<char> movesieve_mem;$/;"	m	class:PrimeSeq
msk	deplib/ntl-main/include/NTL/GF2X.h	/^   _ntl_ulong msk; \/\/ mask of high bits of residues$/;"	m	class:GF2XModulus
mtx	deplib/ntl-main/include/NTL/Lazy.h	/^   mutable MutexProxy mtx;$/;"	m	class:Lazy
mtx	deplib/ntl-main/include/NTL/LazyTable.h	/^   mutable MutexProxy mtx;$/;"	m	class:LazyTable
mtx	deplib/ntl-main/include/NTL/thread.h	/^   NTL_SNS mutex mtx;$/;"	m	class:MutexProxy
mul	aes_whitebox_compiler.cc	/^inline T mul(const NTL::mat_GF2& mat, T x) {$/;"	f	namespace:__anon4
mul	deplib/ntl-main/include/NTL/GF2.h	/^inline void mul(GF2& x, GF2 a, GF2 b)$/;"	f
mul	deplib/ntl-main/include/NTL/GF2.h	/^inline void mul(GF2& x, GF2 a, long b)$/;"	f
mul	deplib/ntl-main/include/NTL/GF2.h	/^inline void mul(GF2& x, long a, GF2 b)$/;"	f
mul	deplib/ntl-main/include/NTL/GF2.h	/^inline void mul(ref_GF2 x, GF2 a, GF2 b)$/;"	f
mul	deplib/ntl-main/include/NTL/GF2.h	/^inline void mul(ref_GF2 x, GF2 a, long b)$/;"	f
mul	deplib/ntl-main/include/NTL/GF2.h	/^inline void mul(ref_GF2 x, long a, GF2 b)$/;"	f
mul	deplib/ntl-main/include/NTL/GF2E.h	/^inline void mul(GF2E& x, GF2 a, const GF2E& b) { mul(x, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/GF2E.h	/^inline void mul(GF2E& x, const GF2E& a, GF2 b)$/;"	f
mul	deplib/ntl-main/include/NTL/GF2E.h	/^inline void mul(GF2E& x, const GF2E& a, const GF2E& b)$/;"	f
mul	deplib/ntl-main/include/NTL/GF2E.h	/^inline void mul(GF2E& x, const GF2E& a, long b)$/;"	f
mul	deplib/ntl-main/include/NTL/GF2E.h	/^inline void mul(GF2E& x, long a, const GF2E& b) { mul(x, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void mul(GF2EX& x, GF2 a, const GF2EX& b) { mul(x, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void mul(GF2EX& x, const GF2E& a, const GF2EX& b) { mul(x, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void mul(GF2EX& x, long a, const GF2EX& b) { mul(x, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/GF2EXFactoring.h	/^inline GF2EX mul(const vec_pair_GF2EX_long& v)$/;"	f
mul	deplib/ntl-main/include/NTL/GF2X.h	/^inline void mul(GF2X& x, GF2 a, const GF2X& b) { mul(x, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/GF2X.h	/^inline void mul(GF2X& x, long a, const GF2X& b) { mul(x, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/GF2XFactoring.h	/^inline GF2X mul(const vec_pair_GF2X_long& v)$/;"	f
mul	deplib/ntl-main/include/NTL/RR.h	/^inline void mul(RR& z, double a, const RR& b) { mul(z, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ.h	/^inline void mul(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ.h	/^inline void mul(ZZ& x, const ZZ& a, long b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ.h	/^inline void mul(ZZ& x, long a, const ZZ& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZX.h	/^inline void mul(ZZX& x, const ZZ& a, const ZZX& b) { mul(x, b, a); } $/;"	f
mul	deplib/ntl-main/include/NTL/ZZX.h	/^inline void mul(ZZX& x, long a, const ZZX& b) { mul(x, b, a); } $/;"	f
mul	deplib/ntl-main/include/NTL/ZZXFactoring.h	/^inline ZZX mul(const vec_pair_ZZX_long& v)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void mul(ZZ_p& x, const ZZ_p& a, const ZZ_p& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void mul(ZZ_p& x, long a, const ZZ_p& b) { mul(x, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void mul(ZZ_pE& x, const ZZ_p& a, const ZZ_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void mul(ZZ_pE& x, const ZZ_pE& a, const ZZ_p& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void mul(ZZ_pE& x, const ZZ_pE& a, const ZZ_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void mul(ZZ_pE& x, const ZZ_pE& a, long b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void mul(ZZ_pE& x, long a, const ZZ_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void mul(ZZ_pEX& x, const ZZ_p& a, const ZZ_pEX& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void mul(ZZ_pEX& x, const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void mul(ZZ_pEX& x, long a, const ZZ_pEX& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pEXFactoring.h	/^inline ZZ_pEX mul(const vec_pair_ZZ_pEX_long& v)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void mul(ZZ_pX& x, const ZZ_p& a, const ZZ_pX& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void mul(ZZ_pX& x, long a, const ZZ_pX& b)$/;"	f
mul	deplib/ntl-main/include/NTL/ZZ_pXFactoring.h	/^inline ZZ_pX mul(const vec_pair_ZZ_pX_long& v)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void mul(zz_p& x, long a, zz_p b) { mul(x, to_zz_p(a), b); }$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void mul(zz_p& x, zz_p a, long b) { mul(x, a, to_zz_p(b)); }$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void mul(zz_p& x, zz_p a, zz_p b)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void mul(zz_pE& x, const zz_p& a, const zz_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void mul(zz_pE& x, const zz_pE& a, const zz_p& b)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void mul(zz_pE& x, const zz_pE& a, const zz_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void mul(zz_pE& x, const zz_pE& a, long b)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void mul(zz_pE& x, long a, const zz_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void mul(zz_pEX& x, const zz_p& a, const zz_pEX& b)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void mul(zz_pEX& x, const zz_pE& a, const zz_pEX& b)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void mul(zz_pEX& x, long a, const zz_pEX& b)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pEXFactoring.h	/^inline zz_pEX mul(const vec_pair_zz_pEX_long& v)$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void mul(zz_pX& x, const zz_pX& a, long b) { mul(x, a, to_zz_p(b)); }$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void mul(zz_pX& x, long a, const zz_pX& b) { mul(x, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void mul(zz_pX& x, zz_p a, const zz_pX& b) { mul(x, b, a); }$/;"	f
mul	deplib/ntl-main/include/NTL/lzz_pXFactoring.h	/^inline zz_pX mul(const vec_pair_zz_pX_long& v)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline void mul(mat_GF2& X, GF2 a, const mat_GF2& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline void mul(mat_GF2& X, const mat_GF2& A, long b)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline void mul(mat_GF2& X, long a, const mat_GF2& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline void mul(mat_GF2E& X, GF2 a, const mat_GF2E& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline void mul(mat_GF2E& X, const GF2E& a, const mat_GF2E& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline void mul(mat_GF2E& X, const mat_GF2E& A, long b)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline void mul(mat_GF2E& X, long a, const mat_GF2E& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_RR.h	/^inline void mul(mat_RR& X, const RR& a, const mat_RR& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_RR.h	/^inline void mul(mat_RR& X, double a, const mat_RR& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline void mul(mat_ZZ& X, const ZZ& a, const mat_ZZ& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline void mul(mat_ZZ& X, long a, const mat_ZZ& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline void mul(mat_ZZ_p& X, const ZZ_p& a, const mat_ZZ_p& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline void mul(mat_ZZ_p& X, long a, const mat_ZZ_p& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^void mul(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p_opaque& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline void mul(mat_ZZ_pE& X, const ZZ_p& a, const mat_ZZ_pE& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline void mul(mat_ZZ_pE& X, const ZZ_pE& a, const mat_ZZ_pE& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline void mul(mat_ZZ_pE& X, long a, const mat_ZZ_pE& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void mul(mat_zz_p& X, long a, const mat_zz_p& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void mul(mat_zz_p& X, zz_p a, const mat_zz_p& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline void mul(mat_zz_pE& X, const zz_p& a, const mat_zz_pE& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline void mul(mat_zz_pE& X, const zz_pE& a, const mat_zz_pE& B)$/;"	f
mul	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline void mul(mat_zz_pE& X, long a, const mat_zz_pE& B)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline void mul(vec_GF2& x, GF2 a, const vec_GF2& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline void mul(vec_GF2& x, const vec_GF2& a, long b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline void mul(vec_GF2& x, long a, const vec_GF2& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline void mul(vec_GF2E& x, GF2 a, const vec_GF2E& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline void mul(vec_GF2E& x, const GF2E& a, const vec_GF2E& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline void mul(vec_GF2E& x, const vec_GF2E& a, long b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline void mul(vec_GF2E& x, long a, const vec_GF2E& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_RR.h	/^inline void mul(vec_RR& x, const RR& a, const vec_RR& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_RR.h	/^inline void mul(vec_RR& x, double a, const vec_RR& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline void mul(vec_ZZ& x, const ZZ& a, const vec_ZZ& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline void mul(vec_ZZ& x, long a, const vec_ZZ& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline void mul(vec_ZZ_p& x, const ZZ_p& a, const vec_ZZ_p& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline void mul(vec_ZZ_p& x, long a, const vec_ZZ_p& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline void mul(vec_ZZ_pE& x, const ZZ_p& a, const vec_ZZ_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline void mul(vec_ZZ_pE& x, const ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline void mul(vec_ZZ_pE& x, long a, const vec_ZZ_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline void mul(vec_zz_p& x, long a, const vec_zz_p& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline void mul(vec_zz_p& x, zz_p a, const vec_zz_p& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline void mul(vec_zz_pE& x, const zz_p& a, const vec_zz_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline void mul(vec_zz_pE& x, const zz_pE& a, const vec_zz_pE& b)$/;"	f
mul	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline void mul(vec_zz_pE& x, long a, const vec_zz_pE& b)$/;"	f
mul	deplib/ntl-main/src/GF2EX.cpp	/^void mul(GF2EX& U, GF2EX& V, const _NTL_GF2EXMatrix& M)$/;"	f	file:
mul	deplib/ntl-main/src/GF2EX.cpp	/^void mul(GF2EX& c, const GF2EX& a, const GF2EX& b)$/;"	f
mul	deplib/ntl-main/src/GF2EX.cpp	/^void mul(GF2EX& x, const GF2EX& a, GF2 b)$/;"	f
mul	deplib/ntl-main/src/GF2EX.cpp	/^void mul(GF2EX& x, const GF2EX& a, const GF2E& b)$/;"	f
mul	deplib/ntl-main/src/GF2EX.cpp	/^void mul(GF2EX& x, const GF2EX& a, long b)$/;"	f
mul	deplib/ntl-main/src/GF2EX.cpp	/^void mul(_NTL_GF2EXMatrix& A, _NTL_GF2EXMatrix& B, _NTL_GF2EXMatrix& C)$/;"	f	file:
mul	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void mul(GF2EX& f, const vec_pair_GF2EX_long& v)$/;"	f
mul	deplib/ntl-main/src/GF2X.cpp	/^void mul(GF2X& c, const GF2X& a, GF2 b)$/;"	f
mul	deplib/ntl-main/src/GF2X.cpp	/^void mul(GF2X& c, const GF2X& a, const GF2X& b)$/;"	f
mul	deplib/ntl-main/src/GF2X.cpp	/^void mul(GF2X& c, const GF2X& a, long b)$/;"	f
mul	deplib/ntl-main/src/GF2X1.cpp	/^void mul(GF2X& U, GF2X& V, const _NTL_GF2XMatrix& M)$/;"	f	file:
mul	deplib/ntl-main/src/GF2X1.cpp	/^void mul(_NTL_GF2XMatrix& A, _NTL_GF2XMatrix& B, _NTL_GF2XMatrix& C)$/;"	f	file:
mul	deplib/ntl-main/src/GF2XFactoring.cpp	/^void mul(GF2X& f, const vec_pair_GF2X_long& v)$/;"	f
mul	deplib/ntl-main/src/RR.cpp	/^void mul(RR& z, const RR& a, const RR& b)$/;"	f
mul	deplib/ntl-main/src/RR.cpp	/^void mul(RR& z, const RR& a, double b)$/;"	f
mul	deplib/ntl-main/src/ZZX1.cpp	/^void mul(ZZX& c, const ZZX& a, const ZZX& b)$/;"	f
mul	deplib/ntl-main/src/ZZX1.cpp	/^void mul(ZZX& x, const ZZX& a, const ZZ& b)$/;"	f
mul	deplib/ntl-main/src/ZZX1.cpp	/^void mul(ZZX& x, const ZZX& a, long b)$/;"	f
mul	deplib/ntl-main/src/ZZXFactoring.cpp	/^void mul(ZZX& x, const vec_pair_ZZX_long& a)$/;"	f
mul	deplib/ntl-main/src/ZZXFactoring.cpp	/^void mul(ZZ_pX& g, const vec_ZZ_pX& W, const vec_long& I)$/;"	f	file:
mul	deplib/ntl-main/src/ZZXFactoring.cpp	/^void mul(ZZ_pX& x, vec_ZZ_pX& a)$/;"	f	file:
mul	deplib/ntl-main/src/ZZ_p.cpp	/^void mul(ZZ_p& x, const ZZ_p& a, long b)$/;"	f
mul	deplib/ntl-main/src/ZZ_pEX.cpp	/^void mul(ZZ_pEX& U, ZZ_pEX& V, const _NTL_ZZ_pEXMatrix& M)$/;"	f	file:
mul	deplib/ntl-main/src/ZZ_pEX.cpp	/^void mul(ZZ_pEX& c, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
mul	deplib/ntl-main/src/ZZ_pEX.cpp	/^void mul(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_p& b)$/;"	f
mul	deplib/ntl-main/src/ZZ_pEX.cpp	/^void mul(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
mul	deplib/ntl-main/src/ZZ_pEX.cpp	/^void mul(ZZ_pEX& x, const ZZ_pEX& a, long b)$/;"	f
mul	deplib/ntl-main/src/ZZ_pEX.cpp	/^void mul(_NTL_ZZ_pEXMatrix& A, _NTL_ZZ_pEXMatrix& B, _NTL_ZZ_pEXMatrix& C)$/;"	f	file:
mul	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void mul(ZZ_pEX& f, const vec_pair_ZZ_pEX_long& v)$/;"	f
mul	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(mul)(FFTRep& z, const FFTRep& x, const FFTRep& y)$/;"	f
mul	deplib/ntl-main/src/ZZ_pX.cpp	/^void mul(FFTRep& z, const FFTRep& x, const FFTRep& y)$/;"	f
mul	deplib/ntl-main/src/ZZ_pX.cpp	/^void mul(ZZ_pX& c, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
mul	deplib/ntl-main/src/ZZ_pX.cpp	/^void mul(ZZ_pX& x, const ZZ_pX& a, const ZZ_p& b)$/;"	f
mul	deplib/ntl-main/src/ZZ_pX.cpp	/^void mul(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
mul	deplib/ntl-main/src/ZZ_pX.cpp	/^void mul(ZZ_pX& x, const ZZ_pX& a, long b)$/;"	f
mul	deplib/ntl-main/src/ZZ_pX1.cpp	/^void mul(ZZ_p* x, const ZZ_p* a, const ZZ_p* b, long n)$/;"	f
mul	deplib/ntl-main/src/ZZ_pX1.cpp	/^void mul(ZZ_pX& U, ZZ_pX& V, const ZZ_pXMatrix& M)$/;"	f
mul	deplib/ntl-main/src/ZZ_pX1.cpp	/^void mul(ZZ_pXMatrix& A, ZZ_pXMatrix& B, ZZ_pXMatrix& C) $/;"	f
mul	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void mul(ZZ_pX& f, const vec_pair_ZZ_pX_long& v)$/;"	f
mul	deplib/ntl-main/src/lzz_pEX.cpp	/^void mul(_NTL_zz_pEXMatrix& A, _NTL_zz_pEXMatrix& B, _NTL_zz_pEXMatrix& C)$/;"	f	file:
mul	deplib/ntl-main/src/lzz_pEX.cpp	/^void mul(zz_pEX& U, zz_pEX& V, const _NTL_zz_pEXMatrix& M)$/;"	f	file:
mul	deplib/ntl-main/src/lzz_pEX.cpp	/^void mul(zz_pEX& c, const zz_pEX& a, const zz_pEX& b)$/;"	f
mul	deplib/ntl-main/src/lzz_pEX.cpp	/^void mul(zz_pEX& x, const zz_pEX& a, const zz_p& b)$/;"	f
mul	deplib/ntl-main/src/lzz_pEX.cpp	/^void mul(zz_pEX& x, const zz_pEX& a, const zz_pE& b)$/;"	f
mul	deplib/ntl-main/src/lzz_pEX.cpp	/^void mul(zz_pEX& x, const zz_pEX& a, long b)$/;"	f
mul	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void mul(zz_pEX& f, const vec_pair_zz_pEX_long& v)$/;"	f
mul	deplib/ntl-main/src/lzz_pX.cpp	/^void mul(fftRep& z, const fftRep& x, const fftRep& y)$/;"	f
mul	deplib/ntl-main/src/lzz_pX.cpp	/^void mul(zz_pX& x, const zz_pX& a, const zz_pX& b)$/;"	f
mul	deplib/ntl-main/src/lzz_pX.cpp	/^void mul(zz_pX& x, const zz_pX& a, zz_p b)$/;"	f
mul	deplib/ntl-main/src/lzz_pX1.cpp	/^void mul(zz_p* x, const zz_p* a, const zz_p* b, long n)$/;"	f
mul	deplib/ntl-main/src/lzz_pX1.cpp	/^void mul(zz_pX& U, zz_pX& V, const zz_pXMatrix& M)$/;"	f
mul	deplib/ntl-main/src/lzz_pX1.cpp	/^void mul(zz_pXMatrix& A, zz_pXMatrix& B, zz_pXMatrix& C)$/;"	f
mul	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void mul(zz_pX& f, const vec_pair_zz_pX_long& v)$/;"	f
mul	deplib/ntl-main/src/mat_GF2.cpp	/^void mul(mat_GF2& X, const mat_GF2& A, GF2 b)$/;"	f
mul	deplib/ntl-main/src/mat_GF2.cpp	/^void mul(mat_GF2& X, const mat_GF2& A, const mat_GF2& B)  $/;"	f
mul	deplib/ntl-main/src/mat_GF2.cpp	/^void mul(vec_GF2& x, const mat_GF2& A, const vec_GF2& b)  $/;"	f
mul	deplib/ntl-main/src/mat_GF2.cpp	/^void mul(vec_GF2& x, const vec_GF2& a, const mat_GF2& B)$/;"	f
mul	deplib/ntl-main/src/mat_GF2E.cpp	/^void mul(mat_GF2E& X, const mat_GF2E& A, GF2 b)$/;"	f
mul	deplib/ntl-main/src/mat_GF2E.cpp	/^void mul(mat_GF2E& X, const mat_GF2E& A, const GF2E& b_in)$/;"	f
mul	deplib/ntl-main/src/mat_GF2E.cpp	/^void mul(mat_GF2E& X, const mat_GF2E& A, const mat_GF2E& B)  $/;"	f
mul	deplib/ntl-main/src/mat_GF2E.cpp	/^void mul(vec_GF2E& x, const mat_GF2E& A, const vec_GF2E& b)  $/;"	f
mul	deplib/ntl-main/src/mat_GF2E.cpp	/^void mul(vec_GF2E& x, const vec_GF2E& a, const mat_GF2E& B)$/;"	f
mul	deplib/ntl-main/src/mat_RR.cpp	/^void mul(mat_RR& X, const mat_RR& A, const RR& b_in)$/;"	f
mul	deplib/ntl-main/src/mat_RR.cpp	/^void mul(mat_RR& X, const mat_RR& A, const mat_RR& B)  $/;"	f
mul	deplib/ntl-main/src/mat_RR.cpp	/^void mul(mat_RR& X, const mat_RR& A, double b_in)$/;"	f
mul	deplib/ntl-main/src/mat_RR.cpp	/^void mul(vec_RR& x, const mat_RR& A, const vec_RR& b)  $/;"	f
mul	deplib/ntl-main/src/mat_RR.cpp	/^void mul(vec_RR& x, const vec_RR& a, const mat_RR& B)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ.cpp	/^void mul(mat_ZZ& X, const mat_ZZ& A, const ZZ& b_in)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ.cpp	/^void mul(mat_ZZ& X, const mat_ZZ& A, const mat_ZZ& B)  $/;"	f
mul	deplib/ntl-main/src/mat_ZZ.cpp	/^void mul(mat_ZZ& X, const mat_ZZ& A, long b)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ.cpp	/^void mul(vec_ZZ& x, const mat_ZZ& A, const vec_ZZ& b)  $/;"	f
mul	deplib/ntl-main/src/mat_ZZ.cpp	/^void mul(vec_ZZ& x, const vec_ZZ& a, const mat_ZZ& B)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   void mul(mat_ZZ_p& X, const mat_ZZ_p& A) const$/;"	f	struct:mat_ZZ_p_opaque_body_crt
mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   void mul(mat_ZZ_p& X, const mat_ZZ_p& A) const$/;"	f	struct:mat_ZZ_p_opaque_body_plain
mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void mul(mat_ZZ_p& X, const mat_ZZ_p& A, const ZZ_p& b_in)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void mul(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p& B)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void mul(mat_ZZ_p& X, const mat_ZZ_p& A, long b_in)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void mul(mat_ZZ_p_crt_rep& X, const mat_ZZ_p_crt_rep& A, const mat_ZZ_p_crt_rep& B)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void mul(vec_ZZ_p& x, const mat_ZZ_p& A, const vec_ZZ_p& b)  $/;"	f
mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void mul(vec_ZZ_p& x, const vec_ZZ_p& a, const mat_ZZ_p& B)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void mul(mat_ZZ_pE& X, const mat_ZZ_pE& A, const ZZ_p& b_in)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void mul(mat_ZZ_pE& X, const mat_ZZ_pE& A, const ZZ_pE& b_in)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void mul(mat_ZZ_pE& X, const mat_ZZ_pE& A, const mat_ZZ_pE& B)  $/;"	f
mul	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void mul(mat_ZZ_pE& X, const mat_ZZ_pE& A, long b_in)$/;"	f
mul	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void mul(vec_ZZ_pE& x, const mat_ZZ_pE& A, const vec_ZZ_pE& b)  $/;"	f
mul	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void mul(vec_ZZ_pE& x, const vec_ZZ_pE& a, const mat_ZZ_pE& B)$/;"	f
mul	deplib/ntl-main/src/mat_lzz_p.cpp	/^void mul(mat_zz_p& X, const mat_zz_p& A, const mat_zz_p& B)$/;"	f
mul	deplib/ntl-main/src/mat_lzz_p.cpp	/^void mul(mat_zz_p& X, const mat_zz_p& A, long b_in)$/;"	f
mul	deplib/ntl-main/src/mat_lzz_p.cpp	/^void mul(mat_zz_p& X, const mat_zz_p& A, zz_p b)$/;"	f
mul	deplib/ntl-main/src/mat_lzz_p.cpp	/^void mul(vec_zz_p& x, const mat_zz_p& A, const vec_zz_p& b)  $/;"	f
mul	deplib/ntl-main/src/mat_lzz_p.cpp	/^void mul(vec_zz_p& x, const vec_zz_p& a, const mat_zz_p& B)$/;"	f
mul	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void mul(mat_zz_pE& X, const mat_zz_pE& A, const mat_zz_pE& B)  $/;"	f
mul	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void mul(mat_zz_pE& X, const mat_zz_pE& A, const zz_p& b_in)$/;"	f
mul	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void mul(mat_zz_pE& X, const mat_zz_pE& A, const zz_pE& b_in)$/;"	f
mul	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void mul(mat_zz_pE& X, const mat_zz_pE& A, long b_in)$/;"	f
mul	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void mul(vec_zz_pE& x, const mat_zz_pE& A, const vec_zz_pE& b)  $/;"	f
mul	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void mul(vec_zz_pE& x, const vec_zz_pE& a, const mat_zz_pE& B)$/;"	f
mul	deplib/ntl-main/src/vec_GF2.cpp	/^void mul(vec_GF2& x, const vec_GF2& a, GF2 b)$/;"	f
mul	deplib/ntl-main/src/vec_GF2E.cpp	/^void mul(vec_GF2E& x, const vec_GF2E& a, GF2 b)$/;"	f
mul	deplib/ntl-main/src/vec_GF2E.cpp	/^void mul(vec_GF2E& x, const vec_GF2E& a, const GF2E& b_in)$/;"	f
mul	deplib/ntl-main/src/vec_RR.cpp	/^void mul(vec_RR& x, const vec_RR& a, const RR& b_in)$/;"	f
mul	deplib/ntl-main/src/vec_RR.cpp	/^void mul(vec_RR& x, const vec_RR& a, double b_in)$/;"	f
mul	deplib/ntl-main/src/vec_ZZ.cpp	/^void mul(vec_ZZ& x, const vec_ZZ& a, const ZZ& b_in)$/;"	f
mul	deplib/ntl-main/src/vec_ZZ.cpp	/^void mul(vec_ZZ& x, const vec_ZZ& a, long b)$/;"	f
mul	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void mul(vec_ZZ_p& x, const vec_ZZ_p& a, const ZZ_p& b_in)$/;"	f
mul	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void mul(vec_ZZ_p& x, const vec_ZZ_p& a, long b_in)$/;"	f
mul	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void mul(vec_ZZ_pE& x, const vec_ZZ_pE& a, const ZZ_p& b_in)$/;"	f
mul	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void mul(vec_ZZ_pE& x, const vec_ZZ_pE& a, const ZZ_pE& b_in)$/;"	f
mul	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void mul(vec_ZZ_pE& x, const vec_ZZ_pE& a, long b_in)$/;"	f
mul	deplib/ntl-main/src/vec_lzz_p.cpp	/^void mul(vec_zz_p& x, const vec_zz_p& a, long b_in)$/;"	f
mul	deplib/ntl-main/src/vec_lzz_p.cpp	/^void mul(vec_zz_p& x, const vec_zz_p& a, zz_p b)$/;"	f
mul	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void mul(vec_zz_pE& x, const vec_zz_pE& a, const zz_p& b_in)$/;"	f
mul	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void mul(vec_zz_pE& x, const vec_zz_pE& a, const zz_pE& b_in)$/;"	f
mul	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void mul(vec_zz_pE& x, const vec_zz_pE& a, long b_in)$/;"	f
mul1	deplib/ntl-main/src/GF2X.cpp	/^void mul1(_ntl_ulong *c, _ntl_ulong a, _ntl_ulong b)$/;"	f	file:
mul1_IL	deplib/ntl-main/src/GF2X.cpp	574;"	d	file:
mul1_IL	deplib/ntl-main/src/GF2X.cpp	591;"	d	file:
mul1_inline	deplib/ntl-main/src/GF2X.cpp	/^void mul1_inline(_ntl_ulong *c, _ntl_ulong a, _ntl_ulong b)$/;"	f	file:
mul2	deplib/ntl-main/src/GF2X.cpp	/^void mul2(_ntl_ulong *c, const _ntl_ulong *a, const _ntl_ulong *b)$/;"	f	file:
mul3	deplib/ntl-main/src/GF2X.cpp	/^void mul3 (_ntl_ulong *c, const _ntl_ulong *a, const _ntl_ulong *b)$/;"	f	file:
mul4	deplib/ntl-main/src/GF2X.cpp	/^void mul4(_ntl_ulong *c, const _ntl_ulong *a, const _ntl_ulong *b)$/;"	f	file:
mul5	deplib/ntl-main/src/GF2X.cpp	/^void mul5 (_ntl_ulong *c, const _ntl_ulong *a, const _ntl_ulong *b)$/;"	f	file:
mul6	deplib/ntl-main/src/GF2X.cpp	/^void mul6(_ntl_ulong *c, const _ntl_ulong *a, const _ntl_ulong *b)$/;"	f	file:
mul7	deplib/ntl-main/src/GF2X.cpp	/^void mul7(_ntl_ulong *c, const _ntl_ulong *a, const _ntl_ulong *b)$/;"	f	file:
mul8	deplib/ntl-main/src/GF2X.cpp	/^void mul8(_ntl_ulong *c, const _ntl_ulong *a, const _ntl_ulong *b)$/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_GF2.cpp	/^void mul_aux(mat_GF2& X, const mat_GF2& A, const mat_GF2& B)  $/;"	f
mul_aux	deplib/ntl-main/src/mat_GF2.cpp	/^void mul_aux(vec_GF2& x, const mat_GF2& A, const vec_GF2& b)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_GF2.cpp	/^void mul_aux(vec_GF2& x, const vec_GF2& a, const mat_GF2& B)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_GF2E.cpp	/^void mul_aux(Mat<GF2E>& X, const Mat<GF2E>& A, const Mat<GF2E>& B)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_GF2E.cpp	/^void mul_aux(vec_GF2E& x, const mat_GF2E& A, const vec_GF2E& b)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_GF2E.cpp	/^void mul_aux(vec_GF2E& x, const vec_GF2E& a, const mat_GF2E& B)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_RR.cpp	/^void mul_aux(mat_RR& X, const mat_RR& A, const mat_RR& B)  $/;"	f
mul_aux	deplib/ntl-main/src/mat_RR.cpp	/^void mul_aux(vec_RR& x, const mat_RR& A, const vec_RR& b)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_RR.cpp	/^void mul_aux(vec_RR& x, const vec_RR& a, const mat_RR& B)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_ZZ.cpp	/^void mul_aux(mat_ZZ& X, const mat_ZZ& A, const mat_ZZ& B)  $/;"	f
mul_aux	deplib/ntl-main/src/mat_ZZ.cpp	/^void mul_aux(vec_ZZ& x, const mat_ZZ& A, const vec_ZZ& b)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_ZZ.cpp	/^void mul_aux(vec_ZZ& x, const vec_ZZ& a, const mat_ZZ& B)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void mul_aux(vec_ZZ_p& x, const mat_ZZ_p& A, const vec_ZZ_p& b)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void mul_aux(vec_ZZ_p& x, const vec_ZZ_p& a, const mat_ZZ_p& B)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void mul_aux(Mat<ZZ_pE>& X, const Mat<ZZ_pE>& A, const Mat<ZZ_pE>& B)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void mul_aux(vec_ZZ_pE& x, const mat_ZZ_pE& A, const vec_ZZ_pE& b)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void mul_aux(vec_ZZ_pE& x, const vec_ZZ_pE& a, const mat_ZZ_pE& B)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_lzz_p.cpp	/^void mul_aux(mat_zz_p& X, const mat_zz_p& A, const mat_zz_p& B)$/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_lzz_p.cpp	/^void mul_aux(vec_zz_p& x, const mat_zz_p& A, const vec_zz_p& b)$/;"	f
mul_aux	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void mul_aux(Mat<zz_pE>& X, const Mat<zz_pE>& A, const Mat<zz_pE>& B)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void mul_aux(vec_zz_pE& x, const mat_zz_pE& A, const vec_zz_pE& b)  $/;"	f	file:
mul_aux	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void mul_aux(vec_zz_pE& x, const vec_zz_pE& a, const mat_zz_pE& B)  $/;"	f	file:
mul_base	deplib/ntl-main/src/mat_lzz_p.cpp	/^void mul_base (const mat_window_zz_p& X, $/;"	f	file:
mul_half	deplib/ntl-main/src/GF2X.cpp	/^void mul_half(_ntl_ulong *c, _ntl_ulong a, _ntl_ulong b)$/;"	f	file:
mul_strassen	deplib/ntl-main/src/mat_lzz_p.cpp	/^void mul_strassen(const mat_window_zz_p& C, $/;"	f
mul_transpose	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^void mul_transpose(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p_opaque& B)$/;"	f
mul_transpose	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   void mul_transpose(mat_ZZ_p& X, const mat_ZZ_p& A) const$/;"	f	struct:mat_ZZ_p_opaque_body_crt
mul_transpose	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   void mul_transpose(mat_ZZ_p& X, const mat_ZZ_p& A) const$/;"	f	struct:mat_ZZ_p_opaque_body_plain
mul_transpose	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void mul_transpose(mat_ZZ_p_crt_rep& X, const mat_ZZ_p_crt_rep& A, const mat_ZZ_p_crt_rep& B)$/;"	f
muladd1_by_16	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_16(double *x, const double *a, const double *b, long n)$/;"	f	file:
muladd1_by_32	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32(double *x, const double *a, const double *b, long n)$/;"	f	file:
muladd1_by_32	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32(long *x, const long *a, const long *b, $/;"	f	file:
muladd1_by_32	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32(unsigned long *x, const unsigned int *a, const unsigned int *b, $/;"	f	file:
muladd1_by_32	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32(unsigned long *x, const unsigned long *a, const unsigned long *b, $/;"	f	file:
muladd1_by_32_full	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_full(long *x, const long *a, const long *b, $/;"	f
muladd1_by_32_full	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_full(long *x, const long *a, const long *b, $/;"	f	file:
muladd1_by_32_full	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_full(unsigned long *x, const unsigned int *a, const unsigned int *b)$/;"	f	file:
muladd1_by_32_full	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_full(unsigned long *x, const unsigned long *a, const unsigned long *b)$/;"	f	file:
muladd1_by_32_full_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_full_width(long *x, const long *a, const long *b, $/;"	f
muladd1_by_32_full_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_full_width(long *x, const long *a, const long *b, $/;"	f	file:
muladd1_by_32_full_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_full_width(unsigned long *x, const unsigned int *a, const unsigned int *b, long width)$/;"	f	file:
muladd1_by_32_full_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_full_width(unsigned long *x, const unsigned long *a, const unsigned long *b, long width)$/;"	f	file:
muladd1_by_32_half1	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_half1(long *x, const long *a, const long *b, $/;"	f	file:
muladd1_by_32_half1_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_half1_width(long *x, const long *a, const long *b, $/;"	f	file:
muladd1_by_32_half2	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_half2(long *x, const long *a, const long *b, $/;"	f	file:
muladd1_by_32_half2_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_half2_width(long *x, const long *a, const long *b, $/;"	f	file:
muladd1_by_32_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_width(long *x, const long *a, const long *b, $/;"	f	file:
muladd1_by_32_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_width(unsigned long *x, const unsigned int *a, const unsigned int *b, $/;"	f	file:
muladd1_by_32_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd1_by_32_width(unsigned long *x, const unsigned long *a, const unsigned long *b, $/;"	f	file:
muladd2_by_16	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd2_by_16(double *x, const double *a, const double *b, long n)$/;"	f	file:
muladd2_by_32	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd2_by_32(double *x, const double *a, const double *b, long n)$/;"	f	file:
muladd3_by_16	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd3_by_16(double *x, const double *a, const double *b, long n)$/;"	f	file:
muladd3_by_32	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd3_by_32(double *x, const double *a, const double *b, long n)$/;"	f	file:
muladd_all_by_16	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_all_by_16(long first, long last, double *x, const double *a, const double *b, long n)$/;"	f	file:
muladd_all_by_32	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_all_by_32(long first, long last, double *x, const double *a, const double *b, long n)$/;"	f	file:
muladd_all_by_32	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_all_by_32(long first, long last, long *x, const long *a, const long *b, long n,$/;"	f	file:
muladd_all_by_32	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_all_by_32(long first, long last, unsigned long *x, const unsigned int *a, const unsigned int *b, long n)$/;"	f	file:
muladd_all_by_32	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_all_by_32(long first, long last, unsigned long *x, const unsigned long *a, const unsigned long *b, long n)$/;"	f	file:
muladd_all_by_32_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_all_by_32_width(long first, long last, double *x, const double *a, const double *b, long n, long width)$/;"	f	file:
muladd_all_by_32_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_all_by_32_width(long first, long last, long *x, const long *a, const long *b, long n,$/;"	f	file:
muladd_all_by_32_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_all_by_32_width(long first, long last, unsigned long *x, const unsigned int *a, const unsigned int *b, long n, long width)$/;"	f	file:
muladd_all_by_32_width	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_all_by_32_width(long first, long last, unsigned long *x, const unsigned long *a, const unsigned long *b, long n, long width)$/;"	f	file:
muladd_interval	deplib/ntl-main/src/mat_lzz_p.cpp	/^inline void muladd_interval(long * NTL_RESTRICT x, long * NTL_RESTRICT y, $/;"	f	file:
muladd_interval	deplib/ntl-main/src/mat_lzz_p.cpp	/^inline void muladd_interval(unsigned long * NTL_RESTRICT x, unsigned long * NTL_RESTRICT y, $/;"	f	file:
muladd_interval	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_interval(double * NTL_RESTRICT x, double * NTL_RESTRICT y, double c, long n)$/;"	f	file:
muladd_interval1	deplib/ntl-main/src/mat_lzz_p.cpp	/^void muladd_interval1(double * NTL_RESTRICT x, double * NTL_RESTRICT y, double c, long n)$/;"	f	file:
muldivrem_t	deplib/ntl-main/include/NTL/sp_arith.h	/^typedef sp_muldivrem_struct muldivrem_t;$/;"	t
muldivrem_t	deplib/ntl-main/include/NTL/sp_arith.h	/^typedef wide_double muldivrem_t;$/;"	t
mulmod1test	deplib/ntl-main/src/ZZ_pXTest.cpp	/^void mulmod1test()$/;"	f
mulmod1test	deplib/ntl-main/src/lzz_pXTest.cpp	/^void mulmod1test()$/;"	f
mulmod_precon_t	deplib/ntl-main/include/NTL/sp_arith.h	/^typedef unsigned long mulmod_precon_t;$/;"	t
mulmod_precon_t	deplib/ntl-main/include/NTL/sp_arith.h	/^typedef wide_double mulmod_precon_t;$/;"	t
mulmod_t	deplib/ntl-main/include/NTL/sp_arith.h	/^typedef sp_inverse mulmod_t;$/;"	t
mulmod_t	deplib/ntl-main/include/NTL/sp_arith.h	/^typedef wide_double mulmod_t;$/;"	t
mulmodtest	deplib/ntl-main/src/ZZ_pXTest.cpp	/^void mulmodtest()$/;"	f
mulmodtest	deplib/ntl-main/src/lzz_pXTest.cpp	/^void mulmodtest()$/;"	f
multOrd	deplib/ntl-main/src/ThreadTest.cpp	/^long multOrd(const ZZ& p, long m)$/;"	f
multest	deplib/ntl-main/src/ZZ_pXTest.cpp	/^void multest()$/;"	f
multest	deplib/ntl-main/src/lzz_pXTest.cpp	/^void multest()$/;"	f
multi_modular_mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void multi_modular_mul(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p& B)$/;"	f
multi_modular_mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void multi_modular_mul(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p_crt_rep& B)$/;"	f
multi_modular_mul_transpose	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void multi_modular_mul_transpose(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p_crt_rep& B)$/;"	f
multiplier_type	deplib/ntl-main/include/NTL/ZZ_pX.h	/^typedef ZZ_pXMultiplier multiplier_type;$/;"	t	class:ZZ_pX
multiplier_type	deplib/ntl-main/include/NTL/lzz_pX.h	/^typedef zz_pXMultiplier multiplier_type;$/;"	t	class:zz_pX
n	deplib/ntl-main/include/NTL/GF2EX.h	/^   long n; \/\/  deg(f)$/;"	m	class:GF2EXModulus
n	deplib/ntl-main/include/NTL/GF2X.h	/^   long n; \/\/  deg(f)$/;"	m	class:GF2XModulus
n	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   long n; \/\/  deg(f)$/;"	m	class:ZZ_pEXModulus
n	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long n;     \/\/ n = deg(f)$/;"	m	class:ZZ_pXModulus
n	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   long n;$/;"	m	class:ZZ_pXModRep
n	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   long n; \/\/  deg(f)$/;"	m	class:zz_pEXModulus
n	deplib/ntl-main/include/NTL/lzz_pX.h	/^   long n;     \/\/ n = deg(f)$/;"	m	class:zz_pXModulus
n	deplib/ntl-main/src/ZZXFactoring.cpp	/^   long n;$/;"	m	struct:LocalInfoT	file:
n	deplib/ntl-main/src/lip.cpp	/^   long n;$/;"	m	class:_ntl_crt_struct_basic	file:
n	deplib/ntl-main/src/lip.cpp	/^   long n;$/;"	m	class:_ntl_crt_struct_fast	file:
n	deplib/ntl-main/src/lip.cpp	/^   long n;$/;"	m	class:_ntl_crt_struct_tbl	file:
n	deplib/ntl-main/src/lip.cpp	/^   long n;$/;"	m	class:_ntl_rem_struct_basic	file:
n	deplib/ntl-main/src/lip.cpp	/^   long n;$/;"	m	class:_ntl_rem_struct_fast	file:
n	deplib/ntl-main/src/lip.cpp	/^   long n;$/;"	m	class:_ntl_rem_struct_medium	file:
n	deplib/ntl-main/src/lip.cpp	/^   long n;$/;"	m	class:_ntl_rem_struct_tbl	file:
n_ptr	deplib/ntl-main/include/NTL/ZZ.h	/^   SmartPtr<ZZ> n_ptr;$/;"	m	class:InvModErrorObject
names	deplib/ntl-main/src/newnames.cpp	/^const char *names[NumNames][2] = {$/;"	v
nb	deplib/ntl-main/include/NTL/ZZ.h	/^   long nb;$/;"	m	struct:RandomBndGenerator
nbits	deplib/ntl-main/include/NTL/sp_arith.h	/^   long nbits;$/;"	m	struct:sp_ll_reduce_struct
nblocks	deplib/ntl-main/src/ZZX1.cpp	/^   long nblocks;   \/\/ number of nodes in the last level$/;"	m	struct:NewFastCRTHelper	file:
ncols	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long ncols;$/;"	m	struct:const_mat_window_zz_p	file:
ncols	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long ncols;$/;"	m	struct:mat_window_zz_p	file:
neg_inv_mod_limb	deplib/ntl-main/src/lip.cpp	/^_ntl_limb_t neg_inv_mod_limb(_ntl_limb_t m0)$/;"	f	file:
negate	deplib/ntl-main/include/NTL/GF2.h	/^inline void negate(GF2& x, GF2 a)$/;"	f
negate	deplib/ntl-main/include/NTL/GF2.h	/^inline void negate(ref_GF2 x, GF2 a)$/;"	f
negate	deplib/ntl-main/include/NTL/GF2E.h	/^inline void negate(GF2E& x, const GF2E& a) { x = a; }$/;"	f
negate	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void negate(GF2EX& x, const GF2EX& a) { x = a; }$/;"	f
negate	deplib/ntl-main/include/NTL/GF2X.h	/^inline void negate(GF2X& x, const GF2X& a) { x = a; }$/;"	f
negate	deplib/ntl-main/include/NTL/ZZ.h	/^inline void negate(ZZ& x, const ZZ& a)$/;"	f
negate	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void negate(ZZ_p& x, const ZZ_p& a)$/;"	f
negate	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void negate(ZZ_pE& x, const ZZ_pE& a) $/;"	f
negate	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void negate(zz_p& x, zz_p a)$/;"	f
negate	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void negate(zz_pE& x, const zz_pE& a) $/;"	f
negate	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline void negate(mat_GF2& X, const mat_GF2& A)$/;"	f
negate	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline void negate(mat_GF2E& X, const mat_GF2E& A)$/;"	f
negate	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline void negate(vec_GF2& x, const vec_GF2& a)$/;"	f
negate	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline void negate(vec_GF2E& x, const vec_GF2E& a) { x = a; }$/;"	f
negate	deplib/ntl-main/src/RR.cpp	/^void negate(RR& z, const RR& a)$/;"	f
negate	deplib/ntl-main/src/ZZX.cpp	/^void negate(ZZX& x, const ZZX& a)$/;"	f
negate	deplib/ntl-main/src/ZZ_pEX.cpp	/^void negate(ZZ_pEX& x, const ZZ_pEX& a)$/;"	f
negate	deplib/ntl-main/src/ZZ_pX.cpp	/^void negate(ZZ_pX& x, const ZZ_pX& a)$/;"	f
negate	deplib/ntl-main/src/lzz_pEX.cpp	/^void negate(zz_pEX& x, const zz_pEX& a)$/;"	f
negate	deplib/ntl-main/src/lzz_pX.cpp	/^void negate(zz_pX& x, const zz_pX& a)$/;"	f
negate	deplib/ntl-main/src/mat_RR.cpp	/^void negate(mat_RR& X, const mat_RR& A)$/;"	f
negate	deplib/ntl-main/src/mat_ZZ.cpp	/^void negate(mat_ZZ& X, const mat_ZZ& A)$/;"	f
negate	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void negate(mat_ZZ_p& X, const mat_ZZ_p& A)  $/;"	f
negate	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void negate(mat_ZZ_pE& X, const mat_ZZ_pE& A)  $/;"	f
negate	deplib/ntl-main/src/mat_lzz_p.cpp	/^void negate(mat_zz_p& X, const mat_zz_p& A)$/;"	f
negate	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void negate(mat_zz_pE& X, const mat_zz_pE& A)  $/;"	f
negate	deplib/ntl-main/src/vec_RR.cpp	/^void negate(vec_RR& x, const vec_RR& a)$/;"	f
negate	deplib/ntl-main/src/vec_ZZ.cpp	/^void negate(vec_ZZ& x, const vec_ZZ& a)$/;"	f
negate	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void negate(vec_ZZ_p& x, const vec_ZZ_p& a)$/;"	f
negate	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void negate(vec_ZZ_pE& x, const vec_ZZ_pE& a)$/;"	f
negate	deplib/ntl-main/src/vec_lzz_p.cpp	/^void negate(vec_zz_p& x, const vec_zz_p& a)$/;"	f
negate	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void negate(vec_zz_pE& x, const vec_zz_pE& a)$/;"	f
new_fft	deplib/ntl-main/include/NTL/FFT.h	/^void new_fft(long* A, const long* a, long k, $/;"	f
new_fft	deplib/ntl-main/src/FFT.cpp	/^void new_fft(mint_t* A, const mint_t* a, long k, const FFTPrimeInfo& info, $/;"	f
new_fft	deplib/ntl-main/src/FFT.cpp	/^void new_fft(mint_t* A, const mint_t* a, long k, const FFTPrimeInfo& info,$/;"	f
new_fft_base	deplib/ntl-main/src/FFT.cpp	/^void new_fft_base(umint_t* xp, long lgN, const new_mod_t& mod)$/;"	f
new_fft_base_flipped	deplib/ntl-main/src/FFT.cpp	/^void new_fft_base_flipped(umint_t* xp, long lgN, const new_mod_t& mod)$/;"	f
new_fft_flipped	deplib/ntl-main/src/FFT.cpp	/^void new_fft_flipped(mint_t* A, const mint_t* a, long k, const FFTPrimeInfo& info)$/;"	f
new_fft_flipped_notab	deplib/ntl-main/src/FFT.cpp	/^void new_fft_flipped_notab(mint_t* A, const mint_t* a, long k, $/;"	f
new_fft_last_two_layers	deplib/ntl-main/src/FFT.cpp	/^new_fft_last_two_layers(umint_t* xp, long blocks,$/;"	f	file:
new_fft_last_two_layers_flipped	deplib/ntl-main/src/FFT.cpp	/^new_fft_last_two_layers_flipped(umint_t* xp, long blocks,$/;"	f	file:
new_fft_layer	deplib/ntl-main/src/FFT.cpp	/^new_fft_layer(umint_t* xp, long blocks, long size,$/;"	f	file:
new_fft_layer_flipped	deplib/ntl-main/src/FFT.cpp	/^new_fft_layer_flipped(umint_t* xp, long blocks, long size,$/;"	f	file:
new_fft_notab	deplib/ntl-main/src/FFT.cpp	/^void new_fft_notab(mint_t* A, const mint_t* a, long k, const FFTPrimeInfo& info,$/;"	f
new_fft_short	deplib/ntl-main/src/FFT.cpp	/^void new_fft_short(umint_t* xp, long yn, long xn, long lgN, $/;"	f	file:
new_fft_short_flipped	deplib/ntl-main/src/FFT.cpp	/^void new_fft_short_flipped(umint_t* xp, long lgN, const new_mod_t& mod)$/;"	f	file:
new_fft_short_notab	deplib/ntl-main/src/FFT.cpp	/^void new_fft_short_notab(umint_t* xp, long yn, long xn, long lgN, $/;"	f	file:
new_ifft	deplib/ntl-main/include/NTL/FFT.h	/^void new_ifft(long* A, const long* a, long k, $/;"	f
new_ifft	deplib/ntl-main/src/FFT.cpp	/^void new_ifft(mint_t* A, const mint_t* a, long k, const FFTPrimeInfo& info, $/;"	f
new_ifft	deplib/ntl-main/src/FFT.cpp	/^void new_ifft(mint_t* A, const mint_t* a, long k, const FFTPrimeInfo& info,$/;"	f
new_ifft_base	deplib/ntl-main/src/FFT.cpp	/^void new_ifft_base(umint_t* xp, long lgN, const new_mod_t& mod)$/;"	f	file:
new_ifft_base_flipped	deplib/ntl-main/src/FFT.cpp	/^void new_ifft_base_flipped(umint_t* xp, long lgN, const new_mod_t& mod)$/;"	f	file:
new_ifft_first_two_layers	deplib/ntl-main/src/FFT.cpp	/^new_ifft_first_two_layers(umint_t* xp, long blocks, const mint_t* wtab, $/;"	f	file:
new_ifft_first_two_layers_flipped	deplib/ntl-main/src/FFT.cpp	/^new_ifft_first_two_layers_flipped(umint_t* xp, long blocks, const mint_t* wtab, $/;"	f	file:
new_ifft_flipped	deplib/ntl-main/src/FFT.cpp	/^void new_ifft_flipped(mint_t* A, const mint_t* a, long k, const FFTPrimeInfo& info)$/;"	f
new_ifft_flipped_notab	deplib/ntl-main/src/FFT.cpp	/^void new_ifft_flipped_notab(mint_t* A, const mint_t* a, long k, $/;"	f
new_ifft_layer	deplib/ntl-main/src/FFT.cpp	/^new_ifft_layer(umint_t* xp, long blocks, long size,$/;"	f	file:
new_ifft_layer_flipped	deplib/ntl-main/src/FFT.cpp	/^new_ifft_layer_flipped(umint_t* xp, long blocks, long size,$/;"	f	file:
new_ifft_notab	deplib/ntl-main/src/FFT.cpp	/^void new_ifft_notab(mint_t* A, const mint_t* a, long k, const FFTPrimeInfo& info,$/;"	f
new_ifft_short1	deplib/ntl-main/src/FFT.cpp	/^void new_ifft_short1(umint_t* xp, long yn, long lgN, const new_mod_t& mod)$/;"	f	file:
new_ifft_short1_flipped	deplib/ntl-main/src/FFT.cpp	/^void new_ifft_short1_flipped(umint_t* xp, long lgN, const new_mod_t& mod)$/;"	f	file:
new_ifft_short1_notab	deplib/ntl-main/src/FFT.cpp	/^void new_ifft_short1_notab(umint_t* xp, long yn, long lgN, const new_mod_t& mod,$/;"	f	file:
new_ifft_short2	deplib/ntl-main/src/FFT.cpp	/^void new_ifft_short2(umint_t* xp, long yn, long lgN, const new_mod_t& mod)$/;"	f	file:
new_mod_t	deplib/ntl-main/src/FFT.cpp	/^struct new_mod_t {$/;"	s	file:
next	deplib/ntl-main/include/NTL/ZZ.h	/^   long next()$/;"	f	struct:RandomBndGenerator
next	deplib/ntl-main/include/NTL/tools.h	/^   Node *next;$/;"	m	struct:details_pthread::Node
next	deplib/ntl-main/src/CheckThreads.cpp	/^   Node *next;$/;"	m	struct:details_pthread::Node	file:
next	deplib/ntl-main/src/ZZ.cpp	/^long PrimeSeq::next()$/;"	f	class:PrimeSeq
nintervals	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   long nintervals;  \/\/ number of intervals$/;"	m	struct:PartitionInfo
ninv	deplib/ntl-main/include/NTL/sp_arith.h	/^   unsigned long ninv;$/;"	m	struct:sp_reduce_struct
nlevels	deplib/ntl-main/src/ZZX1.cpp	/^   long nlevels;$/;"	m	struct:NewFastCRTHelper	file:
norm	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_p norm(const ZZ_pE& a)$/;"	f
norm	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void norm(ZZ_p& x, const ZZ_pE& a)$/;"	f
norm	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void norm(zz_p& x, const zz_pE& a)$/;"	f
norm	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_p norm(const zz_pE& a)$/;"	f
normalize	deplib/ntl-main/src/GF2EX.cpp	/^void GF2EX::normalize()$/;"	f	class:GF2EX
normalize	deplib/ntl-main/src/GF2X.cpp	/^void GF2X::normalize()$/;"	f	class:GF2X
normalize	deplib/ntl-main/src/RR.cpp	/^void normalize(RR& z, const RR& y, long residual = 0)$/;"	f
normalize	deplib/ntl-main/src/ZZX.cpp	/^void ZZX::normalize()$/;"	f	class:ZZX
normalize	deplib/ntl-main/src/ZZ_pEX.cpp	/^void ZZ_pEX::normalize()$/;"	f	class:ZZ_pEX
normalize	deplib/ntl-main/src/ZZ_pX.cpp	/^void ZZ_pX::normalize()$/;"	f	class:ZZ_pX
normalize	deplib/ntl-main/src/lzz_pEX.cpp	/^void zz_pEX::normalize()$/;"	f	class:zz_pEX
normalize	deplib/ntl-main/src/lzz_pX.cpp	/^void zz_pX::normalize()$/;"	f	class:zz_pX
normalize	deplib/ntl-main/src/xdouble.cpp	/^void xdouble::normalize() $/;"	f	class:xdouble
normalize1	deplib/ntl-main/src/RR.cpp	/^void normalize1(RR& z, const ZZ& y_x, long y_e, long prec, long residual)$/;"	f	file:
nprimes	deplib/ntl-main/src/ZZX1.cpp	/^   long nprimes;$/;"	m	struct:NewFastCRTHelper	file:
nprimes_vec	deplib/ntl-main/src/ZZX1.cpp	/^   Vec<long> nprimes_vec;  \/\/ length == veclen$/;"	m	struct:NewFastCRTHelper	file:
nrows	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long nrows;$/;"	m	struct:const_mat_window_zz_p	file:
nrows	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long nrows;$/;"	m	struct:mat_window_zz_p	file:
nsintervals	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   long nsintervals; \/\/ number of small intervals$/;"	m	struct:PartitionInfo
nthreads	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  long nthreads;$/;"	m	class:BasicThreadPool
null	deplib/ntl-main/include/NTL/ZZ.h	/^long null() const$/;"	f	class:ZZ
null	deplib/ntl-main/include/NTL/lzz_p.h	/^bool null() const { return ptr == 0; } $/;"	f	class:zz_pContext
ok_to_abandon	deplib/ntl-main/src/ZZXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL long ok_to_abandon = 0;$/;"	v	file:
old_RandomStream	deplib/ntl-main/include/NTL/ZZ.h	/^class old_RandomStream {$/;"	c
old_RandomStream	deplib/ntl-main/src/ZZ.cpp	/^old_RandomStream::old_RandomStream(const unsigned char *key)$/;"	f	class:old_RandomStream
old_gauss	deplib/ntl-main/src/mat_lzz_pTest.cpp	/^long old_gauss(mat_zz_p& M)$/;"	f
old_gauss	deplib/ntl-main/src/mat_lzz_pTest.cpp	/^long old_gauss(mat_zz_p& M, long w)$/;"	f
old_image	deplib/ntl-main/src/mat_lzz_pTest.cpp	/^void old_image(mat_zz_p& X, const mat_zz_p& A)$/;"	f
old_p	deplib/ntl-main/include/NTL/RR.h	/^   long old_p;$/;"	m	class:RROutputPush
old_p	deplib/ntl-main/include/NTL/RR.h	/^   long old_p;$/;"	m	class:RRPush
operator !=	deplib/ntl-main/include/NTL/GF2.h	/^inline long operator!=(GF2 a, GF2 b)  { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2.h	/^inline long operator!=(GF2 a, long b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2.h	/^inline long operator!=(long a, GF2 b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2E.h	/^inline long operator!=(GF2 a, const GF2E& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2E.h	/^inline long operator!=(const GF2E& a, GF2 b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2E.h	/^inline long operator!=(const GF2E& a, const GF2E& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2E.h	/^inline long operator!=(const GF2E& a, long b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2E.h	/^inline long operator!=(long a, const GF2E& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator!=(GF2 a, const GF2EX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator!=(const GF2E& a, const GF2EX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator!=(const GF2EX& a, GF2 b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator!=(const GF2EX& a, const GF2E& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator!=(const GF2EX& a, const GF2EX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator!=(const GF2EX& a, long b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator!=(long a, const GF2EX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2X.h	/^inline long operator!=(GF2 a, const GF2X& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2X.h	/^inline long operator!=(const GF2X& a, GF2 b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2X.h	/^inline long operator!=(const GF2X& a, const GF2X& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2X.h	/^inline long operator!=(const GF2X& a, long b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/GF2X.h	/^inline long operator!=(long a, const GF2X& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/RR.h	/^inline long operator!=(const RR& a, const RR& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/RR.h	/^inline long operator!=(const RR& a, double b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/RR.h	/^inline long operator!=(double a, const RR& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator!=(const CloneablePtr<X>& a, const CloneablePtr<Y>& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator!=(const CopiedPtr<T,P>& a, const CopiedPtr<T,P>& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator!=(const CopiedPtr<X,U>& a, const CopiedPtr<Y,V>& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator!=(const SmartPtr<X>& a, const SmartPtr<Y>& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator!=(const Unique2DArray<X>& a, const Unique2DArray<X>& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator!=(const Unique2DArray<X>& a, const Unique2DArray<Y>& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator!=(const UniqueArray<X>& a, const UniqueArray<X>& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator!=(const UniqueArray<X>& a, const UniqueArray<Y>& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator!=(const UniquePtr<T,P>& a, const UniquePtr<T,P>& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator!=(const UniquePtr<X,U>& a, const UniquePtr<Y,V>& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator!=(const ZZ& a, const ZZ& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator!=(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) != 0; }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator!=(long a, const ZZ& b) { return b != a; }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZX.h	/^inline long operator!=(const ZZ& a, const ZZX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZX.h	/^inline long operator!=(const ZZX& a, const ZZ& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZX.h	/^inline long operator!=(const ZZX& a, const ZZX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZX.h	/^inline long operator!=(const ZZX& a, long b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZX.h	/^inline long operator!=(long a, const ZZX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline long operator!=(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline long operator!=(const ZZ_p& a, long b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline long operator!=(long a, const ZZ_p& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long operator!=(const ZZ_p& a, const ZZ_pE& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long operator!=(const ZZ_pE& a, const ZZ_p& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long operator!=(const ZZ_pE& a, const ZZ_pE& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long operator!=(const ZZ_pE& a, long b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long operator!=(long a, const ZZ_pE& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_p& a, const ZZ_pEX& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator!=(const ZZ_pEX& a, long b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator!=(const long a, const ZZ_pEX& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline long operator!=(const ZZ_p& a, const ZZ_pX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline long operator!=(const ZZ_pX& a, const ZZ_p& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline long operator!=(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline long operator!=(const ZZ_pX& a, long b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline long operator!=(long a, const ZZ_pX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline long operator!=(long a, zz_p b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline long operator!=(zz_p a, long b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline long operator!=(zz_p a, zz_p b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long operator!=(const zz_p& a, const zz_pE& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long operator!=(const zz_pE& a, const zz_p& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long operator!=(const zz_pE& a, const zz_pE& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long operator!=(const zz_pE& a, long b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long operator!=(long a, const zz_pE& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator!=(const long a, const zz_pEX& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_p& a, const zz_pEX& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_pE& a, const zz_pEX& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_pEX& a, const zz_p& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_pEX& a, const zz_pE& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator!=(const zz_pEX& a, long b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline long operator!=(const zz_pX& a, const zz_pX& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline long operator!=(const zz_pX& a, long b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline long operator!=(const zz_pX& a, zz_p b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline long operator!=(long a, const zz_pX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline long operator!=(zz_p a, const zz_pX& b) { return !(a == b); }$/;"	f
operator !=	deplib/ntl-main/include/NTL/matrix.h	/^long operator!=(const Mat<T>& a, const Mat<T>& b)  $/;"	f
operator !=	deplib/ntl-main/include/NTL/pair.h	/^inline long operator!=(const Pair<S,T>& x, const Pair<S,T>& y) $/;"	f
operator !=	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator!=(const quad_float& x, double y) $/;"	f
operator !=	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator!=(double x, const quad_float& y)$/;"	f
operator !=	deplib/ntl-main/include/NTL/vec_GF2.h	/^bool operator!=(const vec_GF2::const_proxy_iterator& a, const vec_GF2::const_proxy_iterator& b) $/;"	f
operator !=	deplib/ntl-main/include/NTL/vec_GF2.h	/^bool operator!=(const vec_GF2::proxy_iterator& a, const vec_GF2::proxy_iterator& b) $/;"	f
operator !=	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline long operator!=(const vec_GF2& a, const vec_GF2& b)$/;"	f
operator !=	deplib/ntl-main/include/NTL/vector.h	/^long operator!=(const Vec<T>& a, const Vec<T>& b) $/;"	f
operator !=	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator!=(const xdouble& a, const xdouble& b) $/;"	f
operator !=	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator!=(const xdouble& a, double b) $/;"	f
operator !=	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator!=(double a, const xdouble& b) $/;"	f
operator !=	deplib/ntl-main/src/WordVector.cpp	/^long operator!=(const WordVector& a, const WordVector& b) $/;"	f
operator !=	deplib/ntl-main/src/quad_float1.cpp	/^long operator!=(const quad_float& x, const quad_float& y)$/;"	f
operator %	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator%(const GF2EX& a, const GF2EX& b)$/;"	f
operator %	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator%(const GF2EX& a, const GF2EXModulus& F)$/;"	f
operator %	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator%(const GF2X& a, const GF2X& b)$/;"	f
operator %	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator%(const GF2X& a, const GF2XModulus& F)$/;"	f
operator %	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator%(const ZZ& a, const ZZ& b)$/;"	f
operator %	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator%(const ZZ& a, long b)$/;"	f
operator %	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator%(const ZZX& a, const ZZX& b)$/;"	f
operator %	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator%(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator %	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator%(const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
operator %	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator%(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator %	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator%(const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
operator %	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator%(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator %	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator%(const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
operator %	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator%(const zz_pX& a, const zz_pX& b)$/;"	f
operator %	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator%(const zz_pX& a, const zz_pXModulus& F)$/;"	f
operator %=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator%=(GF2EX& x, const GF2EX& b)$/;"	f
operator %=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator%=(GF2EX& x, const GF2EXModulus& F)$/;"	f
operator %=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator%=(GF2X& x, const GF2X& b)$/;"	f
operator %=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator%=(GF2X& x, const GF2XModulus& F)$/;"	f
operator %=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator%=(ZZ& x, const ZZ& b)$/;"	f
operator %=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator%=(ZZX& x, const ZZX& b)$/;"	f
operator %=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator%=(ZZ_pEX& x, const ZZ_pEX& b)$/;"	f
operator %=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator%=(ZZ_pEX& x, const ZZ_pEXModulus& F)$/;"	f
operator %=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator%=(ZZ_pX& x, const ZZ_pX& b)$/;"	f
operator %=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator%=(ZZ_pX& x, const ZZ_pXModulus& F)$/;"	f
operator %=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator%=(zz_pEX& x, const zz_pEX& b)$/;"	f
operator %=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator%=(zz_pEX& x, const zz_pEXModulus& F)$/;"	f
operator %=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator%=(zz_pX& x, const zz_pX& b)$/;"	f
operator %=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator%=(zz_pX& x, const zz_pXModulus& F)$/;"	f
operator &	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator&(const ZZ& a, const ZZ& b)$/;"	f
operator &	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator&(const ZZ& a, long b)$/;"	f
operator &	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator&(long a, const ZZ& b)$/;"	f
operator &	deplib/ntl-main/include/NTL/tools.h	/^   const raw_ptr* operator&() const { return &rep; }$/;"	f	class:WrappedPtr
operator &	deplib/ntl-main/include/NTL/tools.h	/^   raw_ptr* operator&() { return &rep; }$/;"	f	class:WrappedPtr
operator &=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator&=(ZZ& x, const ZZ& b) $/;"	f
operator &=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator&=(ZZ& x, long b) $/;"	f
operator ()	deplib/ntl-main/include/NTL/Lazy.h	/^      bool operator()()  const { return building; }$/;"	f	class:Lazy::Builder
operator ()	deplib/ntl-main/include/NTL/WordVector.h	/^   _ntl_ulong& operator()(long i) { return (*this)[i-1]; }  $/;"	f	class:WordVector
operator ()	deplib/ntl-main/include/NTL/WordVector.h	/^   const _ntl_ulong& operator()(long i) const { return (*this)[i-1]; } $/;"	f	class:WordVector
operator ()	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   ZZ_pX& operator() (long i, long j) { return elts[i][j]; }$/;"	f	class:ZZ_pXMatrix
operator ()	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   const ZZ_pX& operator() (long i, long j) const { return elts[i][j]; }$/;"	f	class:ZZ_pXMatrix
operator ()	deplib/ntl-main/include/NTL/lzz_pX.h	/^   const zz_pX& operator() (long i, long j) const { return elts[i][j]; }$/;"	f	class:zz_pXMatrix
operator ()	deplib/ntl-main/include/NTL/lzz_pX.h	/^   zz_pX& operator() (long i, long j) { return elts[i][j]; }$/;"	f	class:zz_pXMatrix
operator ()	deplib/ntl-main/include/NTL/matrix.h	/^      void operator()(Vec<T>& v) { v.FixLength(m); }$/;"	f	struct:Mat::Fixer
operator ()	deplib/ntl-main/include/NTL/matrix.h	/^   Vec<T>& operator()(long i) { return _mat__rep[i-1]; }  $/;"	f	class:Mat
operator ()	deplib/ntl-main/include/NTL/matrix.h	/^   const Vec<T>& operator()(long i) const { return _mat__rep[i-1]; }  $/;"	f	class:Mat
operator ()	deplib/ntl-main/include/NTL/matrix.h	/^   const_reference operator()(long i, long j) const   $/;"	f	class:Mat
operator ()	deplib/ntl-main/include/NTL/matrix.h	/^   reference operator()(long i, long j) { return _mat__rep[i-1][j-1]; }  $/;"	f	class:Mat
operator ()	deplib/ntl-main/include/NTL/vec_GF2.h	/^   const GF2 operator()(long i) const $/;"	f	class:Vec
operator ()	deplib/ntl-main/include/NTL/vec_GF2.h	/^   ref_GF2 operator()(long i) $/;"	f	class:Vec
operator ()	deplib/ntl-main/include/NTL/vector.h	/^   T& operator()(long i) { return (*this)[i-1]; }  $/;"	f	class:Vec
operator ()	deplib/ntl-main/include/NTL/vector.h	/^   const T& operator()(long i) const { return (*this)[i-1]; } $/;"	f	class:Vec
operator ()	deplib/ntl-main/src/GF2EX.cpp	/^   GF2EX& operator() (long i, long j) { return elts[i][j]; }$/;"	f	class:_NTL_GF2EXMatrix
operator ()	deplib/ntl-main/src/GF2EX.cpp	/^   const GF2EX& operator() (long i, long j) const { return elts[i][j]; }$/;"	f	class:_NTL_GF2EXMatrix
operator ()	deplib/ntl-main/src/GF2X1.cpp	/^   GF2X& operator() (long i, long j) { return elts[i][j]; }$/;"	f	class:_NTL_GF2XMatrix
operator ()	deplib/ntl-main/src/GF2X1.cpp	/^   const GF2X& operator() (long i, long j) const { return elts[i][j]; }$/;"	f	class:_NTL_GF2XMatrix
operator ()	deplib/ntl-main/src/ZZ_pEX.cpp	/^   ZZ_pEX& operator() (long i, long j) { return elts[i][j]; }$/;"	f	class:_NTL_ZZ_pEXMatrix
operator ()	deplib/ntl-main/src/ZZ_pEX.cpp	/^   const ZZ_pEX& operator() (long i, long j) const { return elts[i][j]; }$/;"	f	class:_NTL_ZZ_pEXMatrix
operator ()	deplib/ntl-main/src/lzz_pEX.cpp	/^   const zz_pEX& operator() (long i, long j) const { return elts[i][j]; }$/;"	f	class:_NTL_zz_pEXMatrix
operator ()	deplib/ntl-main/src/lzz_pEX.cpp	/^   zz_pEX& operator() (long i, long j) { return elts[i][j]; }$/;"	f	class:_NTL_zz_pEXMatrix
operator *	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator*(GF2 a, GF2 b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator*(GF2 a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator*(long a, GF2 b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator*(GF2 a, const GF2E& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator*(const GF2E& a, GF2 b) $/;"	f
operator *	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator*(const GF2E& a, const GF2E& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator*(const GF2E& a, long b) $/;"	f
operator *	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator*(long a, const GF2E& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator*(GF2 a, const GF2EX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator*(const GF2E& a, const GF2EX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator*(const GF2EX& a, GF2 b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator*(const GF2EX& a, const GF2E& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator*(const GF2EX& a, const GF2EX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator*(const GF2EX& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator*(long a, const GF2EX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator*(GF2 a, const GF2X& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator*(const GF2X& a, GF2 b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator*(const GF2X& a, const GF2X& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator*(const GF2X& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator*(long a, const GF2X& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/Lazy.h	/^   const T& operator*()  const { return *data; }$/;"	f	class:Lazy
operator *	deplib/ntl-main/include/NTL/PD.h	/^operator*(PD<2> a, PD<2> b) $/;"	f
operator *	deplib/ntl-main/include/NTL/PD.h	/^operator*(PD<4> a, PD<4> b) $/;"	f
operator *	deplib/ntl-main/include/NTL/PD.h	/^operator*(PD<8> a, PD<8> b) $/;"	f
operator *	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator*(const RR& a, const RR& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator*(const RR& a, double b)$/;"	f
operator *	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator*(double a, const RR& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T& operator*()  const { return *dp; }$/;"	f	class:CloneablePtr
operator *	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T& operator*()  const { return *dp; }$/;"	f	class:CopiedPtr
operator *	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T& operator*()  const { return *dp; }$/;"	f	class:SmartPtr
operator *	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T& operator*()  const { return *dp; }$/;"	f	class:UniquePtr
operator *	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator*(const ZZ& a, const ZZ& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator*(const ZZ& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator*(long a, const ZZ& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator*(const ZZ& a, const ZZX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator*(const ZZX& a, const ZZ& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator*(const ZZX& a, const ZZX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator*(const ZZX& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator*(long a, const ZZX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator*(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator*(const ZZ_p& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator*(long a, const ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator*(const ZZ_p& a, const ZZ_pE& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator*(const ZZ_pE& a, const ZZ_p& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator*(const ZZ_pE& a, const ZZ_pE& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator*(const ZZ_pE& a, long b) $/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator*(long a, const ZZ_pE& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_p& a, const ZZ_pEX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(const ZZ_pEX& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator*(long a, const ZZ_pEX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator*(const ZZ_p& a, const ZZ_pX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator*(const ZZ_pX& a, const ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator*(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator*(const ZZ_pX& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator*(long a, const ZZ_pX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator*(long a, zz_p b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator*(zz_p a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator*(zz_p a, zz_p b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator*(const zz_p& a, const zz_pE& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator*(const zz_pE& a, const zz_p& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator*(const zz_pE& a, const zz_pE& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator*(const zz_pE& a, long b) $/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator*(long a, const zz_pE& b) $/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_p& a, const zz_pEX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_pE& a, const zz_pEX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_pEX& a, const zz_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_pEX& a, const zz_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(const zz_pEX& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator*(long a, const zz_pEX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator*(const zz_pX& a, const zz_pX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator*(const zz_pX& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator*(const zz_pX& a, zz_p b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator*(long a, const zz_pX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator*(zz_p a, const zz_pX& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 operator*(GF2 a, const mat_GF2& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 operator*(const mat_GF2& a, GF2 b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 operator*(const mat_GF2& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 operator*(long a, const mat_GF2& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(GF2 a, const mat_GF2E& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(const GF2E& a, const mat_GF2E& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(const mat_GF2E& a, GF2 b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(const mat_GF2E& a, const GF2E& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(const mat_GF2E& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E operator*(long a, const mat_GF2E& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR operator*(const RR& a, const mat_RR& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR operator*(const mat_RR& a, const RR& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR operator*(const mat_RR& a, double b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR operator*(double a, const mat_RR& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ operator*(const ZZ& a, const mat_ZZ& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ operator*(const mat_ZZ& a, const ZZ& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ operator*(const mat_ZZ& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ operator*(long a, const mat_ZZ& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p operator*(const ZZ_p& a, const mat_ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p operator*(const mat_ZZ_p& a, const ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p operator*(const mat_ZZ_p& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p operator*(long a, const mat_ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(const ZZ_p& a, const mat_ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(const ZZ_pE& a, const mat_ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(const mat_ZZ_pE& a, const ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(const mat_ZZ_pE& a, const ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(const mat_ZZ_pE& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE operator*(long a, const mat_ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p operator*(const mat_zz_p& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p operator*(const mat_zz_p& a, zz_p b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p operator*(long a, const mat_zz_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p operator*(zz_p a, const mat_zz_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(const mat_zz_pE& a, const zz_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(const mat_zz_pE& a, const zz_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(const mat_zz_pE& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(const zz_p& a, const mat_zz_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(const zz_pE& a, const mat_zz_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE operator*(long a, const mat_zz_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator*(const quad_float& x, const quad_float& y)$/;"	f
operator *	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator*(const quad_float& x, double y )$/;"	f
operator *	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator*(double x, const quad_float& y)$/;"	f
operator *	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double operator*(wide_double x, wide_double y)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const GF2 operator*() const { return rep.make_GF2(); }$/;"	f	struct:Vec::const_proxy_iterator
operator *	deplib/ntl-main/include/NTL/vec_GF2.h	/^      ref_GF2 operator*() const { return rep.make_ref_GF2(); }$/;"	f	struct:Vec::proxy_iterator
operator *	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline GF2 operator*(const vec_GF2& a, const vec_GF2& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2 operator*(GF2 a, const vec_GF2& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2 operator*(const vec_GF2& a, GF2 b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2 operator*(const vec_GF2& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2 operator*(long a, const vec_GF2& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(GF2 a, const vec_GF2E& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(const GF2E& a, const vec_GF2E& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(const vec_GF2E& a, GF2 b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(const vec_GF2E& a, const GF2E& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(const vec_GF2E& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E operator*(long a, const vec_GF2E& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_RR.h	/^inline vec_RR operator*(const RR& a, const vec_RR& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_RR.h	/^inline vec_RR operator*(const vec_RR& a, const RR& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_RR.h	/^inline vec_RR operator*(const vec_RR& a, double b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_RR.h	/^inline vec_RR operator*(double a, const vec_RR& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline vec_ZZ operator*(const ZZ& a, const vec_ZZ& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline vec_ZZ operator*(const vec_ZZ& a, const ZZ& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline vec_ZZ operator*(const vec_ZZ& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline vec_ZZ operator*(long a, const vec_ZZ& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p operator*(const ZZ_p& a, const vec_ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p operator*(const vec_ZZ_p& a, const ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p operator*(const vec_ZZ_p& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p operator*(long a, const vec_ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(const ZZ_p& a, const vec_ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(const ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(const vec_ZZ_pE& a, const ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(const vec_ZZ_pE& a, const ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(const vec_ZZ_pE& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE operator*(long a, const vec_ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p operator*(const vec_zz_p& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p operator*(const vec_zz_p& a, zz_p b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p operator*(long a, const vec_zz_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p operator*(zz_p a, const vec_zz_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(const vec_zz_pE& a, const zz_p& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(const vec_zz_pE& a, const zz_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(const vec_zz_pE& a, long b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(const zz_p& a, const vec_zz_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(const zz_pE& a, const vec_zz_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE operator*(long a, const vec_zz_pE& b)$/;"	f
operator *	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble operator*(const xdouble& a, double b)$/;"	f
operator *	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble operator*(double a, const xdouble& b)$/;"	f
operator *	deplib/ntl-main/src/mat_GF2.cpp	/^mat_GF2 operator*(const mat_GF2& a, const mat_GF2& b)$/;"	f
operator *	deplib/ntl-main/src/mat_GF2.cpp	/^vec_GF2 operator*(const mat_GF2& a, const vec_GF2& b)$/;"	f
operator *	deplib/ntl-main/src/mat_GF2.cpp	/^vec_GF2 operator*(const vec_GF2& a, const mat_GF2& b)$/;"	f
operator *	deplib/ntl-main/src/mat_GF2E.cpp	/^mat_GF2E operator*(const mat_GF2E& a, const mat_GF2E& b)$/;"	f
operator *	deplib/ntl-main/src/mat_GF2E.cpp	/^vec_GF2E operator*(const mat_GF2E& a, const vec_GF2E& b)$/;"	f
operator *	deplib/ntl-main/src/mat_GF2E.cpp	/^vec_GF2E operator*(const vec_GF2E& a, const mat_GF2E& b)$/;"	f
operator *	deplib/ntl-main/src/mat_RR.cpp	/^mat_RR operator*(const mat_RR& a, const mat_RR& b)$/;"	f
operator *	deplib/ntl-main/src/mat_RR.cpp	/^vec_RR operator*(const mat_RR& a, const vec_RR& b)$/;"	f
operator *	deplib/ntl-main/src/mat_RR.cpp	/^vec_RR operator*(const vec_RR& a, const mat_RR& b)$/;"	f
operator *	deplib/ntl-main/src/mat_ZZ.cpp	/^mat_ZZ operator*(const mat_ZZ& a, const mat_ZZ& b)$/;"	f
operator *	deplib/ntl-main/src/mat_ZZ.cpp	/^vec_ZZ operator*(const mat_ZZ& a, const vec_ZZ& b)$/;"	f
operator *	deplib/ntl-main/src/mat_ZZ.cpp	/^vec_ZZ operator*(const vec_ZZ& a, const mat_ZZ& b)$/;"	f
operator *	deplib/ntl-main/src/mat_ZZ_p.cpp	/^mat_ZZ_p operator*(const mat_ZZ_p& a, const mat_ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/src/mat_ZZ_p.cpp	/^vec_ZZ_p operator*(const mat_ZZ_p& a, const vec_ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/src/mat_ZZ_p.cpp	/^vec_ZZ_p operator*(const vec_ZZ_p& a, const mat_ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^mat_ZZ_pE operator*(const mat_ZZ_pE& a, const mat_ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^vec_ZZ_pE operator*(const mat_ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^vec_ZZ_pE operator*(const vec_ZZ_pE& a, const mat_ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/src/mat_lzz_p.cpp	/^mat_zz_p operator*(const mat_zz_p& a, const mat_zz_p& b)$/;"	f
operator *	deplib/ntl-main/src/mat_lzz_p.cpp	/^vec_zz_p operator*(const mat_zz_p& a, const vec_zz_p& b)$/;"	f
operator *	deplib/ntl-main/src/mat_lzz_p.cpp	/^vec_zz_p operator*(const vec_zz_p& a, const mat_zz_p& b)$/;"	f
operator *	deplib/ntl-main/src/mat_lzz_pE.cpp	/^mat_zz_pE operator*(const mat_zz_pE& a, const mat_zz_pE& b)$/;"	f
operator *	deplib/ntl-main/src/mat_lzz_pE.cpp	/^vec_zz_pE operator*(const mat_zz_pE& a, const vec_zz_pE& b)$/;"	f
operator *	deplib/ntl-main/src/mat_lzz_pE.cpp	/^vec_zz_pE operator*(const vec_zz_pE& a, const mat_zz_pE& b)$/;"	f
operator *	deplib/ntl-main/src/vec_GF2E.cpp	/^GF2E operator*(const vec_GF2E& a, const vec_GF2E& b)$/;"	f
operator *	deplib/ntl-main/src/vec_RR.cpp	/^RR operator*(const vec_RR& a, const vec_RR& b)$/;"	f
operator *	deplib/ntl-main/src/vec_ZZ.cpp	/^ZZ operator*(const vec_ZZ& a, const vec_ZZ& b)$/;"	f
operator *	deplib/ntl-main/src/vec_ZZ_p.cpp	/^ZZ_p operator*(const vec_ZZ_p& a, const vec_ZZ_p& b)$/;"	f
operator *	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^ZZ_pE operator*(const vec_ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
operator *	deplib/ntl-main/src/vec_lzz_p.cpp	/^zz_p operator*(const vec_zz_p& a, const vec_zz_p& b)$/;"	f
operator *	deplib/ntl-main/src/vec_lzz_pE.cpp	/^zz_pE operator*(const vec_zz_pE& a, const vec_zz_pE& b)$/;"	f
operator *	deplib/ntl-main/src/xdouble.cpp	/^xdouble operator*(const xdouble& a, const xdouble& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2& operator*=(GF2& x, GF2 b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2& operator*=(GF2& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2.h	/^inline ref_GF2 operator*=(ref_GF2 x, GF2 b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2.h	/^inline ref_GF2 operator*=(ref_GF2 x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator*=(GF2E& x, GF2 b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator*=(GF2E& x, const GF2E& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator*=(GF2E& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator*=(GF2EX& x, GF2 b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator*=(GF2EX& x, const GF2E& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator*=(GF2EX& x, const GF2EX& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator*=(GF2EX& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator*=(GF2X& x, GF2 b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator*=(GF2X& x, const GF2X& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator*=(GF2X& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/PD.h	/^operator*=(PD<2>& a, PD<2> b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/PD.h	/^operator*=(PD<4>& a, PD<4> b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/PD.h	/^operator*=(PD<8>& a, PD<8> b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/RR.h	/^inline RR& operator*=(RR& x, const RR& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/RR.h	/^inline RR& operator*=(RR& x, double b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator*=(ZZ& x, const ZZ& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator*=(ZZ& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator*=(ZZX& x, const ZZ& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator*=(ZZX& x, const ZZX& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator*=(ZZX& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& operator*=(ZZ_p& x, const ZZ_p& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& operator*=(ZZ_p& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator*=(ZZ_pE& x, const ZZ_p& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator*=(ZZ_pE& x, const ZZ_pE& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator*=(ZZ_pE& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator*=(ZZ_pEX& x, const ZZ_p& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator*=(ZZ_pEX& x, const ZZ_pE& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator*=(ZZ_pEX& x, const ZZ_pEX& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator*=(ZZ_pEX& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator*=(ZZ_pX& x, const ZZ_p& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator*=(ZZ_pX& x, const ZZ_pX& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator*=(ZZ_pX& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& operator*=(zz_p& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& operator*=(zz_p& x, zz_p b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator*=(zz_pE& x, const zz_p& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator*=(zz_pE& x, const zz_pE& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator*=(zz_pE& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator*=(zz_pEX& x, const zz_p& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator*=(zz_pEX& x, const zz_pE& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator*=(zz_pEX& x, const zz_pEX& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator*=(zz_pEX& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator*=(zz_pX& x, const zz_pX& b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator*=(zz_pX& x, long b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator*=(zz_pX& x, zz_p b)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2& operator*=(mat_GF2& x, GF2 a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2& operator*=(mat_GF2& x, const mat_GF2& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2& operator*=(mat_GF2& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline vec_GF2& operator*=(vec_GF2& x, const mat_GF2& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator*=(mat_GF2E& x, GF2 a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator*=(mat_GF2E& x, const GF2E& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator*=(mat_GF2E& x, const mat_GF2E& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator*=(mat_GF2E& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline vec_GF2E& operator*=(vec_GF2E& x, const mat_GF2E& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR& operator*=(mat_RR& x, const RR& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR& operator*=(mat_RR& x, const mat_RR& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR& operator*=(mat_RR& x, double a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_RR.h	/^inline vec_RR& operator*=(vec_RR& x, const mat_RR& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ& operator*=(mat_ZZ& x, const ZZ& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ& operator*=(mat_ZZ& x, const mat_ZZ& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ& operator*=(mat_ZZ& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline vec_ZZ& operator*=(vec_ZZ& x, const mat_ZZ& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p& operator*=(mat_ZZ_p& x, const ZZ_p& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p& operator*=(mat_ZZ_p& x, const mat_ZZ_p& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p& operator*=(mat_ZZ_p& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline vec_ZZ_p& operator*=(vec_ZZ_p& x, const mat_ZZ_p& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator*=(mat_ZZ_pE& x, const ZZ_p& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator*=(mat_ZZ_pE& x, const ZZ_pE& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator*=(mat_ZZ_pE& x, const mat_ZZ_pE& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator*=(mat_ZZ_pE& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline vec_ZZ_pE& operator*=(vec_ZZ_pE& x, const mat_ZZ_pE& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p& operator*=(mat_zz_p& x, const mat_zz_p& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p& operator*=(mat_zz_p& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p& operator*=(mat_zz_p& x, zz_p a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline vec_zz_p& operator*=(vec_zz_p& x, const mat_zz_p& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator*=(mat_zz_pE& x, const mat_zz_pE& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator*=(mat_zz_pE& x, const zz_p& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator*=(mat_zz_pE& x, const zz_pE& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator*=(mat_zz_pE& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline vec_zz_pE& operator*=(vec_zz_pE& x, const mat_zz_pE& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& operator*= (quad_float& x, const quad_float& y)$/;"	f
operator *=	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& operator*= (quad_float& x, double y)$/;"	f
operator *=	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double& operator*=(wide_double& x, wide_double y)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2& operator*=(vec_GF2& x, GF2 a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2& operator*=(vec_GF2& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E& operator*=(vec_GF2E& x, GF2 a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E& operator*=(vec_GF2E& x, const GF2E& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E& operator*=(vec_GF2E& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_RR.h	/^inline vec_RR& operator*=(vec_RR& x, const RR& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_RR.h	/^inline vec_RR& operator*=(vec_RR& x, double a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline vec_ZZ& operator*=(vec_ZZ& x, const ZZ& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline vec_ZZ& operator*=(vec_ZZ& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p& operator*=(vec_ZZ_p& x, const ZZ_p& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p& operator*=(vec_ZZ_p& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE& operator*=(vec_ZZ_pE& x, const ZZ_p& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE& operator*=(vec_ZZ_pE& x, const ZZ_pE& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE& operator*=(vec_ZZ_pE& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p& operator*=(vec_zz_p& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p& operator*=(vec_zz_p& x, zz_p a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE& operator*=(vec_zz_pE& x, const zz_p& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE& operator*=(vec_zz_pE& x, const zz_pE& a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE& operator*=(vec_zz_pE& x, long a)$/;"	f
operator *=	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& operator*=(xdouble& a, const xdouble& b) $/;"	f
operator *=	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& operator*=(xdouble& a, double b) $/;"	f
operator +	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator+(GF2 a, GF2 b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator+(GF2 a, long b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator+(long a, GF2 b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator+(GF2 a, const GF2E& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator+(const GF2E& a, GF2 b) $/;"	f
operator +	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator+(const GF2E& a, const GF2E& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator+(const GF2E& a, long b) $/;"	f
operator +	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator+(long a, const GF2E& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator+(GF2 a, const GF2EX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator+(const GF2E& a, const GF2EX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator+(const GF2EX& a, GF2 b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator+(const GF2EX& a, const GF2E& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator+(const GF2EX& a, const GF2EX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator+(const GF2EX& a, long b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator+(long a, const GF2EX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator+(GF2 a, const GF2X& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator+(const GF2X& a, GF2 b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator+(const GF2X& a, const GF2X& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator+(const GF2X& a, long b)$/;"	f
operator +	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator+(long a, const GF2X& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/PD.h	/^operator+(PD<2> a, PD<2> b) $/;"	f
operator +	deplib/ntl-main/include/NTL/PD.h	/^operator+(PD<4> a, PD<4> b) $/;"	f
operator +	deplib/ntl-main/include/NTL/PD.h	/^operator+(PD<8> a, PD<8> b) $/;"	f
operator +	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator+(const RR& a, const RR& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator+(const RR& a, double b)$/;"	f
operator +	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator+(double a, const RR& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator+(const ZZ& a, const ZZ& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator+(const ZZ& a, long b) $/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator+(long  a, const ZZ& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator+(const ZZ& a, const ZZX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator+(const ZZX& a, const ZZ& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator+(const ZZX& a, const ZZX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator+(const ZZX& a, long b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator+(long a, const ZZX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator+(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator+(const ZZ_p& a, long b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator+(long a, const ZZ_p& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator+(const ZZ_p& a, const ZZ_pE& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator+(const ZZ_pE& a, const ZZ_p& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator+(const ZZ_pE& a, const ZZ_pE& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator+(const ZZ_pE& a, long b) $/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator+(long a, const ZZ_pE& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_p& a, const ZZ_pEX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(const ZZ_pEX& a, long b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator+(long a, const ZZ_pEX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator+(const ZZ_p& a, const ZZ_pX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator+(const ZZ_pX& a, const ZZ_p& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator+(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator+(const ZZ_pX& a, long b)$/;"	f
operator +	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator+(long a, const ZZ_pX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator+(long a, zz_p b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator+(zz_p a, long b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator+(zz_p a, zz_p b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator+(const zz_p& a, const zz_pE& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator+(const zz_pE& a, const zz_p& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator+(const zz_pE& a, const zz_pE& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator+(const zz_pE& a, long b) $/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator+(long a, const zz_pE& b) $/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_p& a, const zz_pEX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_pE& a, const zz_pEX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_pEX& a, const zz_p& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_pEX& a, const zz_pE& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(const zz_pEX& a, long b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator+(long a, const zz_pEX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator+(const zz_pX& a, const zz_pX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator+(const zz_pX& a, long b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator+(const zz_pX& a, zz_p b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator+(long a, const zz_pX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator+(zz_p a, const zz_pX& b)$/;"	f
operator +	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator+(const quad_float& x, const quad_float& y)$/;"	f
operator +	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator+(const quad_float& x, double y )$/;"	f
operator +	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator+(double x, const quad_float& y)$/;"	f
operator +	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double operator+(wide_double x, wide_double y)$/;"	f
operator +	deplib/ntl-main/include/NTL/tools.h	/^operator+(scope_guard_builder b, F&& f)$/;"	f
operator +	deplib/ntl-main/include/NTL/vec_GF2.h	/^vec_GF2::const_proxy_iterator operator+(const vec_GF2::const_proxy_iterator& a, long x)$/;"	f
operator +	deplib/ntl-main/include/NTL/vec_GF2.h	/^vec_GF2::const_proxy_iterator operator+(long x, const vec_GF2::const_proxy_iterator& a)$/;"	f
operator +	deplib/ntl-main/include/NTL/vec_GF2.h	/^vec_GF2::proxy_iterator operator+(const vec_GF2::proxy_iterator& a, long x)$/;"	f
operator +	deplib/ntl-main/include/NTL/vec_GF2.h	/^vec_GF2::proxy_iterator operator+(long x, const vec_GF2::proxy_iterator& a)$/;"	f
operator +	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble operator+(const xdouble& a, double b)$/;"	f
operator +	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble operator+(double a, const xdouble& b)$/;"	f
operator +	deplib/ntl-main/src/mat_GF2.cpp	/^mat_GF2 operator+(const mat_GF2& a, const mat_GF2& b)$/;"	f
operator +	deplib/ntl-main/src/mat_GF2E.cpp	/^mat_GF2E operator+(const mat_GF2E& a, const mat_GF2E& b)$/;"	f
operator +	deplib/ntl-main/src/mat_RR.cpp	/^mat_RR operator+(const mat_RR& a, const mat_RR& b)$/;"	f
operator +	deplib/ntl-main/src/mat_ZZ.cpp	/^mat_ZZ operator+(const mat_ZZ& a, const mat_ZZ& b)$/;"	f
operator +	deplib/ntl-main/src/mat_ZZ_p.cpp	/^mat_ZZ_p operator+(const mat_ZZ_p& a, const mat_ZZ_p& b)$/;"	f
operator +	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^mat_ZZ_pE operator+(const mat_ZZ_pE& a, const mat_ZZ_pE& b)$/;"	f
operator +	deplib/ntl-main/src/mat_lzz_p.cpp	/^mat_zz_p operator+(const mat_zz_p& a, const mat_zz_p& b)$/;"	f
operator +	deplib/ntl-main/src/mat_lzz_pE.cpp	/^mat_zz_pE operator+(const mat_zz_pE& a, const mat_zz_pE& b)$/;"	f
operator +	deplib/ntl-main/src/vec_GF2.cpp	/^vec_GF2 operator+(const vec_GF2& a, const vec_GF2& b)$/;"	f
operator +	deplib/ntl-main/src/vec_GF2E.cpp	/^vec_GF2E operator+(const vec_GF2E& a, const vec_GF2E& b)$/;"	f
operator +	deplib/ntl-main/src/vec_RR.cpp	/^vec_RR operator+(const vec_RR& a, const vec_RR& b)$/;"	f
operator +	deplib/ntl-main/src/vec_ZZ.cpp	/^vec_ZZ operator+(const vec_ZZ& a, const vec_ZZ& b)$/;"	f
operator +	deplib/ntl-main/src/vec_ZZ_p.cpp	/^vec_ZZ_p operator+(const vec_ZZ_p& a, const vec_ZZ_p& b)$/;"	f
operator +	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^vec_ZZ_pE operator+(const vec_ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
operator +	deplib/ntl-main/src/vec_lzz_p.cpp	/^vec_zz_p operator+(const vec_zz_p& a, const vec_zz_p& b)$/;"	f
operator +	deplib/ntl-main/src/vec_lzz_pE.cpp	/^vec_zz_pE operator+(const vec_zz_pE& a, const vec_zz_pE& b)$/;"	f
operator +	deplib/ntl-main/src/xdouble.cpp	/^xdouble operator+(const xdouble& a, const xdouble& b)$/;"	f
operator ++	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2& operator++(GF2& x) { return x = x + 1; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/GF2.h	/^inline ref_GF2 operator++(ref_GF2 x) { return x = x + 1; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/GF2.h	/^inline void operator++(GF2& x, int) { x = x + 1; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/GF2.h	/^inline void operator++(ref_GF2 x, int) { x = x + 1; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator++(GF2E& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/GF2E.h	/^inline void operator++(GF2E& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator++(GF2EX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void operator++(GF2EX& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator++(GF2X& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/GF2X.h	/^inline void operator++(GF2X& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/RR.h	/^inline RR& operator++(RR& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/RR.h	/^inline void operator++(RR& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator++(ZZ& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZ.h	/^inline void operator++(ZZ& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator++(ZZX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZX.h	/^inline void operator++(ZZX& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& operator++(ZZ_p& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void operator++(ZZ_p& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator++(ZZ_pE& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void operator++(ZZ_pE& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator++(ZZ_pEX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void operator++(ZZ_pEX& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator++(ZZ_pX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void operator++(ZZ_pX& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void operator++(zz_p& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& operator++(zz_p& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void operator++(zz_pE& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator++(zz_pE& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void operator++(zz_pEX& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator++(zz_pEX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void operator++(zz_pX& x, int) { add(x, x, 1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator++(zz_pX& x) { add(x, x, 1); return x; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& operator++(quad_float& a) { a += 1.0; return a; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/quad_float.h	/^inline void operator++(quad_float& a, int) { a += 1.0; }$/;"	f
operator ++	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const_proxy_iterator  operator++(int) { const_proxy_iterator t = *this; rep.inc(); return t; }$/;"	f	struct:Vec::const_proxy_iterator
operator ++	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const_proxy_iterator& operator++() { rep.inc(); return *this; }$/;"	f	struct:Vec::const_proxy_iterator
operator ++	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator  operator++(int) { proxy_iterator t = *this; rep.inc(); return t; }$/;"	f	struct:Vec::proxy_iterator
operator ++	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator& operator++() { rep.inc(); return *this; }$/;"	f	struct:Vec::proxy_iterator
operator ++	deplib/ntl-main/include/NTL/xdouble.h	/^inline void operator++(xdouble& a, int) { a = a + to_xdouble(1); }$/;"	f
operator ++	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& operator++(xdouble& a) { a = a + to_xdouble(1); return a; }$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2& operator+=(GF2& x, GF2 b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2& operator+=(GF2& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2.h	/^inline ref_GF2 operator+=(ref_GF2 x, GF2 b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2.h	/^inline ref_GF2 operator+=(ref_GF2 x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator+=(GF2E& x, GF2 b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator+=(GF2E& x, const GF2E& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator+=(GF2E& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator+=(GF2EX& x, GF2 b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator+=(GF2EX& x, const GF2E& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator+=(GF2EX& x, const GF2EX& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator+=(GF2EX& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator+=(GF2X& x, GF2 b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator+=(GF2X& x, const GF2X& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator+=(GF2X& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/PD.h	/^operator+=(PD<2>& a, PD<2> b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/PD.h	/^operator+=(PD<4>& a, PD<4> b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/PD.h	/^operator+=(PD<8>& a, PD<8> b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/RR.h	/^inline RR& operator+=(RR& x, const RR& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/RR.h	/^inline RR& operator+=(RR& x, double b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator+=(ZZ& x, const ZZ& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator+=(ZZ& x, long a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator+=(ZZX& x, const ZZ& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator+=(ZZX& x, const ZZX& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator+=(ZZX& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& operator+=(ZZ_p& x, const ZZ_p& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& operator+=(ZZ_p& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator+=(ZZ_pE& x, const ZZ_p& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator+=(ZZ_pE& x, const ZZ_pE& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator+=(ZZ_pE& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator+=(ZZ_pEX& x, const ZZ_p& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator+=(ZZ_pEX& x, const ZZ_pE& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator+=(ZZ_pEX& x, const ZZ_pEX& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator+=(ZZ_pEX& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator+=(ZZ_pX& x, const ZZ_p& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator+=(ZZ_pX& x, const ZZ_pX& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator+=(ZZ_pX& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& operator+=(zz_p& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& operator+=(zz_p& x, zz_p b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator+=(zz_pE& x, const zz_p& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator+=(zz_pE& x, const zz_pE& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator+=(zz_pE& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator+=(zz_pEX& x, const zz_p& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator+=(zz_pEX& x, const zz_pE& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator+=(zz_pEX& x, const zz_pEX& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator+=(zz_pEX& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator+=(zz_pX& x, const zz_pX& b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator+=(zz_pX& x, long b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator+=(zz_pX& x, zz_p b)$/;"	f
operator +=	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2& operator+=(mat_GF2& x, const mat_GF2& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator+=(mat_GF2E& x, const mat_GF2E& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR& operator+=(mat_RR& x, const mat_RR& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ& operator+=(mat_ZZ& x, const mat_ZZ& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p& operator+=(mat_ZZ_p& x, const mat_ZZ_p& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator+=(mat_ZZ_pE& x, const mat_ZZ_pE& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p& operator+=(mat_zz_p& x, const mat_zz_p& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator+=(mat_zz_pE& x, const mat_zz_pE& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& operator += (quad_float& x, double y)$/;"	f
operator +=	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& operator+= (quad_float& x, const quad_float& y)$/;"	f
operator +=	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double& operator+=(wide_double& x, wide_double y)$/;"	f
operator +=	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const_proxy_iterator& operator+=(long x) { rep.add(x); return *this; }$/;"	f	struct:Vec::const_proxy_iterator
operator +=	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator& operator+=(long x) { rep.add(x); return *this; }$/;"	f	struct:Vec::proxy_iterator
operator +=	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2& operator+=(vec_GF2& x, const vec_GF2& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E& operator+=(vec_GF2E& x, const vec_GF2E& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/vec_RR.h	/^inline vec_RR& operator+=(vec_RR& x, const vec_RR& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline vec_ZZ& operator+=(vec_ZZ& x, const vec_ZZ& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p& operator+=(vec_ZZ_p& x, const vec_ZZ_p& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE& operator+=(vec_ZZ_pE& x, const vec_ZZ_pE& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p& operator+=(vec_zz_p& x, const vec_zz_p& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE& operator+=(vec_zz_pE& x, const vec_zz_pE& a)$/;"	f
operator +=	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& operator+=(xdouble& a, const xdouble& b) $/;"	f
operator +=	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& operator+=(xdouble& a, double b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator-(GF2 a)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator-(GF2 a, GF2 b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator-(GF2 a, long b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator-(long a, GF2 b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator-(GF2 a, const GF2E& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator-(const GF2E& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator-(const GF2E& a, GF2 b) $/;"	f
operator -	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator-(const GF2E& a, const GF2E& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator-(const GF2E& a, long b) $/;"	f
operator -	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator-(long a, const GF2E& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator-(GF2 a, const GF2EX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2E& a, const GF2EX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2EX& a) $/;"	f
operator -	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2EX& a, GF2 b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2EX& a, const GF2E& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2EX& a, const GF2EX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator-(const GF2EX& a, long b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator-(long a, const GF2EX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator-(GF2 a, const GF2X& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator-(const GF2X& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator-(const GF2X& a, GF2 b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator-(const GF2X& a, const GF2X& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator-(const GF2X& a, long b)$/;"	f
operator -	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator-(long a, const GF2X& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/PD.h	/^operator-(PD<2> a, PD<2> b) $/;"	f
operator -	deplib/ntl-main/include/NTL/PD.h	/^operator-(PD<4> a, PD<4> b) $/;"	f
operator -	deplib/ntl-main/include/NTL/PD.h	/^operator-(PD<8> a, PD<8> b) $/;"	f
operator -	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator-(const RR& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator-(const RR& a, const RR& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator-(const RR& a, double b)$/;"	f
operator -	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator-(double a, const RR& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator-(const ZZ& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator-(const ZZ& a, const ZZ& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator-(const ZZ& a, long b) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator-(long  a, const ZZ& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator-(const ZZ& a, const ZZX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator-(const ZZX& a) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator-(const ZZX& a, const ZZ& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator-(const ZZX& a, const ZZX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator-(const ZZX& a, long b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator-(long a, const ZZX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator-(const ZZ_p& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator-(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator-(const ZZ_p& a, long b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator-(long a, const ZZ_p& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(const ZZ_p& a, const ZZ_pE& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(const ZZ_pE& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(const ZZ_pE& a, const ZZ_p& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(const ZZ_pE& a, const ZZ_pE& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(const ZZ_pE& a, long b) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator-(long a, const ZZ_pE& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_p& a, const ZZ_pEX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pEX& a) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(const ZZ_pEX& a, long b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator-(long a, const ZZ_pEX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(const ZZ_p& a, const ZZ_pX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(const ZZ_pX& a) $/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(const ZZ_pX& a, const ZZ_p& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(const ZZ_pX& a, long b)$/;"	f
operator -	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator-(long a, const ZZ_pX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator-(long a, zz_p b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator-(zz_p a)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator-(zz_p a, long b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator-(zz_p a, zz_p b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator-(const zz_p& a, const zz_pE& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator-(const zz_pE& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator-(const zz_pE& a, const zz_p& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator-(const zz_pE& a, const zz_pE& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator-(const zz_pE& a, long b) $/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator-(long a, const zz_pE& b) $/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_p& a, const zz_pEX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pE& a, const zz_pEX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pEX& a) $/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pEX& a, const zz_p& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pEX& a, const zz_pE& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(const zz_pEX& a, long b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator-(long a, const zz_pEX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator-(const zz_pX& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator-(const zz_pX& a, const zz_pX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator-(const zz_pX& a, long b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator-(const zz_pX& a, zz_p b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator-(long a, const zz_pX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator-(zz_p a, const zz_pX& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 operator-(const mat_GF2& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator-(const quad_float& x)$/;"	f
operator -	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator-(const quad_float& x, const quad_float& y)$/;"	f
operator -	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator-(const quad_float& x, double y )$/;"	f
operator -	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator-(double x, const quad_float& y)$/;"	f
operator -	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double operator-(wide_double x, wide_double y)$/;"	f
operator -	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2 operator-(const vec_GF2& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/vec_GF2.h	/^long operator-(const vec_GF2::const_proxy_iterator& a, const vec_GF2::const_proxy_iterator& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/vec_GF2.h	/^long operator-(const vec_GF2::proxy_iterator& a, const vec_GF2::proxy_iterator& b)$/;"	f
operator -	deplib/ntl-main/include/NTL/vec_GF2.h	/^vec_GF2::const_proxy_iterator operator-(const vec_GF2::const_proxy_iterator& a, long x)$/;"	f
operator -	deplib/ntl-main/include/NTL/vec_GF2.h	/^vec_GF2::const_proxy_iterator operator-(long x, const vec_GF2::const_proxy_iterator& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/vec_GF2.h	/^vec_GF2::proxy_iterator operator-(const vec_GF2::proxy_iterator& a, long x)$/;"	f
operator -	deplib/ntl-main/include/NTL/vec_GF2.h	/^vec_GF2::proxy_iterator operator-(long x, const vec_GF2::proxy_iterator& a)$/;"	f
operator -	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble operator-(const xdouble& a, double b)$/;"	f
operator -	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble operator-(double a, const xdouble& b)$/;"	f
operator -	deplib/ntl-main/src/mat_GF2.cpp	/^mat_GF2 operator-(const mat_GF2& a, const mat_GF2& b)$/;"	f
operator -	deplib/ntl-main/src/mat_GF2E.cpp	/^mat_GF2E operator-(const mat_GF2E& a)$/;"	f
operator -	deplib/ntl-main/src/mat_GF2E.cpp	/^mat_GF2E operator-(const mat_GF2E& a, const mat_GF2E& b)$/;"	f
operator -	deplib/ntl-main/src/mat_RR.cpp	/^mat_RR operator-(const mat_RR& a)$/;"	f
operator -	deplib/ntl-main/src/mat_RR.cpp	/^mat_RR operator-(const mat_RR& a, const mat_RR& b)$/;"	f
operator -	deplib/ntl-main/src/mat_ZZ.cpp	/^mat_ZZ operator-(const mat_ZZ& a)$/;"	f
operator -	deplib/ntl-main/src/mat_ZZ.cpp	/^mat_ZZ operator-(const mat_ZZ& a, const mat_ZZ& b)$/;"	f
operator -	deplib/ntl-main/src/mat_ZZ_p.cpp	/^mat_ZZ_p operator-(const mat_ZZ_p& a)$/;"	f
operator -	deplib/ntl-main/src/mat_ZZ_p.cpp	/^mat_ZZ_p operator-(const mat_ZZ_p& a, const mat_ZZ_p& b)$/;"	f
operator -	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^mat_ZZ_pE operator-(const mat_ZZ_pE& a)$/;"	f
operator -	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^mat_ZZ_pE operator-(const mat_ZZ_pE& a, const mat_ZZ_pE& b)$/;"	f
operator -	deplib/ntl-main/src/mat_lzz_p.cpp	/^mat_zz_p operator-(const mat_zz_p& a)$/;"	f
operator -	deplib/ntl-main/src/mat_lzz_p.cpp	/^mat_zz_p operator-(const mat_zz_p& a, const mat_zz_p& b)$/;"	f
operator -	deplib/ntl-main/src/mat_lzz_pE.cpp	/^mat_zz_pE operator-(const mat_zz_pE& a)$/;"	f
operator -	deplib/ntl-main/src/mat_lzz_pE.cpp	/^mat_zz_pE operator-(const mat_zz_pE& a, const mat_zz_pE& b)$/;"	f
operator -	deplib/ntl-main/src/vec_GF2.cpp	/^vec_GF2 operator-(const vec_GF2& a, const vec_GF2& b)$/;"	f
operator -	deplib/ntl-main/src/vec_GF2E.cpp	/^vec_GF2E operator-(const vec_GF2E& a)$/;"	f
operator -	deplib/ntl-main/src/vec_GF2E.cpp	/^vec_GF2E operator-(const vec_GF2E& a, const vec_GF2E& b)$/;"	f
operator -	deplib/ntl-main/src/vec_RR.cpp	/^vec_RR operator-(const vec_RR& a)$/;"	f
operator -	deplib/ntl-main/src/vec_RR.cpp	/^vec_RR operator-(const vec_RR& a, const vec_RR& b)$/;"	f
operator -	deplib/ntl-main/src/vec_ZZ.cpp	/^vec_ZZ operator-(const vec_ZZ& a)$/;"	f
operator -	deplib/ntl-main/src/vec_ZZ.cpp	/^vec_ZZ operator-(const vec_ZZ& a, const vec_ZZ& b)$/;"	f
operator -	deplib/ntl-main/src/vec_ZZ_p.cpp	/^vec_ZZ_p operator-(const vec_ZZ_p& a)$/;"	f
operator -	deplib/ntl-main/src/vec_ZZ_p.cpp	/^vec_ZZ_p operator-(const vec_ZZ_p& a, const vec_ZZ_p& b)$/;"	f
operator -	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^vec_ZZ_pE operator-(const vec_ZZ_pE& a)$/;"	f
operator -	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^vec_ZZ_pE operator-(const vec_ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
operator -	deplib/ntl-main/src/vec_lzz_p.cpp	/^vec_zz_p operator-(const vec_zz_p& a)$/;"	f
operator -	deplib/ntl-main/src/vec_lzz_p.cpp	/^vec_zz_p operator-(const vec_zz_p& a, const vec_zz_p& b)$/;"	f
operator -	deplib/ntl-main/src/vec_lzz_pE.cpp	/^vec_zz_pE operator-(const vec_zz_pE& a)$/;"	f
operator -	deplib/ntl-main/src/vec_lzz_pE.cpp	/^vec_zz_pE operator-(const vec_zz_pE& a, const vec_zz_pE& b)$/;"	f
operator -	deplib/ntl-main/src/xdouble.cpp	/^xdouble operator-(const xdouble& a)$/;"	f
operator -	deplib/ntl-main/src/xdouble.cpp	/^xdouble operator-(const xdouble& a, const xdouble& b)$/;"	f
operator --	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2& operator--(GF2& x) { return x = x - 1; }$/;"	f
operator --	deplib/ntl-main/include/NTL/GF2.h	/^inline ref_GF2 operator--(ref_GF2 x) { return x = x - 1; }$/;"	f
operator --	deplib/ntl-main/include/NTL/GF2.h	/^inline void operator--(GF2& x, int) { x = x - 1; }$/;"	f
operator --	deplib/ntl-main/include/NTL/GF2.h	/^inline void operator--(ref_GF2 x, int) { x = x - 1; }$/;"	f
operator --	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator--(GF2E& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/GF2E.h	/^inline void operator--(GF2E& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator--(GF2EX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void operator--(GF2EX& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator--(GF2X& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/GF2X.h	/^inline void operator--(GF2X& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/RR.h	/^inline RR& operator--(RR& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/RR.h	/^inline void operator--(RR& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator--(ZZ& x) { add(x, x, -1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZ.h	/^inline void operator--(ZZ& x, int) { add(x, x, -1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator--(ZZX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZX.h	/^inline void operator--(ZZX& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& operator--(ZZ_p& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void operator--(ZZ_p& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator--(ZZ_pE& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void operator--(ZZ_pE& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator--(ZZ_pEX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void operator--(ZZ_pEX& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator--(ZZ_pX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void operator--(ZZ_pX& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void operator--(zz_p& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& operator--(zz_p& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void operator--(zz_pE& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator--(zz_pE& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void operator--(zz_pEX& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator--(zz_pEX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void operator--(zz_pX& x, int) { sub(x, x, 1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator--(zz_pX& x) { sub(x, x, 1); return x; }$/;"	f
operator --	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& operator--(quad_float& a) { a -= 1.0; return a; }$/;"	f
operator --	deplib/ntl-main/include/NTL/quad_float.h	/^inline void operator--(quad_float& a, int) { a -= 1.0; }$/;"	f
operator --	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const_proxy_iterator  operator--(int) { const_proxy_iterator t = *this; rep.dec(); return t; }$/;"	f	struct:Vec::const_proxy_iterator
operator --	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const_proxy_iterator& operator--() { rep.dec(); return *this; }$/;"	f	struct:Vec::const_proxy_iterator
operator --	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator  operator--(int) { proxy_iterator t = *this; rep.dec(); return t; }$/;"	f	struct:Vec::proxy_iterator
operator --	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator& operator--() { rep.dec(); return *this; }$/;"	f	struct:Vec::proxy_iterator
operator --	deplib/ntl-main/include/NTL/xdouble.h	/^inline void operator--(xdouble& a, int) { a = a - to_xdouble(1); }$/;"	f
operator --	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& operator--(xdouble& a) { a = a - to_xdouble(1); return a; }$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2& operator-=(GF2& x, GF2 b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2& operator-=(GF2& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2.h	/^inline ref_GF2 operator-=(ref_GF2 x, GF2 b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2.h	/^inline ref_GF2 operator-=(ref_GF2 x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator-=(GF2E& x, GF2 b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator-=(GF2E& x, const GF2E& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator-=(GF2E& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator-=(GF2EX& x, GF2 b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator-=(GF2EX& x, const GF2E& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator-=(GF2EX& x, const GF2EX& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator-=(GF2EX& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator-=(GF2X& x, GF2 b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator-=(GF2X& x, const GF2X& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator-=(GF2X& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/PD.h	/^operator-=(PD<2>& a, PD<2> b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/PD.h	/^operator-=(PD<4>& a, PD<4> b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/PD.h	/^operator-=(PD<8>& a, PD<8> b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/RR.h	/^inline RR& operator-=(RR& x, const RR& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/RR.h	/^inline RR& operator-=(RR& x, double b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator-=(ZZ& x, const ZZ& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator-=(ZZ& x, long a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator-=(ZZX& x, const ZZ& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator-=(ZZX& x, const ZZX& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator-=(ZZX& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& operator-=(ZZ_p& x, const ZZ_p& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& operator-=(ZZ_p& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator-=(ZZ_pE& x, const ZZ_p& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator-=(ZZ_pE& x, const ZZ_pE& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator-=(ZZ_pE& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator-=(ZZ_pEX& x, const ZZ_p& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator-=(ZZ_pEX& x, const ZZ_pE& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator-=(ZZ_pEX& x, const ZZ_pEX& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator-=(ZZ_pEX& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator-=(ZZ_pX& x, const ZZ_p& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator-=(ZZ_pX& x, const ZZ_pX& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator-=(ZZ_pX& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& operator-=(zz_p& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& operator-=(zz_p& x, zz_p b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator-=(zz_pE& x, const zz_p& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator-=(zz_pE& x, const zz_pE& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator-=(zz_pE& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator-=(zz_pEX& x, const zz_p& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator-=(zz_pEX& x, const zz_pE& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator-=(zz_pEX& x, const zz_pEX& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator-=(zz_pEX& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator-=(zz_pX& x, const zz_pX& b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator-=(zz_pX& x, long b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator-=(zz_pX& x, zz_p b)$/;"	f
operator -=	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2& operator-=(mat_GF2& x, const mat_GF2& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E& operator-=(mat_GF2E& x, const mat_GF2E& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR& operator-=(mat_RR& x, const mat_RR& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ& operator-=(mat_ZZ& x, const mat_ZZ& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p& operator-=(mat_ZZ_p& x, const mat_ZZ_p& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE& operator-=(mat_ZZ_pE& x, const mat_ZZ_pE& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p& operator-=(mat_zz_p& x, const mat_zz_p& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE& operator-=(mat_zz_pE& x, const mat_zz_pE& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& operator-= (quad_float& x, const quad_float& y)$/;"	f
operator -=	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& operator-= (quad_float& x, double y)$/;"	f
operator -=	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double& operator-=(wide_double& x, wide_double y)$/;"	f
operator -=	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const_proxy_iterator& operator-=(long x) { rep.add(-x); return *this; }$/;"	f	struct:Vec::const_proxy_iterator
operator -=	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator& operator-=(long x) { rep.add(-x); return *this; }$/;"	f	struct:Vec::proxy_iterator
operator -=	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2& operator-=(vec_GF2& x, const vec_GF2& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E& operator-=(vec_GF2E& x, const vec_GF2E& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/vec_RR.h	/^inline vec_RR& operator-=(vec_RR& x, const vec_RR& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/vec_ZZ.h	/^inline vec_ZZ& operator-=(vec_ZZ& x, const vec_ZZ& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p& operator-=(vec_ZZ_p& x, const vec_ZZ_p& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE& operator-=(vec_ZZ_pE& x, const vec_ZZ_pE& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p& operator-=(vec_zz_p& x, const vec_zz_p& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE& operator-=(vec_zz_pE& x, const vec_zz_pE& a)$/;"	f
operator -=	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& operator-=(xdouble& a, const xdouble& b) $/;"	f
operator -=	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& operator-=(xdouble& a, double b) $/;"	f
operator ->	deplib/ntl-main/include/NTL/Lazy.h	/^   const T* operator->() const { return data.operator->(); }$/;"	f	class:Lazy
operator ->	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* operator->() const { return dp; }$/;"	f	class:CloneablePtr
operator ->	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* operator->() const { return dp; }$/;"	f	class:CopiedPtr
operator ->	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* operator->() const { return dp; }$/;"	f	class:SmartPtr
operator ->	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* operator->() const { return dp; }$/;"	f	class:UniquePtr
operator /	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator\/(GF2 a, GF2 b)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator\/(GF2 a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 operator\/(long a, GF2 b)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator\/(GF2 a, const GF2E& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator\/(const GF2E& a, GF2 b) $/;"	f
operator /	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator\/(const GF2E& a, const GF2E& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator\/(const GF2E& a, long b) $/;"	f
operator /	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E operator\/(long a, const GF2E& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator\/(const GF2EX& a, GF2 b)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator\/(const GF2EX& a, const GF2E& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator\/(const GF2EX& a, const GF2EX& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator\/(const GF2EX& a, const GF2EXModulus& F)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator\/(const GF2EX& a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator\/(const GF2X& a, GF2 b)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator\/(const GF2X& a, const GF2X& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator\/(const GF2X& a, const GF2XModulus& F)$/;"	f
operator /	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator\/(const GF2X& a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/PD.h	/^operator\/(PD<2> a, PD<2> b) $/;"	f
operator /	deplib/ntl-main/include/NTL/PD.h	/^operator\/(PD<4> a, PD<4> b) $/;"	f
operator /	deplib/ntl-main/include/NTL/PD.h	/^operator\/(PD<8> a, PD<8> b) $/;"	f
operator /	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator\/(const RR& a, const RR& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator\/(const RR& a, double b)$/;"	f
operator /	deplib/ntl-main/include/NTL/RR.h	/^inline RR operator\/(double a, const RR& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator\/(const ZZ& a, const ZZ& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator\/(const ZZ& a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator\/(const ZZX& a, const ZZ& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator\/(const ZZX& a, const ZZX& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator\/(const ZZX& a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator\/(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator\/(const ZZ_p& a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p operator\/(long a, const ZZ_p& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator\/(const ZZ_p& a, const ZZ_pE& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator\/(const ZZ_pE& a, const ZZ_p& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator\/(const ZZ_pE& a, const ZZ_pE& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator\/(const ZZ_pE& a, long b) $/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE operator\/(long a, const ZZ_pE& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator\/(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator\/(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator\/(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator\/(const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator\/(const ZZ_pEX& a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator\/(const ZZ_pX& a, const ZZ_p& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator\/(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator\/(const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
operator /	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator\/(const ZZ_pX& a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator\/(long a, zz_p b)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator\/(zz_p a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p operator\/(zz_p a, zz_p b)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator\/(const zz_p& a, const zz_pE& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator\/(const zz_pE& a, const zz_p& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator\/(const zz_pE& a, const zz_pE& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator\/(const zz_pE& a, long b) $/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE operator\/(long a, const zz_pE& b) $/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator\/(const zz_pEX& a, const zz_p& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator\/(const zz_pEX& a, const zz_pE& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator\/(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator\/(const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator\/(const zz_pEX& a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator\/(const zz_pX& a, const zz_pX& b)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator\/(const zz_pX& a, const zz_pXModulus& F)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator\/(const zz_pX& a, long b)$/;"	f
operator /	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator\/(const zz_pX& a, zz_p b)$/;"	f
operator /	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator\/(const quad_float& x, const quad_float& y)$/;"	f
operator /	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator\/(const quad_float& x, double y )$/;"	f
operator /	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float operator\/(double x, const quad_float& y)$/;"	f
operator /	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double operator\/(wide_double x, wide_double y)$/;"	f
operator /	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble operator\/(const xdouble& a, double b)$/;"	f
operator /	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble operator\/(double a, const xdouble& b)$/;"	f
operator /	deplib/ntl-main/src/xdouble.cpp	/^xdouble operator\/(const xdouble& a, const xdouble& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2& operator\/=(GF2& x, GF2 b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2& operator\/=(GF2& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2.h	/^inline ref_GF2 operator\/=(ref_GF2 x, GF2 b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2.h	/^inline ref_GF2 operator\/=(ref_GF2 x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator\/=(GF2E& x, GF2 b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator\/=(GF2E& x, const GF2E& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& operator\/=(GF2E& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator\/=(GF2EX& x, GF2 b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator\/=(GF2EX& x, const GF2E& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator\/=(GF2EX& x, const GF2EX& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator\/=(GF2EX& x, const GF2EXModulus& F)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator\/=(GF2EX& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator\/=(GF2X& x, GF2 b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator\/=(GF2X& x, const GF2X& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator\/=(GF2X& x, const GF2XModulus& F)$/;"	f
operator /=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator\/=(GF2X& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/PD.h	/^operator\/=(PD<2>& a, PD<2> b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/PD.h	/^operator\/=(PD<4>& a, PD<4> b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/PD.h	/^operator\/=(PD<8>& a, PD<8> b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/RR.h	/^inline RR& operator\/=(RR& x, const RR& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/RR.h	/^inline RR& operator\/=(RR& x, double b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator\/=(ZZ& x, const ZZ& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator\/=(ZZ& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator\/=(ZZX& x, const ZZ& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator\/=(ZZX& x, const ZZX& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator\/=(ZZX& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& operator\/=(ZZ_p& x, const ZZ_p& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& operator\/=(ZZ_p& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator\/=(ZZ_pE& x, const ZZ_p& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator\/=(ZZ_pE& x, const ZZ_pE& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& operator\/=(ZZ_pE& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator\/=(ZZ_pEX& x, const ZZ_p& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator\/=(ZZ_pEX& x, const ZZ_pE& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator\/=(ZZ_pEX& x, const ZZ_pEX& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator\/=(ZZ_pEX& x, const ZZ_pEXModulus& F)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator\/=(ZZ_pEX& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator\/=(ZZ_pX& x, const ZZ_p& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator\/=(ZZ_pX& x, const ZZ_pX& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator\/=(ZZ_pX& x, const ZZ_pXModulus& F)$/;"	f
operator /=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator\/=(ZZ_pX& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& operator\/=(zz_p& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& operator\/=(zz_p& x, zz_p b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator\/=(zz_pE& x, const zz_p& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator\/=(zz_pE& x, const zz_pE& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& operator\/=(zz_pE& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator\/=(zz_pEX& x, const zz_p& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator\/=(zz_pEX& x, const zz_pE& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator\/=(zz_pEX& x, const zz_pEX& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator\/=(zz_pEX& x, const zz_pEXModulus& F)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator\/=(zz_pEX& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator\/=(zz_pX& x, const zz_pX& b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator\/=(zz_pX& x, const zz_pXModulus& F)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator\/=(zz_pX& x, long b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator\/=(zz_pX& x, zz_p b)$/;"	f
operator /=	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& operator\/= (quad_float& x, const quad_float& y)$/;"	f
operator /=	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& operator\/= (quad_float& x, double y)$/;"	f
operator /=	deplib/ntl-main/include/NTL/sp_arith.h	/^inline wide_double& operator\/=(wide_double& x, wide_double y)$/;"	f
operator /=	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& operator\/=(xdouble& a, const xdouble& b) $/;"	f
operator /=	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& operator\/=(xdouble& a, double b) $/;"	f
operator <	deplib/ntl-main/include/NTL/RR.h	/^inline long operator <(const RR& a, const RR& b) { return compare(a, b)  < 0; }$/;"	f
operator <	deplib/ntl-main/include/NTL/RR.h	/^inline long operator <(const RR& a, double b) { return compare(a, b)  < 0; }$/;"	f
operator <	deplib/ntl-main/include/NTL/RR.h	/^inline long operator <(double a, const RR& b) { return compare(a, b)  < 0; }$/;"	f
operator <	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator<(const ZZ& a, const ZZ& b)$/;"	f
operator <	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator<(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) < 0; }$/;"	f
operator <	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator<(long a, const ZZ& b) { return b > a; }$/;"	f
operator <	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator< (const quad_float& x, double y) $/;"	f
operator <	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator< (double x, const quad_float& y)$/;"	f
operator <	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator <(const xdouble& a, const xdouble& b) $/;"	f
operator <	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator <(const xdouble& a, double b) $/;"	f
operator <	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator <(double a, const xdouble& b) $/;"	f
operator <	deplib/ntl-main/src/quad_float1.cpp	/^long operator< (const quad_float& x, const quad_float& y) {$/;"	f
operator <<	deplib/ntl-main/include/NTL/GF2E.h	/^inline NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const GF2E& a)$/;"	f
operator <<	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator<<(const GF2EX& a, long n)$/;"	f
operator <<	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator<<(const GF2X& a, long n)$/;"	f
operator <<	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator<<(const ZZ& a, long n)$/;"	f
operator <<	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator<<(const ZZX& a, long n)$/;"	f
operator <<	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const ZZ_p& a)$/;"	f
operator <<	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const ZZ_pE& a)$/;"	f
operator <<	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator<<(const ZZ_pEX& a, long n)$/;"	f
operator <<	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator<<(const ZZ_pX& a, long n)$/;"	f
operator <<	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const zz_pE& a)$/;"	f
operator <<	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator<<(const zz_pEX& a, long n)$/;"	f
operator <<	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator<<(const zz_pX& a, long n)$/;"	f
operator <<	deplib/ntl-main/include/NTL/matrix.h	/^NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const Mat<T>& a)  $/;"	f
operator <<	deplib/ntl-main/include/NTL/pair.h	/^NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const Pair<S,T>& x)  $/;"	f
operator <<	deplib/ntl-main/include/NTL/vector.h	/^NTL_SNS ostream& operator<<(NTL_SNS ostream& s, const Vec<T>& a)   $/;"	f
operator <<	deplib/ntl-main/src/GF2.cpp	/^ostream& operator<<(ostream& s, GF2 a)$/;"	f
operator <<	deplib/ntl-main/src/GF2EX.cpp	/^ostream& operator<<(ostream& s, const GF2EX& a)$/;"	f
operator <<	deplib/ntl-main/src/GF2X.cpp	/^ostream& operator<<(ostream& s, const GF2X& a)   $/;"	f
operator <<	deplib/ntl-main/src/GF2XTest.cpp	/^ostream& operator<<(ostream& s, const wd& w)$/;"	f
operator <<	deplib/ntl-main/src/RR.cpp	/^ostream& operator<<(ostream& s, const RR& a)$/;"	f
operator <<	deplib/ntl-main/src/WordVector.cpp	/^ostream& operator<<(ostream& s, const WordVector& a)   $/;"	f
operator <<	deplib/ntl-main/src/ZZ.cpp	/^ostream& operator<<(ostream& s, const ZZ& a)$/;"	f
operator <<	deplib/ntl-main/src/ZZX.cpp	/^ostream& operator<<(ostream& s, const ZZX& a)$/;"	f
operator <<	deplib/ntl-main/src/ZZ_pEX.cpp	/^ostream& operator<<(ostream& s, const ZZ_pEX& a)$/;"	f
operator <<	deplib/ntl-main/src/ZZ_pX.cpp	/^ostream& operator<<(ostream& s, const ZZ_pX& a)$/;"	f
operator <<	deplib/ntl-main/src/lzz_p.cpp	/^ostream& operator<<(ostream& s, zz_p a)$/;"	f
operator <<	deplib/ntl-main/src/lzz_pEX.cpp	/^ostream& operator<<(ostream& s, const zz_pEX& a)$/;"	f
operator <<	deplib/ntl-main/src/lzz_pX.cpp	/^ostream& operator<<(ostream& s, const zz_pX& a)$/;"	f
operator <<	deplib/ntl-main/src/quad_float1.cpp	/^ostream& operator<<(ostream& s, const quad_float& a)$/;"	f
operator <<	deplib/ntl-main/src/vec_GF2.cpp	/^ostream& operator<<(ostream& s, const vec_GF2& a)   $/;"	f
operator <<	deplib/ntl-main/src/xdouble.cpp	/^ostream& operator<<(ostream& s, const xdouble& a)$/;"	f
operator <<=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator<<=(GF2EX& x, long n)$/;"	f
operator <<=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator<<=(GF2X& x, long n)$/;"	f
operator <<=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator<<=(ZZ& x, long n)$/;"	f
operator <<=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator<<=(ZZX& x, long n) $/;"	f
operator <<=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator<<=(ZZ_pEX& x, long n)$/;"	f
operator <<=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator<<=(ZZ_pX& x, long n)$/;"	f
operator <<=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator<<=(zz_pEX& x, long n)$/;"	f
operator <<=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator<<=(zz_pX& x, long n)$/;"	f
operator <=	deplib/ntl-main/include/NTL/RR.h	/^inline long operator<=(const RR& a, const RR& b) { return compare(a, b) <= 0; }$/;"	f
operator <=	deplib/ntl-main/include/NTL/RR.h	/^inline long operator<=(const RR& a, double b) { return compare(a, b) <= 0; }$/;"	f
operator <=	deplib/ntl-main/include/NTL/RR.h	/^inline long operator<=(double a, const RR& b) { return compare(a, b) <= 0; }$/;"	f
operator <=	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator<=(const ZZ& a, const ZZ& b)$/;"	f
operator <=	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator<=(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) <= 0; }$/;"	f
operator <=	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator<=(long a, const ZZ& b) { return b >= a; }$/;"	f
operator <=	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator<=(const quad_float& x, double y) $/;"	f
operator <=	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator<=(double x, const quad_float& y)$/;"	f
operator <=	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator<=(const xdouble& a, const xdouble& b) $/;"	f
operator <=	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator<=(const xdouble& a, double b) $/;"	f
operator <=	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator<=(double a, const xdouble& b) $/;"	f
operator <=	deplib/ntl-main/src/quad_float1.cpp	/^long operator<=(const quad_float& x, const quad_float& y) {$/;"	f
operator =	deplib/ntl-main/include/NTL/GF2.h	/^GF2& operator=(long a) { _GF2__rep = a & 1; return *this; }$/;"	f	class:GF2
operator =	deplib/ntl-main/include/NTL/GF2.h	/^ref_GF2 operator=(const GF2& a)$/;"	f	class:ref_GF2
operator =	deplib/ntl-main/include/NTL/GF2.h	/^ref_GF2 operator=(const ref_GF2& a)$/;"	f	class:ref_GF2
operator =	deplib/ntl-main/include/NTL/GF2.h	/^ref_GF2 operator=(long a)$/;"	f	class:ref_GF2
operator =	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& GF2E::operator=(GF2 a) { conv(*this, a); return *this; }$/;"	f	class:GF2E
operator =	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E& GF2E::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:GF2E
operator =	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& GF2EX::operator=(GF2 a) { conv(*this, a); return *this; }$/;"	f	class:GF2EX
operator =	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& GF2EX::operator=(const GF2E& a) { conv(*this, a); return *this; }$/;"	f	class:GF2EX
operator =	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& GF2EX::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:GF2EX
operator =	deplib/ntl-main/include/NTL/GF2X.h	/^GF2X& operator=(const GF2X& a) { xrep = a.xrep; return *this; }$/;"	f	class:GF2X
operator =	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& GF2X::operator=(GF2 a)$/;"	f	class:GF2X
operator =	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& GF2X::operator=(long a)$/;"	f	class:GF2X
operator =	deplib/ntl-main/include/NTL/Lazy.h	/^   Lazy& operator=(const Lazy& other) $/;"	f	class:Lazy
operator =	deplib/ntl-main/include/NTL/RR.h	/^inline RR& RR::operator=(double a) { conv(*this, a); return *this; }$/;"	f	class:RR
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   AlignedArray& operator=(fake_null_type1) { reset(); return *this; }$/;"	f	class:AlignedArray
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr& operator=(const CloneablePtr& other)$/;"	f	class:CloneablePtr
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CloneablePtr& operator=(const CloneablePtr<Y>& other)$/;"	f	class:CloneablePtr
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CopiedPtr& operator=(const CopiedPtr& other)$/;"	f	class:CopiedPtr
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   CopiedPtr& operator=(fake_null_type1) { reset(); return *this; }$/;"	f	class:CopiedPtr
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   OptionalVal& operator=(const OptionalVal& other)$/;"	f	class:OptionalVal
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr& operator=(const SmartPtr& other)$/;"	f	class:SmartPtr
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   SmartPtr& operator=(const SmartPtr<Y>& other)$/;"	f	class:SmartPtr
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   Unique2DArray& operator=(fake_null_type1) { reset(); return *this; }$/;"	f	class:Unique2DArray
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   UniqueArray& operator=(fake_null_type1) { reset(); return *this; }$/;"	f	class:UniqueArray
operator =	deplib/ntl-main/include/NTL/SmartPtr.h	/^   UniquePtr& operator=(fake_null_type1) { reset(); return *this; }$/;"	f	class:UniquePtr
operator =	deplib/ntl-main/include/NTL/ZZ.h	/^   RandomStream& operator=(const RandomStream& other) {$/;"	f	class:RandomStream
operator =	deplib/ntl-main/include/NTL/ZZ.h	/^ZZ& operator=(const ZZ& a) { _ntl_gcopy(a.rep, &rep); return *this; }$/;"	f	class:ZZ
operator =	deplib/ntl-main/include/NTL/ZZ.h	/^ZZ& operator=(long a) { _ntl_gintoz(a, &rep); return *this; }$/;"	f	class:ZZ
operator =	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& ZZX::operator=(const ZZ& a)$/;"	f	class:ZZX
operator =	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& ZZX::operator=(long a)$/;"	f	class:ZZX
operator =	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p& ZZ_p::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:ZZ_p
operator =	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& ZZ_pE::operator=(const ZZ_p& a) { conv(*this, a); return *this; }$/;"	f	class:ZZ_pE
operator =	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE& ZZ_pE::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:ZZ_pE
operator =	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& ZZ_pEX::operator=(const ZZ_p& a)$/;"	f	class:ZZ_pEX
operator =	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& ZZ_pEX::operator=(const ZZ_pE& a)$/;"	f	class:ZZ_pEX
operator =	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& ZZ_pEX::operator=(long a)$/;"	f	class:ZZ_pEX
operator =	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p& zz_p::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:zz_p
operator =	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_p& operator=(const zz_p& a) { _zz_p__rep = a._zz_p__rep; return *this; }$/;"	f	class:zz_p
operator =	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& zz_pE::operator=(const zz_p& a) { conv(*this, a); return *this; }$/;"	f	class:zz_pE
operator =	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE& zz_pE::operator=(long a) { conv(*this, a); return *this; }$/;"	f	class:zz_pE
operator =	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& zz_pEX::operator=(const zz_p& a)$/;"	f	class:zz_pEX
operator =	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& zz_pEX::operator=(const zz_pE& a)$/;"	f	class:zz_pEX
operator =	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& zz_pEX::operator=(long a)$/;"	f	class:zz_pEX
operator =	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& zz_pX::operator=(long a)$/;"	f	class:zz_pX
operator =	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& zz_pX::operator=(zz_p a)$/;"	f	class:zz_pX
operator =	deplib/ntl-main/include/NTL/matrix.h	/^Mat<T>& Mat<T>::operator=(const Mat& src)  $/;"	f	class:Mat
operator =	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float& quad_float::operator=(double x) $/;"	f	class:quad_float
operator =	deplib/ntl-main/include/NTL/thread.h	/^   AtomicBool& operator=(const bool& _data) $/;"	f	class:AtomicBool
operator =	deplib/ntl-main/include/NTL/thread.h	/^   AtomicLong& operator=(const long& _data) $/;"	f	class:AtomicLong
operator =	deplib/ntl-main/include/NTL/tools.h	/^   void operator=(const raw_ptr& _rep)  { rep = _rep; }$/;"	f	class:WrappedPtr
operator =	deplib/ntl-main/include/NTL/vector.h	/^Vec<T>& Vec<T>::operator=(const Vec& a)  $/;"	f	class:Vec
operator =	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble& xdouble::operator=(double a)$/;"	f	class:xdouble
operator =	deplib/ntl-main/src/GF2EX.cpp	/^void _NTL_GF2EXMatrix::operator=(const _NTL_GF2EXMatrix& M)$/;"	f	class:_NTL_GF2EXMatrix
operator =	deplib/ntl-main/src/GF2X1.cpp	/^GF2XModulus& GF2XModulus::operator=(const GF2XModulus& F)$/;"	f	class:GF2XModulus
operator =	deplib/ntl-main/src/GF2X1.cpp	/^void _NTL_GF2XMatrix::operator=(const _NTL_GF2XMatrix& M)$/;"	f	class:_NTL_GF2XMatrix
operator =	deplib/ntl-main/src/GF2XVec.cpp	/^GF2XVec& GF2XVec::operator=(const GF2XVec& a) $/;"	f	class:GF2XVec
operator =	deplib/ntl-main/src/WordVector.cpp	/^WordVector& WordVector::operator=(const WordVector& a)  $/;"	f	class:WordVector
operator =	deplib/ntl-main/src/ZZ.cpp	/^   RandomStream_impl& operator=(const RandomStream_impl& other) $/;"	f	struct:RandomStream_impl
operator =	deplib/ntl-main/src/ZZVec.cpp	/^ZZVec& ZZVec::operator=(const ZZVec& a) $/;"	f	class:ZZVec
operator =	deplib/ntl-main/src/ZZ_pEX.cpp	/^void _NTL_ZZ_pEXMatrix::operator=(const _NTL_ZZ_pEXMatrix& M)$/;"	f	class:_NTL_ZZ_pEXMatrix
operator =	deplib/ntl-main/src/ZZ_pX.cpp	/^FFTRep& FFTRep::operator=(const FFTRep& R)$/;"	f	class:FFTRep
operator =	deplib/ntl-main/src/ZZ_pX.cpp	/^ZZ_pX& ZZ_pX::operator=(const ZZ_p& a)$/;"	f	class:ZZ_pX
operator =	deplib/ntl-main/src/ZZ_pX.cpp	/^ZZ_pX& ZZ_pX::operator=(long a)$/;"	f	class:ZZ_pX
operator =	deplib/ntl-main/src/ZZ_pX1.cpp	/^void ZZ_pXMatrix::operator=(const ZZ_pXMatrix& M)$/;"	f	class:ZZ_pXMatrix
operator =	deplib/ntl-main/src/lzz_pEX.cpp	/^void _NTL_zz_pEXMatrix::operator=(const _NTL_zz_pEXMatrix& M)$/;"	f	class:_NTL_zz_pEXMatrix
operator =	deplib/ntl-main/src/lzz_pX.cpp	/^fftRep& fftRep::operator=(const fftRep& R)$/;"	f	class:fftRep
operator =	deplib/ntl-main/src/lzz_pX1.cpp	/^void zz_pXMatrix::operator=(const zz_pXMatrix& M)$/;"	f	class:zz_pXMatrix
operator =	deplib/ntl-main/src/vec_GF2.cpp	/^vec_GF2& vec_GF2::operator=(const vec_GF2& a)$/;"	f	class:vec_GF2
operator ==	deplib/ntl-main/include/NTL/GF2.h	/^inline long operator==(GF2 a, GF2 b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2.h	/^inline long operator==(GF2 a, long b) $/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2.h	/^inline long operator==(long a, GF2 b) $/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2E.h	/^inline long operator==(const GF2 a, const GF2E& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2E.h	/^inline long operator==(const GF2E& a, GF2 b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2E.h	/^inline long operator==(const GF2E& a, const GF2E& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2E.h	/^inline long operator==(const GF2E& a, long b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2E.h	/^inline long operator==(const long a, const GF2E& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator==(GF2 a, const GF2EX& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator==(const GF2E& a, const GF2EX& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator==(const GF2EX& a, const GF2EX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2EX.h	/^inline long operator==(long a, const GF2EX& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2X.h	/^inline long operator==(GF2 a, const GF2X& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/GF2X.h	/^inline long operator==(long a, const GF2X& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/RR.h	/^inline long operator==(double a, const RR& b) { return (b == a); }$/;"	f
operator ==	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator==(const CloneablePtr<X>& a, const CloneablePtr<Y>& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator==(const CopiedPtr<T,P>& a, const CopiedPtr<T,P>& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator==(const CopiedPtr<X,U>& a, const CopiedPtr<Y,V>& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator==(const SmartPtr<X>& a, const SmartPtr<Y>& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator==(const Unique2DArray<X>& a, const Unique2DArray<X>& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator==(const Unique2DArray<X>& a, const Unique2DArray<Y>& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator==(const UniqueArray<X>& a, const UniqueArray<X>& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator==(const UniqueArray<X>& a, const UniqueArray<Y>& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator==(const UniquePtr<T,P>& a, const UniquePtr<T,P>& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/SmartPtr.h	/^bool operator==(const UniquePtr<X,U>& a, const UniquePtr<Y,V>& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator==(const ZZ& a, const ZZ& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator==(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) == 0; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator==(long a, const ZZ& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZX.h	/^inline long operator==(const ZZ& a, const ZZX& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZX.h	/^inline long operator==(long a, const ZZX& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline long operator==(const ZZ_p& a, const ZZ_p& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline long operator==(long a, const ZZ_p& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long operator==(const ZZ_p& a, const ZZ_pE& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long operator==(const ZZ_pE& a, const ZZ_p& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long operator==(const ZZ_pE& a, const ZZ_pE& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long operator==(const ZZ_pE& a, long b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline long operator==(long a, const ZZ_pE& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator==(const ZZ_p& a, const ZZ_pEX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator==(const ZZ_pE& a, const ZZ_pEX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator==(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline long operator==(long a, const ZZ_pEX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline long operator==(const ZZ_p& a, const ZZ_pX& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline long operator==(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline long operator==(long a, const ZZ_pX& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_p.h	/^inline long operator==(long a, zz_p b) { return to_zz_p(a) == b; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_p.h	/^inline long operator==(zz_p a, long b) { return a == to_zz_p(b); }$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_p.h	/^inline long operator==(zz_p a, zz_p b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long operator==(const zz_p& a, const zz_pE& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long operator==(const zz_pE& a, const zz_p& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long operator==(const zz_pE& a, const zz_pE& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long operator==(const zz_pE& a, long b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline long operator==(long a, const zz_pE& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator==(const zz_p& a, const zz_pEX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator==(const zz_pE& a, const zz_pEX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator==(const zz_pEX& a, const zz_pEX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline long operator==(long a, const zz_pEX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline long operator==(const zz_pX& a, const zz_pX& b)$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline long operator==(long a, const zz_pX& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline long operator==(zz_p a, const zz_pX& b) { return b == a; }$/;"	f
operator ==	deplib/ntl-main/include/NTL/matrix.h	/^long operator==(const Mat<T>& a, const Mat<T>& b)  $/;"	f
operator ==	deplib/ntl-main/include/NTL/pair.h	/^inline long operator==(const Pair<S,T>& x, const Pair<S,T>& y)  $/;"	f
operator ==	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator==(const quad_float& x, double y) $/;"	f
operator ==	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator==(double x, const quad_float& y)$/;"	f
operator ==	deplib/ntl-main/include/NTL/vec_GF2.h	/^bool operator==(const vec_GF2::const_proxy_iterator& a, const vec_GF2::const_proxy_iterator& b) $/;"	f
operator ==	deplib/ntl-main/include/NTL/vec_GF2.h	/^bool operator==(const vec_GF2::proxy_iterator& a, const vec_GF2::proxy_iterator& b) $/;"	f
operator ==	deplib/ntl-main/include/NTL/vector.h	/^long operator==(const Vec<T>& a, const Vec<T>& b) $/;"	f
operator ==	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator==(const xdouble& a, const xdouble& b) $/;"	f
operator ==	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator==(const xdouble& a, double b) $/;"	f
operator ==	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator==(double a, const xdouble& b) $/;"	f
operator ==	deplib/ntl-main/src/GF2EX.cpp	/^long operator==(const GF2EX& a, GF2 b)$/;"	f
operator ==	deplib/ntl-main/src/GF2EX.cpp	/^long operator==(const GF2EX& a, const GF2E& b)$/;"	f
operator ==	deplib/ntl-main/src/GF2EX.cpp	/^long operator==(const GF2EX& a, long b)$/;"	f
operator ==	deplib/ntl-main/src/GF2X.cpp	/^long operator==(const GF2X& a, GF2 b)$/;"	f
operator ==	deplib/ntl-main/src/GF2X.cpp	/^long operator==(const GF2X& a, const GF2X& b)$/;"	f
operator ==	deplib/ntl-main/src/GF2X.cpp	/^long operator==(const GF2X& a, long b)$/;"	f
operator ==	deplib/ntl-main/src/RR.cpp	/^long operator==(const RR& a, const RR& b) $/;"	f
operator ==	deplib/ntl-main/src/RR.cpp	/^long operator==(const RR& a, double b) $/;"	f
operator ==	deplib/ntl-main/src/WordVector.cpp	/^long operator==(const WordVector& a, const WordVector& b) $/;"	f
operator ==	deplib/ntl-main/src/ZZX.cpp	/^long operator==(const ZZX& a, const ZZ& b)$/;"	f
operator ==	deplib/ntl-main/src/ZZX.cpp	/^long operator==(const ZZX& a, const ZZX& b)$/;"	f
operator ==	deplib/ntl-main/src/ZZX.cpp	/^long operator==(const ZZX& a, long b)$/;"	f
operator ==	deplib/ntl-main/src/ZZ_p.cpp	/^long operator==(const ZZ_p& a, long b)$/;"	f
operator ==	deplib/ntl-main/src/ZZ_pEX.cpp	/^long operator==(const ZZ_pEX& a, const ZZ_p& b)$/;"	f
operator ==	deplib/ntl-main/src/ZZ_pEX.cpp	/^long operator==(const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
operator ==	deplib/ntl-main/src/ZZ_pEX.cpp	/^long operator==(const ZZ_pEX& a, long b)$/;"	f
operator ==	deplib/ntl-main/src/ZZ_pX.cpp	/^long operator==(const ZZ_pX& a, const ZZ_p& b)$/;"	f
operator ==	deplib/ntl-main/src/ZZ_pX.cpp	/^long operator==(const ZZ_pX& a, long b)$/;"	f
operator ==	deplib/ntl-main/src/lzz_pEX.cpp	/^long operator==(const zz_pEX& a, const zz_p& b)$/;"	f
operator ==	deplib/ntl-main/src/lzz_pEX.cpp	/^long operator==(const zz_pEX& a, const zz_pE& b)$/;"	f
operator ==	deplib/ntl-main/src/lzz_pEX.cpp	/^long operator==(const zz_pEX& a, long b)$/;"	f
operator ==	deplib/ntl-main/src/lzz_pX.cpp	/^long operator==(const zz_pX& a, long b)$/;"	f
operator ==	deplib/ntl-main/src/lzz_pX.cpp	/^long operator==(const zz_pX& a, zz_p b)$/;"	f
operator ==	deplib/ntl-main/src/quad_float1.cpp	/^long operator==(const quad_float& x, const quad_float& y)$/;"	f
operator ==	deplib/ntl-main/src/vec_GF2.cpp	/^long operator==(const vec_GF2& a, const vec_GF2& b)$/;"	f
operator >	deplib/ntl-main/include/NTL/RR.h	/^inline long operator >(const RR& a, const RR& b) { return compare(a, b)  > 0; }$/;"	f
operator >	deplib/ntl-main/include/NTL/RR.h	/^inline long operator >(const RR& a, double b) { return compare(a, b)  > 0; }$/;"	f
operator >	deplib/ntl-main/include/NTL/RR.h	/^inline long operator >(double a, const RR& b) { return compare(a, b)  > 0; }$/;"	f
operator >	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator>(const ZZ& a, const ZZ& b)$/;"	f
operator >	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator>(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) > 0; }$/;"	f
operator >	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator>(long a, const ZZ& b) { return b < a; }$/;"	f
operator >	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator> (const quad_float& x, double y) $/;"	f
operator >	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator> (double x, const quad_float& y)$/;"	f
operator >	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator >(const xdouble& a, const xdouble& b) $/;"	f
operator >	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator >(const xdouble& a, double b) $/;"	f
operator >	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator >(double a, const xdouble& b) $/;"	f
operator >	deplib/ntl-main/src/quad_float1.cpp	/^long operator> (const quad_float& x, const quad_float& y) {$/;"	f
operator >=	deplib/ntl-main/include/NTL/RR.h	/^inline long operator>=(const RR& a, const RR& b) { return compare(a, b) >= 0; }$/;"	f
operator >=	deplib/ntl-main/include/NTL/RR.h	/^inline long operator>=(const RR& a, double b) { return compare(a, b) >= 0; }$/;"	f
operator >=	deplib/ntl-main/include/NTL/RR.h	/^inline long operator>=(double a, const RR& b) { return compare(a, b) >= 0; }$/;"	f
operator >=	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator>=(const ZZ& a, const ZZ& b)$/;"	f
operator >=	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator>=(const ZZ& a, long b) { return _ntl_gscompare(a.rep, b) >= 0; }$/;"	f
operator >=	deplib/ntl-main/include/NTL/ZZ.h	/^inline long operator>=(long a, const ZZ& b) { return b <= a; }$/;"	f
operator >=	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator>=(const quad_float& x, double y) $/;"	f
operator >=	deplib/ntl-main/include/NTL/quad_float.h	/^inline long operator>=(double x, const quad_float& y)$/;"	f
operator >=	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator>=(const xdouble& a, const xdouble& b) $/;"	f
operator >=	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator>=(const xdouble& a, double b) $/;"	f
operator >=	deplib/ntl-main/include/NTL/xdouble.h	/^inline long operator>=(double a, const xdouble& b) $/;"	f
operator >=	deplib/ntl-main/src/quad_float1.cpp	/^long operator>=(const quad_float& x, const quad_float& y) {$/;"	f
operator >>	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX operator>>(const GF2EX& a, long n)$/;"	f
operator >>	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X operator>>(const GF2X& a, long n)$/;"	f
operator >>	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator>>(const ZZ& a, long n)$/;"	f
operator >>	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX operator>>(const ZZX& a, long n)$/;"	f
operator >>	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX operator>>(const ZZ_pEX& a, long n)$/;"	f
operator >>	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX operator>>(const ZZ_pX& a, long n)$/;"	f
operator >>	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX operator>>(const zz_pEX& a, long n)$/;"	f
operator >>	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX operator>>(const zz_pX& a, long n)$/;"	f
operator >>	deplib/ntl-main/include/NTL/matrix.h	/^NTL_SNS istream& operator>>(NTL_SNS istream& s, Mat<T>& x)  $/;"	f
operator >>	deplib/ntl-main/include/NTL/pair.h	/^NTL_SNS istream& operator>>(NTL_SNS istream& s, Pair<S,T>& x)  $/;"	f
operator >>	deplib/ntl-main/include/NTL/vector.h	/^NTL_SNS istream & operator>>(NTL_SNS istream& s, Vec<T>& a)   $/;"	f
operator >>	deplib/ntl-main/src/GF2.cpp	/^istream& operator>>(istream& s, ref_GF2 x)$/;"	f
operator >>	deplib/ntl-main/src/GF2E.cpp	/^istream& operator>>(istream& s, GF2E& x)$/;"	f
operator >>	deplib/ntl-main/src/GF2EX.cpp	/^istream& operator>>(istream& s, GF2EX& x)$/;"	f
operator >>	deplib/ntl-main/src/GF2X.cpp	/^istream & operator>>(istream& s, GF2X& a)   $/;"	f
operator >>	deplib/ntl-main/src/RR.cpp	/^istream& operator>>(istream& s, RR& x)$/;"	f
operator >>	deplib/ntl-main/src/WordVector.cpp	/^istream & operator>>(istream& s, WordVector& a)   $/;"	f
operator >>	deplib/ntl-main/src/ZZ.cpp	/^istream& operator>>(istream& s, ZZ& x)$/;"	f
operator >>	deplib/ntl-main/src/ZZX.cpp	/^istream& operator>>(istream& s, ZZX& x)$/;"	f
operator >>	deplib/ntl-main/src/ZZ_p.cpp	/^istream& operator>>(istream& s, ZZ_p& x)$/;"	f
operator >>	deplib/ntl-main/src/ZZ_pE.cpp	/^istream& operator>>(istream& s, ZZ_pE& x)$/;"	f
operator >>	deplib/ntl-main/src/ZZ_pEX.cpp	/^istream& operator>>(istream& s, ZZ_pEX& x)$/;"	f
operator >>	deplib/ntl-main/src/ZZ_pX.cpp	/^istream& operator>>(istream& s, ZZ_pX& x)$/;"	f
operator >>	deplib/ntl-main/src/lzz_p.cpp	/^istream& operator>>(istream& s, zz_p& x)$/;"	f
operator >>	deplib/ntl-main/src/lzz_pE.cpp	/^istream& operator>>(istream& s, zz_pE& x)$/;"	f
operator >>	deplib/ntl-main/src/lzz_pEX.cpp	/^istream& operator>>(istream& s, zz_pEX& x)$/;"	f
operator >>	deplib/ntl-main/src/lzz_pX.cpp	/^istream& operator>>(istream& s, zz_pX& x)$/;"	f
operator >>	deplib/ntl-main/src/quad_float1.cpp	/^istream& operator>>(istream& s, quad_float& x)$/;"	f
operator >>	deplib/ntl-main/src/vec_GF2.cpp	/^istream & operator>>(istream& s, vec_GF2& a) $/;"	f
operator >>	deplib/ntl-main/src/xdouble.cpp	/^istream& operator>>(istream& s, xdouble& x)$/;"	f
operator >>=	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX& operator>>=(GF2EX& x, long n)$/;"	f
operator >>=	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X& operator>>=(GF2X& x, long n)$/;"	f
operator >>=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator>>=(ZZ& x, long n)$/;"	f
operator >>=	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX& operator>>=(ZZX& x, long n) $/;"	f
operator >>=	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX& operator>>=(ZZ_pEX& x, long n)$/;"	f
operator >>=	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX& operator>>=(ZZ_pX& x, long n)$/;"	f
operator >>=	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX& operator>>=(zz_pEX& x, long n)$/;"	f
operator >>=	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX& operator>>=(zz_pX& x, long n)$/;"	f
operator SmartPtr<Y>	deplib/ntl-main/include/NTL/SmartPtr.h	/^   operator SmartPtr<Y>() { return SmartPtr<Y>(SmartPtrLoopHole(), dp, cp); }$/;"	f	class:CloneablePtr
operator T&	deplib/ntl-main/include/NTL/SmartPtr.h	/^   operator T& () const { return x; }$/;"	f	class:ReferenceWrapper
operator []	deplib/ntl-main/include/NTL/GF2EX.h	/^GF2E& operator[](long i) { return rep[i]; }$/;"	f	class:GF2EX
operator []	deplib/ntl-main/include/NTL/GF2EX.h	/^const GF2E& operator[](long i) const { return rep[i]; }$/;"	f	class:GF2EX
operator []	deplib/ntl-main/include/NTL/GF2X.h	/^const GF2 operator[](long i) const$/;"	f	class:GF2X
operator []	deplib/ntl-main/include/NTL/GF2X.h	/^ref_GF2 operator[](long i) $/;"	f	class:GF2X
operator []	deplib/ntl-main/include/NTL/GF2XVec.h	/^   GF2X& operator[](long i) { return v[i]; }$/;"	f	class:GF2XVec
operator []	deplib/ntl-main/include/NTL/GF2XVec.h	/^   const GF2X& operator[](long i) const { return v[i]; }$/;"	f	class:GF2XVec
operator []	deplib/ntl-main/include/NTL/LazyTable.h	/^   const T * operator[] (long i) const $/;"	f	class:LazyTable
operator []	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T& operator[](long i) const { return dp[i]; }$/;"	f	class:AlignedArray
operator []	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T& operator[](long i) const { return dp[i]; }$/;"	f	class:UniqueArray
operator []	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T_ptr& operator[](long i) const { return dp[i]; }$/;"	f	class:Unique2DArray
operator []	deplib/ntl-main/include/NTL/WordVector.h	/^   _ntl_ulong& operator[](long i)   $/;"	f	class:WordVector
operator []	deplib/ntl-main/include/NTL/WordVector.h	/^   const _ntl_ulong& operator[](long i) const $/;"	f	class:WordVector
operator []	deplib/ntl-main/include/NTL/ZZVec.h	/^   ZZ& operator[](long i) { return v[i]; }$/;"	f	class:ZZVec
operator []	deplib/ntl-main/include/NTL/ZZVec.h	/^   const ZZ& operator[](long i) const { return v[i]; }$/;"	f	class:ZZVec
operator []	deplib/ntl-main/include/NTL/ZZX.h	/^ZZ& operator[](long i) { return rep[i]; }$/;"	f	class:ZZX
operator []	deplib/ntl-main/include/NTL/ZZX.h	/^const ZZ& operator[](long i) const { return rep[i]; }$/;"	f	class:ZZX
operator []	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^ZZ_pE& operator[](long i) { return rep[i]; }$/;"	f	class:ZZ_pEX
operator []	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^const ZZ_pE& operator[](long i) const { return rep[i]; }$/;"	f	class:ZZ_pEX
operator []	deplib/ntl-main/include/NTL/ZZ_pX.h	/^ZZ_p& operator[](long i) { return rep[i]; }$/;"	f	class:ZZ_pX
operator []	deplib/ntl-main/include/NTL/ZZ_pX.h	/^const ZZ_p& operator[](long i) const { return rep[i]; }$/;"	f	class:ZZ_pX
operator []	deplib/ntl-main/include/NTL/lzz_pEX.h	/^const zz_pE& operator[](long i) const { return rep[i]; }$/;"	f	class:zz_pEX
operator []	deplib/ntl-main/include/NTL/lzz_pEX.h	/^zz_pE& operator[](long i) { return rep[i]; }$/;"	f	class:zz_pEX
operator []	deplib/ntl-main/include/NTL/lzz_pX.h	/^const zz_p& operator[](long i) const { return rep[i]; }$/;"	f	class:zz_pX
operator []	deplib/ntl-main/include/NTL/lzz_pX.h	/^zz_p& operator[](long i) { return rep[i]; }$/;"	f	class:zz_pX
operator []	deplib/ntl-main/include/NTL/matrix.h	/^   Vec<T>& operator[](long i) { return _mat__rep[i]; }  $/;"	f	class:Mat
operator []	deplib/ntl-main/include/NTL/matrix.h	/^   const Vec<T>& operator[](long i) const { return _mat__rep[i]; }  $/;"	f	class:Mat
operator []	deplib/ntl-main/include/NTL/vec_GF2.h	/^      const GF2 operator[](long x) const $/;"	f	struct:Vec::const_proxy_iterator
operator []	deplib/ntl-main/include/NTL/vec_GF2.h	/^      ref_GF2 operator[](long x) const $/;"	f	struct:Vec::proxy_iterator
operator []	deplib/ntl-main/include/NTL/vec_GF2.h	/^   const GF2 operator[](long i) const$/;"	f	class:Vec
operator []	deplib/ntl-main/include/NTL/vec_GF2.h	/^   ref_GF2 operator[](long i) $/;"	f	class:Vec
operator []	deplib/ntl-main/include/NTL/vector.h	/^   T& operator[](long i)   $/;"	f	class:Vec
operator []	deplib/ntl-main/include/NTL/vector.h	/^   const T& operator[](long i) const $/;"	f	class:Vec
operator []	deplib/ntl-main/src/mat_lzz_p.cpp	/^   const zz_p * operator[](long i) const { return A[i+r_offset].elts() + c_offset; }$/;"	f	struct:const_mat_window_zz_p
operator []	deplib/ntl-main/src/mat_lzz_p.cpp	/^   zz_p * operator[](long i) const { return A[i+r_offset].elts() + c_offset; }$/;"	f	struct:mat_window_zz_p
operator ^	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator^(const ZZ& a, const ZZ& b)$/;"	f
operator ^	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator^(const ZZ& a, long b)$/;"	f
operator ^	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator^(long a, const ZZ& b)$/;"	f
operator ^=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator^=(ZZ& x, const ZZ& b) $/;"	f
operator ^=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator^=(ZZ& x, long b) $/;"	f
operator bool	deplib/ntl-main/include/NTL/thread.h	/^   operator bool() const { return data.load( NTL_SNS memory_order_acquire); }$/;"	f	class:AtomicBool
operator const GF2EX&	deplib/ntl-main/include/NTL/GF2EX.h	/^   operator const GF2EX& () const { return f; }$/;"	f	class:GF2EXModulus
operator const GF2X&	deplib/ntl-main/include/NTL/GF2X.h	/^   operator const GF2X& () const { return f; }$/;"	f	class:GF2XModulus
operator const T&	deplib/ntl-main/include/NTL/SmartPtr.h	/^   operator const T& () const { return x; }$/;"	f	class:ConstReferenceWrapper
operator const ZZ_pEX&	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   operator const ZZ_pEX& () const { return f; }$/;"	f	class:ZZ_pEXModulus
operator const ZZ_pX&	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   operator const ZZ_pX& () const { return f; }$/;"	f	class:ZZ_pXModulus
operator const raw_ptr&	deplib/ntl-main/include/NTL/tools.h	/^   operator const raw_ptr& () const { return rep; }$/;"	f	class:WrappedPtr
operator const zz_pEX&	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   operator const zz_pEX& () const { return f; }$/;"	f	class:zz_pEXModulus
operator const zz_pX&	deplib/ntl-main/include/NTL/lzz_pX.h	/^   operator const zz_pX& () const { return f; }$/;"	f	class:zz_pXModulus
operator const_proxy_iterator	deplib/ntl-main/include/NTL/vec_GF2.h	/^      operator const_proxy_iterator() const $/;"	f	struct:Vec::proxy_iterator
operator fake_null_type	deplib/ntl-main/include/NTL/Lazy.h	/^   operator fake_null_type() const $/;"	f	class:Lazy
operator fake_null_type	deplib/ntl-main/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:AlignedArray
operator fake_null_type	deplib/ntl-main/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:CloneablePtr
operator fake_null_type	deplib/ntl-main/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:CopiedPtr
operator fake_null_type	deplib/ntl-main/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:SmartPtr
operator fake_null_type	deplib/ntl-main/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:Unique2DArray
operator fake_null_type	deplib/ntl-main/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:UniqueArray
operator fake_null_type	deplib/ntl-main/include/NTL/SmartPtr.h	/^   operator fake_null_type() const $/;"	f	class:UniquePtr
operator long	deplib/ntl-main/include/NTL/thread.h	/^   operator long() const { return data.load( NTL_SNS memory_order_acquire); }$/;"	f	class:AtomicLong
operator raw_ptr&	deplib/ntl-main/include/NTL/tools.h	/^   operator raw_ptr& () { return rep; }$/;"	f	class:WrappedPtr
operator unsigned long	deplib/ntl-main/include/NTL/thread.h	/^   operator unsigned long() const { return data.load( NTL_SNS memory_order_relaxed); }$/;"	f	class:AtomicLowWaterMark
operator wide_double_impl_t	deplib/ntl-main/include/NTL/sp_arith.h	/^   operator wide_double_impl_t() const { return data; }$/;"	f	class:wide_double
operator |	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator|(const ZZ& a, const ZZ& b)$/;"	f
operator |	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator|(const ZZ& a, long b)$/;"	f
operator |	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ operator|(long a, const ZZ& b)$/;"	f
operator |=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator|=(ZZ& x, const ZZ& b) $/;"	f
operator |=	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ& operator|=(ZZ& x, long b) $/;"	f
oprec	deplib/ntl-main/include/NTL/RR.h	/^static NTL_CHEAP_THREAD_LOCAL long oprec;$/;"	m	class:RR
oprec	deplib/ntl-main/include/NTL/quad_float.h	/^  long oprec;$/;"	m	class:quad_float
oprec	deplib/ntl-main/include/NTL/xdouble.h	/^long oprec;$/;"	m	class:xdouble
oprec	deplib/ntl-main/src/RR.cpp	/^long RR::oprec = 10;$/;"	m	class:RR	file:
oprec	deplib/ntl-main/src/quad_float1.cpp	/^long quad_float::oprec = 10;$/;"	m	class:quad_float	file:
oprec	deplib/ntl-main/src/xdouble.cpp	/^long xdouble::oprec = 10;$/;"	m	class:xdouble	file:
p	deplib/ntl-main/include/NTL/GF2E.h	/^   GF2XModulus p;$/;"	m	class:GF2EInfoT
p	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* p;$/;"	m	class:SmartPtrControlDerived
p	deplib/ntl-main/include/NTL/ZZ.h	/^   long p;$/;"	m	struct:RandomBndGenerator
p	deplib/ntl-main/include/NTL/ZZ.h	/^   long p;$/;"	m	struct:sp_ZZ_reduce_struct
p	deplib/ntl-main/include/NTL/ZZ_p.h	/^   ZZ p;      \/\/ the modulus$/;"	m	class:ZZ_pInfoT
p	deplib/ntl-main/include/NTL/ZZ_pE.h	/^   ZZ_pXModulus p;$/;"	m	class:ZZ_pEInfoT
p	deplib/ntl-main/include/NTL/lzz_p.h	/^   long p;$/;"	m	class:zz_pInfoT
p	deplib/ntl-main/include/NTL/lzz_pE.h	/^   zz_pXModulus p;$/;"	m	class:zz_pEInfoT
p	deplib/ntl-main/src/ZZXFactoring.cpp	/^   vec_long p;$/;"	m	struct:LocalInfoT	file:
p_info	deplib/ntl-main/include/NTL/lzz_p.h	/^   FFTPrimeInfo* p_info; \/\/ non-null means we are directly using $/;"	m	class:zz_pInfoT
p_info_owner	deplib/ntl-main/include/NTL/lzz_p.h	/^   UniquePtr<FFTPrimeInfo> p_info_owner;$/;"	m	class:zz_pInfoT
pair_GF2EX_long	deplib/ntl-main/include/NTL/pair_GF2EX_long.h	/^typedef Pair<GF2EX,long> pair_GF2EX_long;$/;"	t
pair_GF2X_long	deplib/ntl-main/include/NTL/pair_GF2X_long.h	/^typedef Pair<GF2X,long> pair_GF2X_long;$/;"	t
pair_ZZX_long	deplib/ntl-main/include/NTL/pair_ZZX_long.h	/^typedef Pair<ZZX,long> pair_ZZX_long;$/;"	t
pair_ZZ_pEX_long	deplib/ntl-main/include/NTL/pair_ZZ_pEX_long.h	/^typedef Pair<ZZ_pEX,long> pair_ZZ_pEX_long;$/;"	t
pair_ZZ_pX_long	deplib/ntl-main/include/NTL/pair_ZZ_pX_long.h	/^typedef Pair<ZZ_pX,long> pair_ZZ_pX_long;$/;"	t
pair_zz_pEX_long	deplib/ntl-main/include/NTL/pair_lzz_pEX_long.h	/^typedef Pair<zz_pEX,long> pair_zz_pEX_long;$/;"	t
pair_zz_pX_long	deplib/ntl-main/include/NTL/pair_lzz_pX_long.h	/^typedef Pair<zz_pX,long> pair_zz_pX_long;$/;"	t
pattern	deplib/ntl-main/src/ZZXFactoring.cpp	/^   vec_vec_long pattern;$/;"	m	struct:LocalInfoT	file:
pclmul_mul1	deplib/ntl-main/src/CheckPCLMUL.cpp	/^pclmul_mul1 (unsigned long *c, unsigned long a, unsigned long b)$/;"	f	file:
pclmul_mul1	deplib/ntl-main/src/GF2X.cpp	/^pclmul_mul1 (unsigned long *c, unsigned long a, unsigned long b)$/;"	f	file:
pd_AA_store_len	deplib/ntl-main/src/FFT.cpp	/^static NTL_CHEAP_THREAD_LOCAL long pd_AA_store_len = 0;$/;"	v	file:
pd_FFTMultipliers	deplib/ntl-main/src/FFT.cpp	/^typedef LazyTable<pd_FFTVectorPair, NTL_FFTMaxRoot+1> pd_FFTMultipliers;$/;"	t	file:
pd_FFTVectorPair	deplib/ntl-main/src/FFT.cpp	/^class pd_FFTVectorPair {$/;"	c	file:
pd_LazyAddMod	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazyAddMod(pd a, pd b, double n)$/;"	f
pd_LazyAddMod2	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazyAddMod2(pd a, pd b, double n)$/;"	f
pd_LazyAddMod4	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazyAddMod4(pd a, pd b, double n)$/;"	f
pd_LazyDoubleMod2	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazyDoubleMod2(pd a, double n)$/;"	f
pd_LazyDoubleMod4	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazyDoubleMod4(pd a, double n)$/;"	f
pd_LazyMulModPrecon	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazyMulModPrecon(pd a, pd b, double n, pd bninv)$/;"	f
pd_LazyPrepMulModPrecon	deplib/ntl-main/src/FFT.cpp	/^pd_LazyPrepMulModPrecon(double *bninv, const double *b, double n, long len)$/;"	f	file:
pd_LazyPrepMulModPrecon	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazyPrepMulModPrecon(long b, long n)$/;"	f	file:
pd_LazyPrepMulModPrecon_impl	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazyPrepMulModPrecon_impl(double *bninv, const double *b, double n, long len)$/;"	f
pd_LazyReduce1	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazyReduce1(pd a, double q)$/;"	f
pd_LazyReduce2	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazyReduce2(pd a, double q)$/;"	f
pd_LazySubMod	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazySubMod(pd a, pd b, double n)$/;"	f
pd_LazySubMod2	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazySubMod2(pd a, pd b, double n)$/;"	f
pd_LazySubMod4	deplib/ntl-main/src/pd_FFT.cpp	/^pd_LazySubMod4(pd a, pd b, double n)$/;"	f
pd_fft_base	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fft_base(double* xp, long lgN, const pd_mod_t& mod)$/;"	f
pd_fft_layer	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fft_layer(double* xp, long blocks, long size,$/;"	f	file:
pd_fft_layer_inner_loop	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fft_layer_inner_loop(double* NTL_RESTRICT xp0, $/;"	f	file:
pd_fft_layer_size1	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fft_layer_size1(double* xp, long blocks,$/;"	f	file:
pd_fft_layer_size1_one_block	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fft_layer_size1_one_block(double* x,$/;"	f	file:
pd_fft_layer_size2	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fft_layer_size2(double* NTL_RESTRICT xp, long blocks,$/;"	f	file:
pd_fft_layer_size4	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fft_layer_size4(double* NTL_RESTRICT xp, long blocks,$/;"	f	file:
pd_fft_layer_size8	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fft_layer_size8(double* NTL_RESTRICT xp, long blocks,$/;"	f	file:
pd_fft_short	deplib/ntl-main/src/pd_FFT.cpp	/^void pd_fft_short(double* xp, long yn, long xn, long lgN, $/;"	f	file:
pd_fft_trunc_impl	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fft_trunc_impl(long* A, const long* a, double* xp, long lgN, const pd_mod_t& mod,$/;"	f
pd_full	deplib/ntl-main/src/pd_FFT.cpp	/^typedef PD<4> pd_full;$/;"	t	file:
pd_full	deplib/ntl-main/src/pd_FFT.cpp	/^typedef PD<8> pd_full;$/;"	t	file:
pd_fwd_butterfly_packed2	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fwd_butterfly_packed2(pd a, double n)$/;"	f
pd_fwd_butterfly_packed4	deplib/ntl-main/src/pd_FFT.cpp	/^pd_fwd_butterfly_packed4(pd a, pd w, double n, pd wninv)$/;"	f
pd_half	deplib/ntl-main/src/pd_FFT.cpp	/^typedef PD<2> pd_half;$/;"	t	file:
pd_half	deplib/ntl-main/src/pd_FFT.cpp	/^typedef PD<4> pd_half;$/;"	t	file:
pd_ifft_base	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_base(double* xp, long lgN, const pd_mod_t& mod)$/;"	f
pd_ifft_layer	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_layer(double* xp, long blocks, long size,$/;"	f	file:
pd_ifft_layer_inner_loop	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_layer_inner_loop(double* NTL_RESTRICT xp0, $/;"	f	file:
pd_ifft_layer_size1	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_layer_size1(double* xp, long blocks,$/;"	f	file:
pd_ifft_layer_size1_one_block	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_layer_size1_one_block(double* x,$/;"	f	file:
pd_ifft_layer_size2	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_layer_size2(double* NTL_RESTRICT xp, long blocks,$/;"	f	file:
pd_ifft_layer_size4	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_layer_size4(double* NTL_RESTRICT xp, long blocks,$/;"	f	file:
pd_ifft_layer_size8	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_layer_size8(double* NTL_RESTRICT xp, long blocks,$/;"	f	file:
pd_ifft_short1	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_short1(double* xp, long yn, long lgN, const pd_mod_t& mod)$/;"	f	file:
pd_ifft_short2	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_short2(double* xp, long yn, long lgN, const pd_mod_t& mod)$/;"	f	file:
pd_ifft_trunc_impl	deplib/ntl-main/src/pd_FFT.cpp	/^pd_ifft_trunc_impl(long* A, const long* a, double* xp, long lgN, const pd_mod_t& mod, $/;"	f
pd_inv_butterfly_packed2	deplib/ntl-main/src/pd_FFT.cpp	/^pd_inv_butterfly_packed2(pd a, double n)$/;"	f
pd_inv_butterfly_packed4	deplib/ntl-main/src/pd_FFT.cpp	/^pd_inv_butterfly_packed4(pd a, pd w, double n, pd wninv)$/;"	f
pd_mod_t	deplib/ntl-main/include/NTL/pd_FFT.h	/^struct pd_mod_t {$/;"	s
pd_move	deplib/ntl-main/src/pd_FFT.cpp	/^pd_move(double *x, const long *a)$/;"	f	file:
pd_move	deplib/ntl-main/src/pd_FFT.cpp	/^pd_move(long *x, const double *a)$/;"	f	file:
pd_mul_move	deplib/ntl-main/src/pd_FFT.cpp	/^pd_mul_move(long *x, const double *a, pd_full b, double q, pd_full bqinv)$/;"	f	file:
pd_qrtr	deplib/ntl-main/src/pd_FFT.cpp	/^typedef PD<2> pd_qrtr;$/;"	t	file:
pd_reduce1_move	deplib/ntl-main/src/pd_FFT.cpp	/^pd_reduce1_move(long *x, const double *a, double q)$/;"	f	file:
pd_reduce2_move	deplib/ntl-main/src/pd_FFT.cpp	/^pd_reduce2_move(long *x, const double *a, double q)$/;"	f	file:
pindex	deplib/ntl-main/include/NTL/ZZ.h	/^long pindex;$/;"	m	class:PrimeSeq
pinfo	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^      const PartitionInfo& pinfo;$/;"	m	class:BasicThreadPool::ConcurrentTaskFct1
pinfo	deplib/ntl-main/include/NTL/ZZ.h	/^   UniquePtr<_ntl_general_rem_one_struct,sp_ZZ_reduce_struct_policy> pinfo;$/;"	m	struct:sp_ZZ_reduce_struct
pinned	deplib/ntl-main/include/NTL/WordVector.h	/^   bool pinned() const $/;"	f	class:WordVector
pinned	deplib/ntl-main/include/NTL/ZZ.h	/^bool pinned() const$/;"	f	class:ZZ
pinv	deplib/ntl-main/include/NTL/lzz_p.h	/^   mulmod_t pinv;$/;"	m	class:zz_pInfoT
plain_c_string_streambuf	deplib/ntl-main/include/NTL/tools.h	/^   plain_c_string_streambuf(const char* ss)$/;"	f	struct:plain_c_string_streambuf
plain_c_string_streambuf	deplib/ntl-main/include/NTL/tools.h	/^struct plain_c_string_streambuf : public std::streambuf$/;"	s
plain_mul	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void plain_mul(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p& B)  $/;"	f
plain_mul_aux	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void plain_mul_aux(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p& B)  $/;"	f
plain_mul_transpose	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void plain_mul_transpose(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p& B)  $/;"	f
plain_mul_transpose_aux	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void plain_mul_transpose_aux(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p& B)  $/;"	f
poly	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   ZZ_pX poly;$/;"	m	struct:ZZ_pXNewArgument
poly	deplib/ntl-main/include/NTL/lzz_pX.h	/^   zz_pX     poly;$/;"	m	struct:zz_pXNewArgument
poly_type	deplib/ntl-main/include/NTL/GF2.h	/^typedef GF2X poly_type;$/;"	t	class:GF2
poly_type	deplib/ntl-main/include/NTL/GF2E.h	/^typedef GF2EX poly_type;$/;"	t	class:GF2E
poly_type	deplib/ntl-main/include/NTL/ZZ.h	/^typedef ZZX poly_type;$/;"	t	class:ZZ
poly_type	deplib/ntl-main/include/NTL/ZZ_p.h	/^typedef ZZ_pX poly_type;$/;"	t	class:ZZ_p
poly_type	deplib/ntl-main/include/NTL/ZZ_pE.h	/^typedef ZZ_pEX poly_type;$/;"	t	class:ZZ_pE
poly_type	deplib/ntl-main/include/NTL/lzz_p.h	/^typedef zz_pX poly_type;$/;"	t	class:zz_p
poly_type	deplib/ntl-main/include/NTL/lzz_pE.h	/^typedef zz_pEX poly_type;$/;"	t	class:zz_pE
pool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     BasicThreadPool *pool;$/;"	m	class:BasicThreadPool::ConcurrentTask
pop	deplib/ntl-main/src/ZZ.cpp	/^   long pop() { return data[top--]; }$/;"	f	struct:_ZZ_local_stack
pos	deplib/ntl-main/include/NTL/ZZ.h	/^   long pos;$/;"	m	class:RandomStream
pos	deplib/ntl-main/include/NTL/ZZ.h	/^   long pos;$/;"	m	class:old_RandomStream
position	deplib/ntl-main/include/NTL/matrix.h	/^   long position(const Vec<T>& a) const { return _mat__rep.position(a); } $/;"	f	class:Mat
position	deplib/ntl-main/include/NTL/vector.h	/^long Vec<T>::position(const T& a) const  $/;"	f	class:Vec
position1	deplib/ntl-main/include/NTL/matrix.h	/^   long position1(const Vec<T>& a) const { return _mat__rep.position1(a); } $/;"	f	class:Mat
position1	deplib/ntl-main/include/NTL/vector.h	/^long Vec<T>::position1(const T& a) const  $/;"	f	class:Vec
posn	deplib/ntl-main/include/NTL/GF2X.h	/^   long posn; \/\/  n - NTL_BITS_PER_LONG*(sn-1);$/;"	m	class:GF2XModulus
pow	deplib/ntl-main/include/NTL/RR.h	/^inline RR pow(const RR& x, const RR& y)$/;"	f
pow	deplib/ntl-main/src/RR.cpp	/^void pow(RR& res, const RR& x, const RR& y)$/;"	f
power	deplib/ntl-main/include/NTL/GF2.h	/^inline void power(GF2& x, GF2 a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/GF2.h	/^inline void power(ref_GF2 x, GF2 a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E power(const GF2E& a, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E power(const GF2E& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/GF2E.h	/^inline void power(GF2E& x, const GF2E& a, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/GF2E.h	/^inline void power(GF2E& x, const GF2E& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX power(const GF2EX& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X power(const GF2X& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/RR.h	/^inline RR power(const RR& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ power(const ZZ& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ.h	/^inline void power(ZZ& x, const ZZ& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ.h	/^inline void power(ZZ& x, long a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p power(const ZZ_p& a, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p power(const ZZ_p& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void power(ZZ_p& x, const ZZ_p& a, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void power(ZZ_p& x, const ZZ_p& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE power(const ZZ_pE& a, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE power(const ZZ_pE& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void power(ZZ_pE& x, const ZZ_pE& a, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void power(ZZ_pE& x, const ZZ_pE& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX power(const ZZ_pEX& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX power(const ZZ_pX& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void power(zz_p& x, zz_p a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p power(zz_p a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void power(zz_pE& x, const zz_pE& a, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void power(zz_pE& x, const zz_pE& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE power(const zz_pE& a, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE power(const zz_pE& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX power(const zz_pEX& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX power(const zz_pX& a, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 power(const mat_GF2& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 power(const mat_GF2& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline void power(mat_GF2& X, const mat_GF2& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E power(const mat_GF2E& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E power(const mat_GF2E& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline void power(mat_GF2E& X, const mat_GF2E& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR power(const mat_RR& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR power(const mat_RR& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_RR.h	/^inline void power(mat_RR& X, const mat_RR& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ power(const mat_ZZ& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ power(const mat_ZZ& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline void power(mat_ZZ& X, const mat_ZZ& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p power(const mat_ZZ_p& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p power(const mat_ZZ_p& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline void power(mat_ZZ_p& X, const mat_ZZ_p& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE power(const mat_ZZ_pE& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE power(const mat_ZZ_pE& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline void power(mat_ZZ_pE& X, const mat_ZZ_pE& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p power(const mat_zz_p& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p power(const mat_zz_p& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void power(mat_zz_p& X, const mat_zz_p& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void power(mat_zz_p& X, const mat_zz_p& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE power(const mat_zz_pE& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE power(const mat_zz_pE& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline void power(mat_zz_pE& X, const mat_zz_pE& A, long e)$/;"	f
power	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float power(const quad_float& x, long e)$/;"	f
power	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble power(const xdouble& a, const ZZ& e)$/;"	f
power	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble power(const xdouble& a, long e)$/;"	f
power	deplib/ntl-main/src/GF2.cpp	/^GF2 power(GF2 a, long e)$/;"	f
power	deplib/ntl-main/src/GF2EX.cpp	/^void power(GF2EX& x, const GF2EX& a, long e)$/;"	f
power	deplib/ntl-main/src/GF2EXFactoring.cpp	/^long power(long a, long e)$/;"	f	file:
power	deplib/ntl-main/src/GF2X1.cpp	/^void power(GF2X& x, const GF2X& a, long e)$/;"	f
power	deplib/ntl-main/src/RR.cpp	/^void power(RR& z, const RR& a, long e)$/;"	f
power	deplib/ntl-main/src/ZZ_pEX.cpp	/^void power(ZZ_pEX& x, const ZZ_pEX& a, long e)$/;"	f
power	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^long power(long a, long e)$/;"	f	file:
power	deplib/ntl-main/src/ZZ_pX.cpp	/^void power(ZZ_pX& x, const ZZ_pX& a, long e)$/;"	f
power	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^long power(long a, long e)$/;"	f	file:
power	deplib/ntl-main/src/lzz_pEX.cpp	/^void power(zz_pEX& x, const zz_pEX& a, long e)$/;"	f
power	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^long power(long a, long e)$/;"	f	file:
power	deplib/ntl-main/src/lzz_pX.cpp	/^void power(zz_pX& x, const zz_pX& a, long e)$/;"	f
power	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^long power(long a, long e)$/;"	f	file:
power	deplib/ntl-main/src/mat_GF2.cpp	/^void power(mat_GF2& X, const mat_GF2& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/src/mat_GF2E.cpp	/^void power(mat_GF2E& X, const mat_GF2E& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/src/mat_RR.cpp	/^void power(mat_RR& X, const mat_RR& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/src/mat_ZZ.cpp	/^void power(mat_ZZ& X, const mat_ZZ& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void power(mat_ZZ_p& X, const mat_ZZ_p& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void power(mat_ZZ_pE& X, const mat_ZZ_pE& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void power(mat_zz_pE& X, const mat_zz_pE& A, const ZZ& e)$/;"	f
power	deplib/ntl-main/src/quad_float1.cpp	/^void power(quad_float& z, const quad_float& a, long e)$/;"	f
power	deplib/ntl-main/src/xdouble.cpp	/^void power(xdouble& z, const xdouble& a, const ZZ& e)$/;"	f
power	deplib/ntl-main/src/xdouble.cpp	/^void power(xdouble& z, const xdouble& a, long e)$/;"	f
power2	deplib/ntl-main/src/CheckContractAux.cpp	/^double power2(long k)$/;"	f
power2	deplib/ntl-main/src/MakeDescAux.cpp	/^double power2(long k)$/;"	f
power2	deplib/ntl-main/src/RR.cpp	/^void power2(RR& z, long e)$/;"	f
power2	deplib/ntl-main/src/ZZ.cpp	/^void power2(ZZ& x, long e)$/;"	f
power2	deplib/ntl-main/src/quad_float1.cpp	/^void power2(quad_float& z, long e)$/;"	f
power2	deplib/ntl-main/src/xdouble.cpp	/^void power2(xdouble& z, long e)$/;"	f
power2_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR power2_RR(long e)$/;"	f
power2_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ power2_ZZ(long e)$/;"	f
power2_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float power2_quad_float(long e)$/;"	f
power2_xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble power2_xdouble(long e)$/;"	f
power_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ power_ZZ(long a, long e)$/;"	f
power_long	deplib/ntl-main/src/ZZ.cpp	/^long power_long(long a, long e)$/;"	f
ppvec	deplib/ntl-main/src/ZZX1.cpp	/^   Vec<ZZVec> ppvec;       \/\/ length == nblocks$/;"	m	struct:NewFastCRTHelper	file:
prec	deplib/ntl-main/include/NTL/RR.h	/^static NTL_CHEAP_THREAD_LOCAL long prec;$/;"	m	class:RR
prec	deplib/ntl-main/src/RR.cpp	/^long RR::prec = 150;$/;"	m	class:RR	file:
precision	deplib/ntl-main/include/NTL/RR.h	/^static long precision() { return prec; }$/;"	f	class:RR
prg	deplib/ntl-main/doc/ZZ.cpp.html	/^<a name="prg"><\/a>$/;"	a
prime	deplib/ntl-main/include/NTL/MatPrime.h	/^   Vec<long> prime;  \/\/ prime[i] = q[i]$/;"	m	struct:MatPrime_crt_helper
prime	deplib/ntl-main/include/NTL/ZZ_p.h	/^   Vec<long> prime;  \/\/ prime[i] = q[i]$/;"	m	class:ZZ_pFFTInfoT
prime_recip	deplib/ntl-main/include/NTL/MatPrime.h	/^   Vec<double> prime_recip;  \/\/ prime_recip[i] = 1\/double(q[i])$/;"	m	struct:MatPrime_crt_helper
prime_recip	deplib/ntl-main/include/NTL/ZZ_p.h	/^   Vec<double> prime_recip;  \/\/ prime_recip[i] = 1\/double(q[i])$/;"	m	class:ZZ_pFFTInfoT
prime_vec	deplib/ntl-main/src/ZZX1.cpp	/^   Vec<long> prime_vec;   \/\/ length == nprimes$/;"	m	struct:NewFastCRTHelper	file:
primes	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> primes;$/;"	m	class:_ntl_crt_struct_fast	file:
primes	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> primes;$/;"	m	class:_ntl_rem_struct_basic	file:
primes	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> primes;$/;"	m	class:_ntl_rem_struct_fast	file:
primes	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> primes;$/;"	m	class:_ntl_rem_struct_medium	file:
primes	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> primes;$/;"	m	class:_ntl_rem_struct_tbl	file:
print2k	deplib/ntl-main/src/MakeDesc.cpp	/^void print2k(FILE *f, long k, long bpl)$/;"	f
print2k_WD	deplib/ntl-main/src/MakeDesc.cpp	/^void print2k_WD(FILE *f, long k, long bpl)$/;"	f
print_BB_mul_code	deplib/ntl-main/src/MakeDesc.cpp	/^void print_BB_mul_code(FILE *f, long n)$/;"	f
print_BB_rev_code	deplib/ntl-main/src/MakeDesc.cpp	/^void print_BB_rev_code(FILE *f, long n)$/;"	f
print_BB_sqr_code	deplib/ntl-main/src/MakeDesc.cpp	/^void print_BB_sqr_code(FILE *f, long n)$/;"	f
print_alt1_mul_body	deplib/ntl-main/src/MakeDesc.cpp	/^void print_alt1_mul_body(FILE *f, long n1, long k, long fn,$/;"	f
print_alt_mul_body	deplib/ntl-main/src/MakeDesc.cpp	/^void print_alt_mul_body(FILE *f, long n1, long k, long fn, $/;"	f
print_flag	deplib/ntl-main/src/GF2XTimeTest.cpp	/^void print_flag()$/;"	f
print_flag	deplib/ntl-main/src/Poly1TimeTest.cpp	/^void print_flag()$/;"	f
print_flag	deplib/ntl-main/src/Poly2TimeTest.cpp	/^void print_flag()$/;"	f
print_flag	deplib/ntl-main/src/Poly3TimeTest.cpp	/^void print_flag()$/;"	f
print_mul_body	deplib/ntl-main/src/MakeDesc.cpp	/^void print_mul_body(FILE *f, long n1, long k, long fn,$/;"	f
prod	deplib/ntl-main/src/ZZX1.cpp	/^   ZZ prod;$/;"	m	struct:NewFastCRTHelper	file:
prod_half	deplib/ntl-main/src/ZZX1.cpp	/^   ZZ prod_half;$/;"	m	struct:NewFastCRTHelper	file:
prod_vec	deplib/ntl-main/src/ZZX1.cpp	/^   Vec<ZZ> prod_vec;       \/\/ length == veclen$/;"	m	struct:NewFastCRTHelper	file:
prod_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_gbigint_wrapped> prod_vec;$/;"	m	class:_ntl_crt_struct_fast	file:
prod_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_gbigint_wrapped> prod_vec;$/;"	m	class:_ntl_rem_struct_fast	file:
prod_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_gbigint_wrapped> prod_vec;$/;"	m	class:_ntl_rem_struct_medium	file:
program_details	deplib/ntl-main/src/libtool-origin/missing	/^program_details ()$/;"	f
project	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2E project(const vec_GF2E& a, const GF2EX& b)$/;"	f
project	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void project(GF2E& x, const vec_GF2E& a, const GF2EX& b)$/;"	f
project	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2 project(const vec_GF2& a, const GF2X& b)$/;"	f
project	deplib/ntl-main/include/NTL/GF2X.h	/^inline void project(ref_GF2 x, const vec_GF2& a, const GF2X& b)$/;"	f
project	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pE project(const vec_ZZ_pE& a, const ZZ_pEX& b)$/;"	f
project	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void project(ZZ_pE& x, const vec_ZZ_pE& a, const ZZ_pEX& b)$/;"	f
project	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_p project(const vec_ZZ_p& a, const ZZ_pX& b)$/;"	f
project	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void project(ZZ_p& x, const vec_ZZ_p& a, const ZZ_pX& b)$/;"	f
project	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void project(zz_pE& x, const vec_zz_pE& a, const zz_pEX& b)$/;"	f
project	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pE project(const vec_zz_pE& a, const zz_pEX& b)$/;"	f
project	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void project(zz_p& x, const vec_zz_p& a, const zz_pX& b)$/;"	f
project	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_p project(const vec_zz_p& a, const zz_pX& b)$/;"	f
prototypes	deplib/ntl-main/src/libtool-origin/configure	/^   function prototypes and stuff, but not '\\xHH' hex character constants.$/;"	f
proxy_iterator	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator() { }$/;"	f	struct:Vec::proxy_iterator
proxy_iterator	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator(INIT_LOOP_HOLE_TYPE, unsigned long *ptr, long idx)$/;"	f	struct:Vec::proxy_iterator
proxy_iterator	deplib/ntl-main/include/NTL/vec_GF2.h	/^   struct proxy_iterator {$/;"	s	class:Vec
proxy_iterator_impl	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator_impl() : ptr(0), idx(0) { }$/;"	f	struct:Vec::proxy_iterator_impl
proxy_iterator_impl	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator_impl(T *_ptr, long _idx) : ptr(_ptr), idx(_idx) { }$/;"	f	struct:Vec::proxy_iterator_impl
proxy_iterator_impl	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator_impl(const proxy_iterator_impl<X>& other)$/;"	f	struct:Vec::proxy_iterator_impl
proxy_iterator_impl	deplib/ntl-main/include/NTL/vec_GF2.h	/^   struct proxy_iterator_impl {$/;"	s	class:Vec
pruning_bnd	deplib/ntl-main/src/ZZXFactoring.cpp	/^long pruning_bnd(long r, long k)$/;"	f	file:
pshift	deplib/ntl-main/include/NTL/ZZ.h	/^long pshift;$/;"	m	class:PrimeSeq
ptr	deplib/ntl-main/include/NTL/GF2E.h	/^SmartPtr<GF2EInfoT> ptr;$/;"	m	class:GF2EContext
ptr	deplib/ntl-main/include/NTL/ZZ_p.h	/^SmartPtr<ZZ_pInfoT> ptr;$/;"	m	class:ZZ_pContext
ptr	deplib/ntl-main/include/NTL/ZZ_pE.h	/^SmartPtr<ZZ_pEInfoT> ptr;$/;"	m	class:ZZ_pEContext
ptr	deplib/ntl-main/include/NTL/lzz_p.h	/^SmartPtr<zz_pInfoT> ptr;$/;"	m	class:zz_pContext
ptr	deplib/ntl-main/include/NTL/lzz_pE.h	/^SmartPtr<zz_pEInfoT> ptr;$/;"	m	class:zz_pEContext
ptr	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^   CopiedPtr<mat_ZZ_p_opaque_body,CloningCopiedPtrPolicy> ptr;$/;"	m	struct:mat_ZZ_p_opaque
ptr	deplib/ntl-main/include/NTL/vec_GF2.h	/^      T *ptr;$/;"	m	struct:Vec::proxy_iterator_impl
push	deplib/ntl-main/doc/RR.cpp.html	/^<a name="push"><\/a>$/;"	a
push	deplib/ntl-main/src/ZZ.cpp	/^void _ZZ_local_stack::push(long x)$/;"	f	class:_ZZ_local_stack
push_node	deplib/ntl-main/include/NTL/tools.h	/^push_node(Node *p)$/;"	f	namespace:details_pthread
push_node	deplib/ntl-main/src/CheckThreads.cpp	/^push_node(Node *p)$/;"	f	namespace:details_pthread
push_type	deplib/ntl-main/include/NTL/GF2.h	/^typedef GF2Push push_type;$/;"	t	class:GF2
push_type	deplib/ntl-main/include/NTL/GF2E.h	/^typedef GF2EPush push_type;$/;"	t	class:GF2E
push_type	deplib/ntl-main/include/NTL/ZZ_p.h	/^typedef ZZ_pPush push_type;$/;"	t	class:ZZ_p
push_type	deplib/ntl-main/include/NTL/ZZ_pE.h	/^typedef ZZ_pEPush push_type;$/;"	t	class:ZZ_pE
push_type	deplib/ntl-main/include/NTL/lzz_p.h	/^typedef zz_pPush push_type;$/;"	t	class:zz_p
push_type	deplib/ntl-main/include/NTL/lzz_pE.h	/^typedef zz_pEPush push_type;$/;"	t	class:zz_pE
put	deplib/ntl-main/include/NTL/matrix.h	/^   void put(long i, long j, const T& a) { _mat__rep[i].put(j, a); }$/;"	f	class:Mat
put	deplib/ntl-main/include/NTL/matrix.h	/^   void put(long i, long j, const U& a) { _mat__rep[i].put(j, a); }$/;"	f	class:Mat
put	deplib/ntl-main/include/NTL/vec_GF2.h	/^   void put(long i, GF2 a) { (*this)[i] = a; }$/;"	f	class:Vec
put	deplib/ntl-main/include/NTL/vec_GF2.h	/^   void put(long i, long a) { put(i, to_GF2(a)); }$/;"	f	class:Vec
put	deplib/ntl-main/include/NTL/vector.h	/^   void put(long i, const T& a)$/;"	f	class:Vec
q	deplib/ntl-main/include/NTL/FFT.h	/^   long q;   \/\/ the prime itself$/;"	m	struct:FFTPrimeInfo
q	deplib/ntl-main/include/NTL/FacVec.h	/^   long q;$/;"	m	struct:IntFactor
q	deplib/ntl-main/include/NTL/MatPrime.h	/^   long q;   $/;"	m	struct:MatPrimeInfo
q	deplib/ntl-main/include/NTL/pd_FFT.h	/^   double q;$/;"	m	struct:pd_mod_t
q	deplib/ntl-main/src/FFT.cpp	/^   mint_t q;$/;"	m	struct:new_mod_t	file:
q_add	deplib/ntl-main/src/GF2EX.cpp	/^void q_add(GF2X& x, const GF2X& a, const GF2X& b)$/;"	f	file:
q_copy	deplib/ntl-main/src/GF2EX.cpp	/^void q_copy(GF2X& x, const GF2X& a)$/;"	f	file:
qinv	deplib/ntl-main/include/NTL/FFT.h	/^   mulmod_t qinv;   \/\/ 1\/((wide_double) q) -- but subject to change!!$/;"	m	struct:FFTPrimeInfo
qrecip	deplib/ntl-main/include/NTL/FFT.h	/^   double qrecip;   \/\/ 1\/double(q)$/;"	m	struct:FFTPrimeInfo
quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^  explicit quad_float(double a) : hi(0), lo(0) { *this = a; }$/;"	f	class:quad_float
quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^  quad_float() : hi(0), lo(0)  {}$/;"	f	class:quad_float
quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^  quad_float(double x, double y) : hi(x), lo(y) { } \/\/ internal use only$/;"	f	class:quad_float
quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^class quad_float {$/;"	c
quad_float_PrecisionOK	deplib/ntl-main/src/quad_float.cpp	/^NO_INLINE void quad_float_PrecisionOK(long& res, const double& one)$/;"	f
quad_float_in_place_add	deplib/ntl-main/src/quad_float.cpp	/^NO_INLINE void quad_float_in_place_add(quad_float& x, const quad_float& y ) {$/;"	f
quad_float_in_place_div	deplib/ntl-main/src/quad_float.cpp	/^NO_INLINE void quad_float_in_place_div(quad_float& x, const quad_float& y ) {$/;"	f
quad_float_in_place_mul	deplib/ntl-main/src/quad_float.cpp	/^NO_INLINE void quad_float_in_place_mul(quad_float& x,const quad_float& y ) {$/;"	f
quad_float_in_place_negate	deplib/ntl-main/src/quad_float.cpp	/^NO_INLINE void quad_float_in_place_negate(quad_float& x)$/;"	f
quad_float_in_place_sqrt	deplib/ntl-main/src/quad_float.cpp	/^NO_INLINE void quad_float_in_place_sqrt(quad_float& y, double& c_ref) {$/;"	f
quad_float_in_place_sub	deplib/ntl-main/src/quad_float.cpp	/^NO_INLINE void quad_float_in_place_sub(quad_float& x, const quad_float& y ) {$/;"	f
quad_float_normalize	deplib/ntl-main/src/quad_float.cpp	/^NO_INLINE void quad_float_normalize(quad_float& z, const double& xhi, const double& xlo)$/;"	f
quad_float_zero	deplib/ntl-main/src/quad_float.cpp	/^double quad_float_zero = 0;$/;"	v
r_offset	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long r_offset;$/;"	m	struct:const_mat_window_zz_p	file:
r_offset	deplib/ntl-main/src/mat_lzz_p.cpp	/^   long r_offset;$/;"	m	struct:mat_window_zz_p	file:
random	deplib/ntl-main/include/NTL/GF2.h	/^inline void random(GF2& x)$/;"	f
random	deplib/ntl-main/include/NTL/GF2.h	/^inline void random(ref_GF2 x)$/;"	f
random	deplib/ntl-main/include/NTL/GF2E.h	/^inline void random(GF2E& x)$/;"	f
random	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void random(ZZ_p& x)$/;"	f
random	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void random(ZZ_pE& x)$/;"	f
random	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void random(zz_p& x)$/;"	f
random	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void random(zz_pE& x)$/;"	f
random	deplib/ntl-main/src/GF2EX.cpp	/^void random(GF2EX& x, long n)$/;"	f
random	deplib/ntl-main/src/GF2X.cpp	/^void random(GF2X& x, long n)$/;"	f
random	deplib/ntl-main/src/RR.cpp	/^void random(RR& z)$/;"	f
random	deplib/ntl-main/src/ZZ_pEX.cpp	/^void random(ZZ_pEX& x, long n)$/;"	f
random	deplib/ntl-main/src/ZZ_pX.cpp	/^void random(ZZ_pX& x, long n)$/;"	f
random	deplib/ntl-main/src/lzz_pEX.cpp	/^void random(zz_pEX& x, long n)$/;"	f
random	deplib/ntl-main/src/lzz_pX.cpp	/^void random(zz_pX& x, long n)$/;"	f
random	deplib/ntl-main/src/mat_GF2.cpp	/^void random(mat_GF2& x, long n, long m)$/;"	f
random	deplib/ntl-main/src/mat_GF2E.cpp	/^void random(mat_GF2E& x, long n, long m)$/;"	f
random	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void random(mat_ZZ_p& x, long n, long m)$/;"	f
random	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void random(mat_ZZ_pE& x, long n, long m)$/;"	f
random	deplib/ntl-main/src/mat_lzz_p.cpp	/^void random(mat_zz_p& x, long n, long m)$/;"	f
random	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void random(mat_zz_pE& x, long n, long m)$/;"	f
random	deplib/ntl-main/src/quad_float1.cpp	/^void random(quad_float& x)$/;"	f
random	deplib/ntl-main/src/vec_GF2.cpp	/^void random(vec_GF2& x, long n)$/;"	f
random	deplib/ntl-main/src/vec_GF2E.cpp	/^void random(vec_GF2E& x, long n)$/;"	f
random	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void random(vec_ZZ_p& x, long n)$/;"	f
random	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void random(vec_ZZ_pE& x, long n)$/;"	f
random	deplib/ntl-main/src/vec_lzz_p.cpp	/^void random(vec_zz_p& x, long n)$/;"	f
random	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void random(vec_zz_pE& x, long n)$/;"	f
random_GF2	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 random_GF2()$/;"	f
random_GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E random_GF2E()$/;"	f
random_GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX random_GF2EX(long n)$/;"	f
random_GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X random_GF2X(long n)$/;"	f
random_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR random_RR() $/;"	f
random_ZZ_p	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p random_ZZ_p()$/;"	f
random_ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE random_ZZ_pE()$/;"	f
random_ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX random_ZZ_pEX(long n)$/;"	f
random_ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX random_ZZ_pX(long n)$/;"	f
random_mat_GF2	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 random_mat_GF2(long n, long m)$/;"	f
random_mat_GF2E	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E random_mat_GF2E(long n, long m)$/;"	f
random_mat_ZZ_p	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p random_mat_ZZ_p(long n, long m)$/;"	f
random_mat_ZZ_pE	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE random_mat_ZZ_pE(long n, long m)$/;"	f
random_mat_zz_p	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p random_mat_zz_p(long n, long m)$/;"	f
random_mat_zz_pE	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE random_mat_zz_pE(long n, long m)$/;"	f
random_quad_float	deplib/ntl-main/src/quad_float1.cpp	/^quad_float random_quad_float()$/;"	f
random_vec_GF2	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2 random_vec_GF2(long n)$/;"	f
random_vec_GF2E	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline vec_GF2E random_vec_GF2E(long n)$/;"	f
random_vec_ZZ_p	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p random_vec_ZZ_p(long n)$/;"	f
random_vec_ZZ_pE	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^inline vec_ZZ_pE random_vec_ZZ_pE(long n)$/;"	f
random_vec_zz_p	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p random_vec_zz_p(long n)$/;"	f
random_vec_zz_pE	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^inline vec_zz_pE random_vec_zz_pE(long n)$/;"	f
random_zz_p	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p random_zz_p()$/;"	f
random_zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE random_zz_pE()$/;"	f
random_zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX random_zz_pEX(long n)$/;"	f
random_zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX random_zz_pX(long n)$/;"	f
raw_ptr	deplib/ntl-main/include/NTL/tools.h	/^   typedef T * raw_ptr;$/;"	t	class:WrappedPtr
rcon	deplib/ntl-main/src/ZZ.cpp	/^static const u32 rcon[] = {$/;"	v	file:
read_hex	aes_tests.c	/^static void read_hex(const char *in, uint8_t* v, size_t size, const char* param_name) {$/;"	f	file:
read_key	aes_whitebox_compiler.cc	/^void read_key(const char *in, uint8_t* key, size_t size) {$/;"	f	namespace:__anon4
reassoc_test	deplib/ntl-main/src/MakeDescAux.cpp	/^double reassoc_test(double a, double b, double c, double d)$/;"	f
reconstruct	deplib/ntl-main/src/MatPrime.cpp	/^void reconstruct(const MatPrime_crt_helper& H, ZZ& value, const MatPrime_residue_t *remainders,$/;"	f
reconstruct	deplib/ntl-main/src/ZZX1.cpp	/^void NewFastCRTHelper::reconstruct(ZZ& value, const long *remainders, $/;"	f	class:NewFastCRTHelper
reconstruct_aux	deplib/ntl-main/src/ZZX1.cpp	/^void NewFastCRTHelper::reconstruct_aux(ZZ& value, const long* remainders, $/;"	f	class:NewFastCRTHelper
red_fudge	deplib/ntl-main/src/G_LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double red_fudge = 0;$/;"	v	file:
red_fudge	deplib/ntl-main/src/LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL double red_fudge = 0;$/;"	v	file:
red_struct	deplib/ntl-main/include/NTL/MatPrime.h	/^   Vec<sp_reduce_struct> red_struct;$/;"	m	struct:MatPrime_crt_helper
red_struct	deplib/ntl-main/include/NTL/lzz_p.h	/^   sp_reduce_struct red_struct;$/;"	m	class:zz_pInfoT
red_struct	deplib/ntl-main/include/NTL/lzz_p.h	/^sp_reduce_struct red_struct() const { return ptr->red_struct; } $/;"	f	class:zz_pContext
red_struct	deplib/ntl-main/include/NTL/lzz_p.h	/^static sp_reduce_struct red_struct() { return zz_pInfo->red_struct; }$/;"	f	class:zz_p
red_struct	deplib/ntl-main/src/lip.cpp	/^   sp_ll_reduce_struct red_struct;$/;"	m	struct:_ntl_general_rem_one_struct	file:
red_struct_vec	deplib/ntl-main/src/ZZX1.cpp	/^   Vec<const sp_ZZ_reduce_struct*> red_struct_vec; \/\/ length == nprimes$/;"	m	struct:NewFastCRTHelper	file:
redc	deplib/ntl-main/src/lip.cpp	/^void redc(_ntl_gbigint T, _ntl_gbigint N, long m, _ntl_limb_t inv, $/;"	f	file:
reduce	deplib/ntl-main/src/LLL.cpp	/^void reduce(long k, long l, $/;"	f	file:
reduce	deplib/ntl-main/src/MatPrime.cpp	/^void reduce(const MatPrime_crt_helper& H, const ZZ& value, MatPrime_residue_t *remainders,$/;"	f
reduce	deplib/ntl-main/src/ZZX1.cpp	/^void NewFastCRTHelper::reduce(const ZZ& value, long *remainders, $/;"	f	class:NewFastCRTHelper
reduce	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(reduce)(FFTRep& x, const FFTRep& a, long k)$/;"	f
reduce	deplib/ntl-main/src/ZZ_pX.cpp	/^void reduce(FFTRep& x, const FFTRep& a, long k)$/;"	f
reduce	deplib/ntl-main/src/lzz_pX.cpp	/^void reduce(fftRep& x, const fftRep& a, long k)$/;"	f
reduce	deplib/ntl-main/src/lzz_pX.cpp	/^void reduce(zz_p& r, long a, long p, mulmod_t pinv)$/;"	f	file:
reduce	deplib/ntl-main/src/lzz_pX1.cpp	/^void reduce(zz_pXNewArgument& H, const zz_pXModulus& F)$/;"	f
reduce_aux	deplib/ntl-main/src/ZZX1.cpp	/^void NewFastCRTHelper::reduce_aux(const ZZ& value, long *remainders, $/;"	f	class:NewFastCRTHelper
reduce_struct	deplib/ntl-main/include/NTL/ZZ_p.h	/^   ZZ_ReduceStructAdapter reduce_struct;$/;"	m	class:ZZ_pFFTInfoT
ref	deplib/ntl-main/include/NTL/Lazy.h	/^      const Lazy& ref;$/;"	m	class:Lazy::Builder
ref	deplib/ntl-main/include/NTL/LazyTable.h	/^      const LazyTable& ref;$/;"	m	class:LazyTable::Builder
ref_GF2	deplib/ntl-main/include/NTL/GF2.h	/^class ref_GF2 {$/;"	c
ref_GF2	deplib/ntl-main/include/NTL/GF2.h	/^ref_GF2() : _ref_GF2__ptr(0), _ref_GF2__pos(0) { }$/;"	f	class:ref_GF2
ref_GF2	deplib/ntl-main/include/NTL/GF2.h	/^ref_GF2(GF2& a) :$/;"	f	class:ref_GF2
ref_GF2	deplib/ntl-main/include/NTL/GF2.h	/^ref_GF2(INIT_LOOP_HOLE_TYPE, unsigned long *ptr, long pos) :$/;"	f	class:ref_GF2
reference	deplib/ntl-main/include/NTL/matrix.h	/^   typedef typename Vec<T>::reference reference;$/;"	t	class:Mat
reference	deplib/ntl-main/include/NTL/vec_GF2.h	/^   typedef ref_GF2 reference;$/;"	t	class:Vec
reference	deplib/ntl-main/include/NTL/vector.h	/^   typedef value_type& reference;$/;"	t	class:Vec
reg	deplib/ntl-main/include/NTL/pd_FFT.h	/^   unsigned int reg;$/;"	m	struct:CSRPush
relax	deplib/ntl-main/include/NTL/tools.h	/^    void relax() { active = false; }$/;"	f	class:scope_guard
relax	deplib/ntl-main/include/NTL/tools.h	/^   void relax() { active = false; }$/;"	f	class:DummyScopeGuard
relaxed_InvModStatus	deplib/ntl-main/src/mat_lzz_p.cpp	/^long relaxed_InvModStatus(long& x, long a, long n, bool relax)$/;"	f	file:
relaxed_determinant	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline zz_p relaxed_determinant(const mat_zz_p& a, bool relax=true)$/;"	f
relaxed_determinant	deplib/ntl-main/src/mat_lzz_p.cpp	/^void relaxed_determinant(zz_p& d, const mat_zz_p& A, bool relax)$/;"	f
relaxed_exec_index	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  static void relaxed_exec_index(BasicThreadPool *pool, long cnt, const Fct& fct) $/;"	f	class:BasicThreadPool
relaxed_exec_range	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  static void relaxed_exec_range(BasicThreadPool *pool, long sz, const Fct& fct) $/;"	f	class:BasicThreadPool
relaxed_inv	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p relaxed_inv(const mat_zz_p& A, bool relax=true)$/;"	f
relaxed_inv	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void relaxed_inv(mat_zz_p& X, const mat_zz_p& A, bool relax=true)$/;"	f
relaxed_inv	deplib/ntl-main/src/mat_lzz_p.cpp	/^void relaxed_inv(zz_p& d, mat_zz_p& X, const mat_zz_p& A, bool relax)$/;"	f
relaxed_power	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p relaxed_power(const mat_zz_p& A, const ZZ& e, bool relax=true)$/;"	f
relaxed_power	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p relaxed_power(const mat_zz_p& A, long e, bool relax=true)$/;"	f
relaxed_power	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void relaxed_power(mat_zz_p& X, const mat_zz_p& A, long e, bool relax=true)$/;"	f
relaxed_power	deplib/ntl-main/src/mat_lzz_p.cpp	/^void relaxed_power(mat_zz_p& X, const mat_zz_p& A, const ZZ& e, bool relax)$/;"	f
relaxed_solve	deplib/ntl-main/src/mat_lzz_p.cpp	/^void relaxed_solve(zz_p& d, const mat_zz_p& A, vec_zz_p& x, const vec_zz_p& b, bool relax)$/;"	f
relaxed_solve	deplib/ntl-main/src/mat_lzz_p.cpp	/^void relaxed_solve(zz_p& d, vec_zz_p& x, $/;"	f
release	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* release() { T *p = dp; dp = 0; return p; }$/;"	f	class:CopiedPtr
release	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* release() { T *p = dp; dp = 0; return p; }$/;"	f	class:UniqueArray
release	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* release() { T *p = dp; dp = 0; return p; }$/;"	f	class:UniquePtr
release	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T* release() { return dp.release(); }$/;"	f	class:OptionalVal
release	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T_ptr* release() { len = 0; return dp.release(); }$/;"	f	class:Unique2DArray
release	deplib/ntl-main/include/NTL/SmartPtr.h	/^   char* release() {  char *p = sp; dp = 0; sp = 0;  return p; }$/;"	f	class:AlignedArray
relocatable	deplib/ntl-main/include/NTL/vector.h	/^   static constexpr bool relocatable = DeclareRelocatableType((T*)0);$/;"	m	class:Vec
rem	deplib/ntl-main/include/NTL/ZZ.h	/^   long rem(const ZZ& a) const$/;"	f	struct:sp_ZZ_reduce_struct
rem	deplib/ntl-main/include/NTL/ZZ.h	/^inline long rem(const ZZ& a, long b)$/;"	f
rem	deplib/ntl-main/include/NTL/ZZ.h	/^inline void rem(ZZ& r, const ZZ& a, const ZZ& b)$/;"	f
rem	deplib/ntl-main/include/NTL/sp_arith.h	/^long rem(long a, long n, sp_reduce_struct red) $/;"	f
rem	deplib/ntl-main/include/NTL/sp_arith.h	/^long rem(long a, long n, sp_reduce_struct red)$/;"	f
rem	deplib/ntl-main/include/NTL/sp_arith.h	/^long rem(unsigned long a, long n, sp_reduce_struct red) $/;"	f
rem	deplib/ntl-main/src/GF2EX.cpp	/^void rem(GF2EX& r, const GF2EX& a, const GF2EX& b)$/;"	f
rem	deplib/ntl-main/src/GF2EX.cpp	/^void rem(GF2EX& x, const GF2EX& a, const GF2EXModulus& F)$/;"	f
rem	deplib/ntl-main/src/GF2X1.cpp	/^void rem(GF2X& r, const GF2X& a, const GF2X& b)$/;"	f
rem	deplib/ntl-main/src/GF2X1.cpp	/^void rem(GF2X& r, const GF2X& a, const GF2XModulus& F)$/;"	f
rem	deplib/ntl-main/src/ZZX1.cpp	/^void rem(ZZX& r, const ZZX& a, const ZZX& b)$/;"	f
rem	deplib/ntl-main/src/ZZ_pEX.cpp	/^void rem(ZZ_pEX& r, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
rem	deplib/ntl-main/src/ZZ_pEX.cpp	/^void rem(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEXModulus& F)$/;"	f
rem	deplib/ntl-main/src/ZZ_pX.cpp	/^void rem(ZZ_pX& r, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
rem	deplib/ntl-main/src/ZZ_pX.cpp	/^void rem(ZZ_pX& x, const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
rem	deplib/ntl-main/src/lzz_pEX.cpp	/^void rem(zz_pEX& r, const zz_pEX& a, const zz_pEX& b)$/;"	f
rem	deplib/ntl-main/src/lzz_pEX.cpp	/^void rem(zz_pEX& x, const zz_pEX& a, const zz_pEXModulus& F)$/;"	f
rem	deplib/ntl-main/src/lzz_pX.cpp	/^void rem(zz_pX& r, const zz_pX& a, const zz_pX& b)$/;"	f
rem	deplib/ntl-main/src/lzz_pX.cpp	/^void rem(zz_pX& x, const zz_pX& a, const zz_pXModulus& F)$/;"	f
rem21	deplib/ntl-main/src/ZZ_pX.cpp	/^void rem21(ZZ_pX& x, const ZZ_pX& a, const ZZ_pXModulus& F)$/;"	f
rem21	deplib/ntl-main/src/lzz_pX.cpp	/^void rem21(zz_pX& x, const zz_pX& a, const zz_pXModulus& F)$/;"	f
rem_struct	deplib/ntl-main/include/NTL/ZZ_p.h	/^   ZZ_RemStructAdapter rem_struct;$/;"	m	class:ZZ_pFFTInfoT
rem_tmp_vec	deplib/ntl-main/include/NTL/ZZ_p.h	/^  ZZ_TmpVecAdapter rem_tmp_vec;$/;"	m	class:ZZ_pTmpSpaceT
rem_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_gbigint_wrapped> rem_vec;$/;"	m	class:_ntl_tmp_vec_crt_fast	file:
rem_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_gbigint_wrapped> rem_vec;$/;"	m	class:_ntl_tmp_vec_rem_impl	file:
remove	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  void remove(long n = 1)$/;"	f	class:BasicThreadPool
rep	deplib/ntl-main/include/NTL/GF2.h	/^inline long rep(GF2 a) { return a._GF2__rep; }$/;"	f
rep	deplib/ntl-main/include/NTL/GF2E.h	/^inline const GF2X& rep(const GF2E& a) { return a._GF2E__rep; }$/;"	f
rep	deplib/ntl-main/include/NTL/GF2EX.h	/^vec_GF2E rep;$/;"	m	class:GF2EX
rep	deplib/ntl-main/include/NTL/WordVector.h	/^   _ntl_ulong *rep;  $/;"	m	class:WordVector
rep	deplib/ntl-main/include/NTL/ZZ.h	/^   UniquePtr<_ntl_crt_struct> rep;$/;"	m	class:ZZ_CRTStructAdapter
rep	deplib/ntl-main/include/NTL/ZZ.h	/^   UniquePtr<_ntl_reduce_struct> rep;$/;"	m	class:ZZ_ReduceStructAdapter
rep	deplib/ntl-main/include/NTL/ZZ.h	/^   UniquePtr<_ntl_rem_struct> rep;$/;"	m	class:ZZ_RemStructAdapter
rep	deplib/ntl-main/include/NTL/ZZ.h	/^   UniquePtr<_ntl_tmp_vec> rep;$/;"	m	class:ZZ_TmpVecAdapter
rep	deplib/ntl-main/include/NTL/ZZ.h	/^WrappedPtr<_ntl_gbigint_body, Deleter> rep;$/;"	m	class:ZZ
rep	deplib/ntl-main/include/NTL/ZZX.h	/^vec_ZZ rep;$/;"	m	class:ZZX
rep	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline const ZZ& rep(const ZZ_p& a) { return a._ZZ_p__rep; }$/;"	f
rep	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline const ZZ_pX& rep(const ZZ_pE& a) { return a._ZZ_pE__rep; }$/;"	f
rep	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^vec_ZZ_pE rep;$/;"	m	class:ZZ_pEX
rep	deplib/ntl-main/include/NTL/ZZ_pX.h	/^vec_ZZ_p rep;$/;"	m	class:ZZ_pX
rep	deplib/ntl-main/include/NTL/lzz_p.h	/^inline long rep(zz_p a) { return a._zz_p__rep; }$/;"	f
rep	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline const zz_pX& rep(const zz_pE& a) { return a._zz_pE__rep; }$/;"	f
rep	deplib/ntl-main/include/NTL/lzz_pEX.h	/^vec_zz_pE rep;$/;"	m	class:zz_pEX
rep	deplib/ntl-main/include/NTL/lzz_pX.h	/^vec_zz_p rep;$/;"	m	class:zz_pX
rep	deplib/ntl-main/include/NTL/matrix.h	/^inline const Vec< Vec<T> >& rep(const Mat<T>& a)  $/;"	f
rep	deplib/ntl-main/include/NTL/tools.h	/^   raw_ptr rep;$/;"	m	class:WrappedPtr
rep	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator_impl<const unsigned long> rep;$/;"	m	struct:Vec::const_proxy_iterator
rep	deplib/ntl-main/include/NTL/vec_GF2.h	/^      proxy_iterator_impl<unsigned long> rep;$/;"	m	struct:Vec::proxy_iterator
rep	deplib/ntl-main/include/NTL/vec_GF2.h	/^   WordVector rep;$/;"	m	class:Vec
rep	deplib/ntl-main/src/mat_ZZ_p.cpp	/^   Vec< Mat<MatPrime_residue_t> > rep;$/;"	m	struct:mat_ZZ_p_crt_rep	file:
rep_type	deplib/ntl-main/include/NTL/GF2.h	/^typedef long rep_type;$/;"	t	class:GF2
rep_type	deplib/ntl-main/include/NTL/GF2E.h	/^typedef GF2X rep_type;$/;"	t	class:GF2E
rep_type	deplib/ntl-main/include/NTL/ZZ_p.h	/^typedef ZZ rep_type;$/;"	t	class:ZZ_p
rep_type	deplib/ntl-main/include/NTL/ZZ_pE.h	/^typedef ZZ_pX rep_type;$/;"	t	class:ZZ_pE
rep_type	deplib/ntl-main/include/NTL/lzz_p.h	/^typedef long rep_type;$/;"	t	class:zz_p
rep_type	deplib/ntl-main/include/NTL/lzz_pE.h	/^typedef zz_pX rep_type;$/;"	t	class:zz_pE
request	deplib/ntl-main/include/NTL/LazyTable.h	/^      long request;$/;"	m	class:LazyTable::Builder
reset	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void reset() { reset(0); }$/;"	f	class:AlignedArray
reset	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void reset()$/;"	f	class:Unique2DArray
reset	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void reset(T* p = 0) { dp.reset(p); }$/;"	f	class:OptionalVal
reset	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void reset(T* p = 0)$/;"	f	class:CopiedPtr
reset	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void reset(T* p = 0)$/;"	f	class:UniqueArray
reset	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void reset(T* p = 0)$/;"	f	class:UniquePtr
reset	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void reset(char* p)$/;"	f	class:AlignedArray
reset	deplib/ntl-main/src/ZZ.cpp	/^void PrimeSeq::reset(long b)$/;"	f	class:PrimeSeq
residue_type	deplib/ntl-main/include/NTL/GF2X.h	/^typedef GF2E residue_type;$/;"	t	class:GF2X
residue_type	deplib/ntl-main/include/NTL/ZZ.h	/^typedef ZZ_p residue_type;$/;"	t	class:ZZ
residue_type	deplib/ntl-main/include/NTL/ZZ_pX.h	/^typedef ZZ_pE residue_type;$/;"	t	class:ZZ_pX
residue_type	deplib/ntl-main/include/NTL/lzz_pX.h	/^typedef zz_pE residue_type;$/;"	t	class:zz_pX
restore	deplib/ntl-main/include/NTL/GF2.h	/^void restore() const {}$/;"	f	class:GF2Context
restore	deplib/ntl-main/src/GF2E.cpp	/^void GF2EBak::restore()$/;"	f	class:GF2EBak
restore	deplib/ntl-main/src/GF2E.cpp	/^void GF2EContext::restore() const$/;"	f	class:GF2EContext
restore	deplib/ntl-main/src/ZZ_p.cpp	/^void ZZ_pBak::restore()$/;"	f	class:ZZ_pBak
restore	deplib/ntl-main/src/ZZ_p.cpp	/^void ZZ_pContext::restore() const$/;"	f	class:ZZ_pContext
restore	deplib/ntl-main/src/ZZ_pE.cpp	/^void ZZ_pEBak::restore()$/;"	f	class:ZZ_pEBak
restore	deplib/ntl-main/src/ZZ_pE.cpp	/^void ZZ_pEContext::restore() const$/;"	f	class:ZZ_pEContext
restore	deplib/ntl-main/src/lzz_p.cpp	/^void zz_pBak::restore()$/;"	f	class:zz_pBak
restore	deplib/ntl-main/src/lzz_p.cpp	/^void zz_pContext::restore() const$/;"	f	class:zz_pContext
restore	deplib/ntl-main/src/lzz_pE.cpp	/^void zz_pEBak::restore()$/;"	f	class:zz_pEBak
restore	deplib/ntl-main/src/lzz_pE.cpp	/^void zz_pEContext::restore() const$/;"	f	class:zz_pEContext
resultant	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2E resultant(const GF2EX& a, const GF2EX& b)$/;"	f
resultant	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZ resultant(const ZZX& a, const ZZX& b, long deterministic=0)$/;"	f
resultant	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pE resultant(const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
resultant	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_p resultant(const ZZ_pX& a, const ZZ_pX& b)$/;"	f
resultant	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pE resultant(const zz_pEX& a, const zz_pEX& b)$/;"	f
resultant	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_p resultant(const zz_pX& a, const zz_pX& b)$/;"	f
resultant	deplib/ntl-main/src/GF2EX.cpp	/^void resultant(GF2E& rres, const GF2EX& a, const GF2EX& b)$/;"	f
resultant	deplib/ntl-main/src/ZZX1.cpp	/^void resultant(ZZ& rres, const ZZX& a, const ZZX& b, long deterministic)$/;"	f
resultant	deplib/ntl-main/src/ZZ_pEX.cpp	/^void resultant(ZZ_pE& rres, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
resultant	deplib/ntl-main/src/ZZ_pX1.cpp	/^void resultant(ZZ_p& rres, const ZZ_pX& u, const ZZ_pX& v)$/;"	f
resultant	deplib/ntl-main/src/lzz_pEX.cpp	/^void resultant(zz_pE& rres, const zz_pEX& a, const zz_pEX& b)$/;"	f
resultant	deplib/ntl-main/src/lzz_pX1.cpp	/^void resultant(zz_p& rres, const zz_pX& u, const zz_pX& v)$/;"	f
retval	deplib/ntl-main/src/CheckPOSIX_TIME.cpp	/^int retval;$/;"	v
rev1	deplib/ntl-main/src/GF2X.cpp	/^_ntl_ulong rev1(_ntl_ulong a)$/;"	f	file:
rev1	deplib/ntl-main/src/vec_GF2.cpp	/^_ntl_ulong rev1(_ntl_ulong a)$/;"	f	file:
reverse	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX reverse(const GF2EX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX reverse(const GF2EX& a, long hi)$/;"	f
reverse	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void reverse(GF2EX& c, const GF2EX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X reverse(const GF2X& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X reverse(const GF2X& a, long hi)$/;"	f
reverse	deplib/ntl-main/include/NTL/GF2X.h	/^inline void reverse(GF2X& c, const GF2X& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/GF2X.h	/^inline void reverse(GF2X& c, const GF2X& a, long hi)$/;"	f
reverse	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX reverse(const ZZX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX reverse(const ZZX& a, long hi)$/;"	f
reverse	deplib/ntl-main/include/NTL/ZZX.h	/^inline void reverse(ZZX& c, const ZZX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX reverse(const ZZ_pEX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX reverse(const ZZ_pEX& a, long hi)$/;"	f
reverse	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void reverse(ZZ_pEX& c, const ZZ_pEX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX reverse(const ZZ_pX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX reverse(const ZZ_pX& a, long hi)$/;"	f
reverse	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void reverse(ZZ_pX& c, const ZZ_pX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void reverse(zz_pEX& c, const zz_pEX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX reverse(const zz_pEX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX reverse(const zz_pEX& a, long hi)$/;"	f
reverse	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void reverse(zz_pX& c, const zz_pX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX reverse(const zz_pX& a)$/;"	f
reverse	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX reverse(const zz_pX& a, long hi)$/;"	f
reverse	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2 reverse(const vec_GF2& a)$/;"	f
reverse	deplib/ntl-main/src/GF2EX.cpp	/^void reverse(GF2EX& x, const GF2EX& a, long hi)$/;"	f
reverse	deplib/ntl-main/src/ZZX1.cpp	/^void reverse(ZZX& x, const ZZX& a, long hi)$/;"	f
reverse	deplib/ntl-main/src/ZZ_pEX.cpp	/^void reverse(ZZ_pEX& x, const ZZ_pEX& a, long hi)$/;"	f
reverse	deplib/ntl-main/src/ZZ_pX.cpp	/^void reverse(ZZ_pX& x, const ZZ_pX& a, long hi)$/;"	f
reverse	deplib/ntl-main/src/lzz_pEX.cpp	/^void reverse(zz_pEX& x, const zz_pEX& a, long hi)$/;"	f
reverse	deplib/ntl-main/src/lzz_pX.cpp	/^void reverse(zz_pX& x, const zz_pX& a, long hi)$/;"	f
reverse	deplib/ntl-main/src/vec_GF2.cpp	/^void reverse(vec_GF2& c, const vec_GF2& a)$/;"	f
revtab	deplib/ntl-main/src/GF2X.cpp	/^static const _ntl_ulong revtab[256] = {$/;"	v	file:
revtab	deplib/ntl-main/src/vec_GF2.cpp	/^static const _ntl_ulong revtab[256] = {$/;"	v	file:
round	deplib/ntl-main/include/NTL/RR.h	/^inline RR round(const RR& a)$/;"	f
round	deplib/ntl-main/src/RR.cpp	/^void round(RR& z, const RR& a)$/;"	f
run	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^      void run(long index) $/;"	f	class:BasicThreadPool::ConcurrentTaskFct1
run	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     void run(long index) { fct(index); }$/;"	f	class:BasicThreadPool::ConcurrentTaskFct
run	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     void run(long index) { }$/;"	f	class:BasicThreadPool::ConcurrentTaskTerminate
runOneTask	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  static void runOneTask(ConcurrentTask *task, long index)$/;"	f	class:BasicThreadPool
s	deplib/ntl-main/src/ZZXFactoring.cpp	/^   PrimeSeq s;$/;"	m	struct:LocalInfoT	file:
salsa20_apply	deplib/ntl-main/src/ZZ.cpp	/^void salsa20_apply(_ntl_uint32 *state, _ntl_uint32 *data)$/;"	f	file:
salsa20_core	deplib/ntl-main/src/ZZ.cpp	/^void salsa20_core(_ntl_uint32* data)$/;"	f	file:
salsa20_init	deplib/ntl-main/src/ZZ.cpp	/^void salsa20_init(_ntl_uint32 *state, const unsigned char *K)  $/;"	f	file:
save	deplib/ntl-main/include/NTL/GF2.h	/^void save() {}$/;"	f	class:GF2Context
save	deplib/ntl-main/src/GF2E.cpp	/^void GF2EBak::save()$/;"	f	class:GF2EBak
save	deplib/ntl-main/src/GF2E.cpp	/^void GF2EContext::save()$/;"	f	class:GF2EContext
save	deplib/ntl-main/src/ZZ_p.cpp	/^void ZZ_pBak::save()$/;"	f	class:ZZ_pBak
save	deplib/ntl-main/src/ZZ_p.cpp	/^void ZZ_pContext::save() $/;"	f	class:ZZ_pContext
save	deplib/ntl-main/src/ZZ_pE.cpp	/^void ZZ_pEBak::save()$/;"	f	class:ZZ_pEBak
save	deplib/ntl-main/src/ZZ_pE.cpp	/^void ZZ_pEContext::save()$/;"	f	class:ZZ_pEContext
save	deplib/ntl-main/src/lzz_p.cpp	/^void zz_pBak::save()$/;"	f	class:zz_pBak
save	deplib/ntl-main/src/lzz_p.cpp	/^void zz_pContext::save()$/;"	f	class:zz_pContext
save	deplib/ntl-main/src/lzz_pE.cpp	/^void zz_pEBak::save()$/;"	f	class:zz_pEBak
save	deplib/ntl-main/src/lzz_pE.cpp	/^void zz_pEContext::save()$/;"	f	class:zz_pEContext
saved	deplib/ntl-main/include/NTL/ZZ.h	/^   RandomStream saved;$/;"	m	class:RandomStreamPush
sbuf	deplib/ntl-main/src/lip.cpp	/^   long sbuf;$/;"	m	class:_ntl_crt_struct_basic	file:
scope_guard	deplib/ntl-main/include/NTL/tools.h	/^    scope_guard(F&& _f, const char *_info) : $/;"	f	class:scope_guard
scope_guard	deplib/ntl-main/include/NTL/tools.h	/^class scope_guard $/;"	c
scope_guard_builder	deplib/ntl-main/include/NTL/tools.h	/^   explicit scope_guard_builder(const char *_info) : info(_info) { }$/;"	f	struct:scope_guard_builder
scope_guard_builder	deplib/ntl-main/include/NTL/tools.h	/^struct scope_guard_builder {  $/;"	s
selective_flush	deplib/ntl-main/src/G_LLL_FP.cpp	/^void GivensCache_FP::selective_flush(long l)$/;"	f	class:GivensCache_FP
selective_flush	deplib/ntl-main/src/G_LLL_QP.cpp	/^void GivensCache_QP::selective_flush(long l)$/;"	f	class:GivensCache_QP
selective_flush	deplib/ntl-main/src/G_LLL_RR.cpp	/^void GivensCache_RR::selective_flush(long l)$/;"	f	class:GivensCache_RR
selective_flush	deplib/ntl-main/src/G_LLL_XD.cpp	/^void GivensCache_XD::selective_flush(long l)$/;"	f	class:GivensCache_XD
send	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     void send(T _val, T1 _val1)$/;"	f	class:BasicThreadPool::CompositeSignal
send	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     void send(T new_val)$/;"	f	class:BasicThreadPool::SimpleSignal
set	deplib/ntl-main/include/NTL/GF2.h	/^inline void set(GF2& x) { x = 1; }$/;"	f
set	deplib/ntl-main/include/NTL/GF2.h	/^inline void set(ref_GF2 x) { x = 1; }$/;"	f
set	deplib/ntl-main/include/NTL/GF2E.h	/^inline void set(GF2E& x)$/;"	f
set	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void set(GF2EX& x)$/;"	f
set	deplib/ntl-main/include/NTL/ZZ.h	/^inline void set(ZZ& x)$/;"	f
set	deplib/ntl-main/include/NTL/ZZX.h	/^inline void set(ZZX& x)$/;"	f
set	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void set(ZZ_p& x)$/;"	f
set	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void set(ZZ_pE& x)$/;"	f
set	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void set(ZZ_pEX& x)$/;"	f
set	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void set(ZZ_pX& x)$/;"	f
set	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void set(zz_p& x)$/;"	f
set	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void set(zz_pE& x)$/;"	f
set	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void set(zz_pEX& x)$/;"	f
set	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void set(zz_pX& x)$/;"	f
set	deplib/ntl-main/src/GF2X.cpp	/^void set(GF2X& x)$/;"	f
set	deplib/ntl-main/src/RR.cpp	/^void set(RR& z)$/;"	f
set_nonce	deplib/ntl-main/include/NTL/ZZ.h	/^   void set_nonce(unsigned long nonce) $/;"	f	class:RandomStream
set_nonce	deplib/ntl-main/src/ZZ.cpp	/^   void set_nonce(unsigned long nonce)$/;"	f	struct:RandomStream_impl
sgn	deplib/ntl-main/include/NTL/sp_arith.h	/^   long sgn;$/;"	m	struct:sp_reduce_struct
sha256	deplib/ntl-main/src/ZZ.cpp	/^void sha256(const unsigned char *data, long dlen, unsigned char *hash, $/;"	f	file:
sha256_const	deplib/ntl-main/src/ZZ.cpp	/^static const _ntl_uint32 sha256_const[64] = {$/;"	v	file:
sha256_final	deplib/ntl-main/src/ZZ.cpp	/^void sha256_final(SHA256_CTX& ctx, unsigned char *hash, $/;"	f	file:
sha256_init	deplib/ntl-main/src/ZZ.cpp	/^void sha256_init(SHA256_CTX& ctx)$/;"	f	file:
sha256_transform	deplib/ntl-main/src/ZZ.cpp	/^void sha256_transform(SHA256_CTX& ctx, unsigned char *data)$/;"	f	file:
sha256_update	deplib/ntl-main/src/ZZ.cpp	/^void sha256_update(SHA256_CTX& ctx, const unsigned char *data, _ntl_uint32 len)$/;"	f	file:
shamt	deplib/ntl-main/include/NTL/GF2EX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2EXTransMultiplier
shamt	deplib/ntl-main/include/NTL/GF2X.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2XTransMultiplier
shamt	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:ZZ_pEXTransMultiplier
shamt	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:zz_pEXTransMultiplier
shamt	deplib/ntl-main/include/NTL/sp_arith.h	/^   long shamt;$/;"	m	struct:sp_inverse
shamt	deplib/ntl-main/src/ZZ_pXTest.cpp	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:ZZ_pXTransMultiplier	file:
shamt	deplib/ntl-main/src/lzz_pXTest.cpp	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:zz_pXTransMultiplier	file:
shamt_b	deplib/ntl-main/include/NTL/GF2EX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2EXTransMultiplier
shamt_b	deplib/ntl-main/include/NTL/GF2X.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2XTransMultiplier
shamt_b	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:ZZ_pEXTransMultiplier
shamt_b	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:zz_pEXTransMultiplier
shamt_b	deplib/ntl-main/src/ZZ_pXTest.cpp	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:ZZ_pXTransMultiplier	file:
shamt_b	deplib/ntl-main/src/lzz_pXTest.cpp	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:zz_pXTransMultiplier	file:
shamt_fbi	deplib/ntl-main/include/NTL/GF2EX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2EXTransMultiplier
shamt_fbi	deplib/ntl-main/include/NTL/GF2X.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:GF2XTransMultiplier
shamt_fbi	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:ZZ_pEXTransMultiplier
shamt_fbi	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:zz_pEXTransMultiplier
shamt_fbi	deplib/ntl-main/src/ZZ_pXTest.cpp	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:ZZ_pXTransMultiplier	file:
shamt_fbi	deplib/ntl-main/src/lzz_pXTest.cpp	/^   long shamt, shamt_fbi, shamt_b;$/;"	m	struct:zz_pXTransMultiplier	file:
shamt_tab_init	deplib/ntl-main/src/ZZXFactoring.cpp	/^long shamt_tab_init(long pos, long card, long pruning, long thresh1_len)$/;"	f	file:
shamt_tab_t	deplib/ntl-main/src/ZZXFactoring.cpp	/^typedef Vec< Vec<long> > shamt_tab_t;$/;"	t	file:
shared	deplib/ntl-main/doc/tour-unix.html	/^<a name="shared">$/;"	a
shift	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline vec_GF2 shift(const vec_GF2& a, long n)$/;"	f
shift	deplib/ntl-main/src/ZZ.cpp	/^void PrimeSeq::shift(long newshift)$/;"	f	class:PrimeSeq
shift	deplib/ntl-main/src/vec_GF2.cpp	/^void shift(vec_GF2& x, const vec_GF2& a, long n)$/;"	f
sign	deplib/ntl-main/include/NTL/ZZ.h	/^inline long sign(const ZZ& a)$/;"	f
sign	deplib/ntl-main/include/NTL/quad_float.h	/^inline long sign(const quad_float& x){$/;"	f
sign	deplib/ntl-main/src/RR.cpp	/^long sign(const RR& a)$/;"	f
sign	deplib/ntl-main/src/xdouble.cpp	/^long sign(const xdouble& z)$/;"	f
sin	deplib/ntl-main/include/NTL/RR.h	/^inline RR sin(const RR& a)$/;"	f
sin	deplib/ntl-main/src/RR.cpp	/^void sin(RR& res, const RR& x)$/;"	f
size	deplib/ntl-main/include/NTL/GF2X.h	/^   long size; \/\/ word length of residues$/;"	m	class:GF2XModulus
size	deplib/ntl-main/include/NTL/PD.h	/^   enum { size = 2};$/;"	e	enum:PD::__anon8
size	deplib/ntl-main/include/NTL/PD.h	/^   enum { size = 4};$/;"	e	enum:PD::__anon7
size	deplib/ntl-main/include/NTL/PD.h	/^   enum { size = 8};$/;"	e	enum:PD::__anon6
size	deplib/ntl-main/include/NTL/ZZ.h	/^long size() const$/;"	f	class:ZZ
size	deplib/ntl-main/include/NTL/ZZ_p.h	/^   long size;  \/\/ p.size()$/;"	m	class:ZZ_pInfoT
size_	deplib/ntl-main/include/NTL/lip.h	/^   long size_;$/;"	m	struct:_ntl_gbigint_body
sn	deplib/ntl-main/include/NTL/GF2X.h	/^   long sn; \/\/  f.xrep.length()$/;"	m	class:GF2XModulus
solve	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void solve(zz_p& d, const mat_zz_p& A, vec_zz_p& x, const vec_zz_p& b)$/;"	f
solve	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void solve(zz_p& d, vec_zz_p& x, const mat_zz_p& A, const vec_zz_p& b)$/;"	f
solve	deplib/ntl-main/src/mat_GF2.cpp	/^void solve(ref_GF2 d, const mat_GF2& A, vec_GF2& x,  const vec_GF2& b)$/;"	f
solve	deplib/ntl-main/src/mat_GF2.cpp	/^void solve(ref_GF2 d, vec_GF2& x, const mat_GF2& A, const vec_GF2& b)$/;"	f
solve	deplib/ntl-main/src/mat_GF2E.cpp	/^void solve(GF2E& d, Vec<GF2E>& x, $/;"	f
solve	deplib/ntl-main/src/mat_GF2E.cpp	/^void solve(GF2E& d, const Mat<GF2E>& A, $/;"	f
solve	deplib/ntl-main/src/mat_RR.cpp	/^void solve(RR& d, vec_RR& X, $/;"	f
solve	deplib/ntl-main/src/mat_ZZ.cpp	/^void solve(ZZ& d_out, vec_ZZ& x_out,$/;"	f
solve	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void solve(ZZ_p& d, const mat_ZZ_p& A, vec_ZZ_p& x,  const vec_ZZ_p& b)$/;"	f
solve	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void solve(ZZ_p& d, vec_ZZ_p& x, const mat_ZZ_p& A, const vec_ZZ_p& b)$/;"	f
solve	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void solve(ZZ_pE& d, Vec<ZZ_pE>& x, $/;"	f
solve	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void solve(ZZ_pE& d, const Mat<ZZ_pE>& A, $/;"	f
solve	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void solve(zz_pE& d, Vec<zz_pE>& x, $/;"	f
solve	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void solve(zz_pE& d, const Mat<zz_pE>& A, $/;"	f
solve1	deplib/ntl-main/src/mat_ZZ.cpp	/^void solve1(ZZ& d_out, vec_ZZ& x_out, const mat_ZZ& A, const vec_ZZ& b)$/;"	f
solve_impl	deplib/ntl-main/src/mat_GF2.cpp	/^void solve_impl(ref_GF2 d, vec_GF2& X, const mat_GF2& A, const vec_GF2& b, bool trans)$/;"	f	file:
solve_impl	deplib/ntl-main/src/mat_GF2E.cpp	/^void solve_impl(GF2E& d, Vec<GF2E>& X, $/;"	f	file:
solve_impl	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void solve_impl(ZZ_p& d, vec_ZZ_p& X, const mat_ZZ_p& A, const vec_ZZ_p& b, bool trans)$/;"	f	file:
solve_impl	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void solve_impl(ZZ_pE& d, Vec<ZZ_pE>& X, $/;"	f	file:
solve_impl	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void solve_impl(zz_pE& d, Vec<zz_pE>& X, $/;"	f	file:
sort	deplib/ntl-main/src/BerlekampTest.cpp	/^void sort(vec_pair_ZZ_pX_long& v)$/;"	f
sort	deplib/ntl-main/src/CanZassTest.cpp	/^void sort(vec_pair_ZZ_pX_long& v)$/;"	f
sort	deplib/ntl-main/src/ZZXFacTest.cpp	/^void sort(vec_pair_ZZX_long& v)$/;"	f
sp	deplib/ntl-main/include/NTL/SmartPtr.h	/^   char *sp;$/;"	m	class:AlignedArray
sp_CorrectDeficit	deplib/ntl-main/include/NTL/sp_arith.h	/^long sp_CorrectDeficit(long a, long n)$/;"	f
sp_CorrectDeficit	deplib/ntl-main/include/NTL/sp_arith.h	/^long sp_CorrectDeficit(unsigned long a, long n)$/;"	f
sp_CorrectDeficitQuo	deplib/ntl-main/include/NTL/sp_arith.h	/^long sp_CorrectDeficitQuo(T& q, long a, long n, long amt=1)$/;"	f
sp_CorrectDeficitQuo	deplib/ntl-main/include/NTL/sp_arith.h	/^long sp_CorrectDeficitQuo(T& q, unsigned long a, long n, long amt=1)$/;"	f
sp_CorrectExcess	deplib/ntl-main/include/NTL/sp_arith.h	/^long sp_CorrectExcess(long a, long n)$/;"	f
sp_CorrectExcess	deplib/ntl-main/include/NTL/sp_arith.h	/^long sp_CorrectExcess(unsigned long a, long n)$/;"	f
sp_CorrectExcessQuo	deplib/ntl-main/include/NTL/sp_arith.h	/^long sp_CorrectExcessQuo(T& q, long a, long n, long amt=1)$/;"	f
sp_CorrectExcessQuo	deplib/ntl-main/include/NTL/sp_arith.h	/^long sp_CorrectExcessQuo(T& q, unsigned long a, long n, long amt=1)$/;"	f
sp_CountLeadingZeros	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_CountLeadingZeros(unsigned long x)$/;"	f
sp_Negative	deplib/ntl-main/include/NTL/sp_arith.h	/^bool sp_Negative(unsigned long a)$/;"	f
sp_NormalizedLazyPrepMulModPrecon	deplib/ntl-main/src/FFT.cpp	/^sp_NormalizedLazyPrepMulModPrecon(long b, long n, unsigned long ninv)$/;"	f	file:
sp_NormalizedLazyPrepMulModPreconWithRem	deplib/ntl-main/src/FFT.cpp	/^sp_NormalizedLazyPrepMulModPreconWithRem(unsigned long& rres, long b, long n, unsigned long ninv)$/;"	f	file:
sp_NormalizedMulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_NormalizedMulMod(long a, long b, long n, unsigned long ninv) $/;"	f
sp_NormalizedMulModWithQuo	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_NormalizedMulModWithQuo(long& qres, long a, long b, long n, unsigned long ninv)$/;"	f
sp_NormalizedPrepMulMod	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_NormalizedPrepMulMod(long n)$/;"	f
sp_NormalizedPrepMulModPrecon	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_NormalizedPrepMulModPrecon(long b, long n, unsigned long ninv)$/;"	f
sp_PrepRem	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_reduce_struct sp_PrepRem(long n) $/;"	f
sp_PrepRem	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_reduce_struct sp_PrepRem(long n)$/;"	f
sp_SignMask	deplib/ntl-main/include/NTL/sp_arith.h	/^long sp_SignMask(long a)$/;"	f
sp_SignMask	deplib/ntl-main/include/NTL/sp_arith.h	/^long sp_SignMask(unsigned long a)$/;"	f
sp_ZZ_reduce_struct	deplib/ntl-main/include/NTL/ZZ.h	/^   sp_ZZ_reduce_struct() : p(0) { }$/;"	f	struct:sp_ZZ_reduce_struct
sp_ZZ_reduce_struct	deplib/ntl-main/include/NTL/ZZ.h	/^struct sp_ZZ_reduce_struct {$/;"	s
sp_ZZ_reduce_struct_policy	deplib/ntl-main/include/NTL/ZZ.h	/^struct sp_ZZ_reduce_struct_policy {$/;"	s
sp_ext_eucl	deplib/ntl-main/src/lip.cpp	/^void sp_ext_eucl(long *dd, long *ss, long *tt, long a, long b)$/;"	f	file:
sp_inv_mod	deplib/ntl-main/src/lip.cpp	/^long sp_inv_mod(long a, long n)$/;"	f	file:
sp_inverse	deplib/ntl-main/include/NTL/sp_arith.h	/^   sp_inverse(unsigned long _inv, long _shamt) : inv(_inv), shamt(_shamt) { }$/;"	f	struct:sp_inverse
sp_inverse	deplib/ntl-main/include/NTL/sp_arith.h	/^struct sp_inverse {$/;"	s
sp_ll_red_21	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_ll_red_21(unsigned long hi, unsigned long lo, long d, $/;"	f
sp_ll_red_21_normalized	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_ll_red_21_normalized(unsigned long hi, unsigned long lo, long d, $/;"	f
sp_ll_red_31	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_ll_red_31(unsigned long x2, unsigned long x1, unsigned long x0,$/;"	f
sp_ll_red_31_normalized	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_ll_red_31_normalized(unsigned long x2, unsigned long x1, unsigned long x0,$/;"	f
sp_ll_red_n1	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_ll_red_n1(const unsigned long *x, long n, long d, sp_ll_reduce_struct dinv)$/;"	f
sp_ll_red_n1_normalized	deplib/ntl-main/include/NTL/sp_arith.h	/^sp_ll_red_n1_normalized(const unsigned long *x, long n, long d, sp_ll_reduce_struct dinv)$/;"	f
sp_ll_reduce_struct	deplib/ntl-main/include/NTL/sp_arith.h	/^   sp_ll_reduce_struct(unsigned long _inv, long _nbits) : inv(_inv), nbits(_nbits) { }$/;"	f	struct:sp_ll_reduce_struct
sp_ll_reduce_struct	deplib/ntl-main/include/NTL/sp_arith.h	/^struct sp_ll_reduce_struct { };$/;"	s
sp_ll_reduce_struct	deplib/ntl-main/include/NTL/sp_arith.h	/^struct sp_ll_reduce_struct {$/;"	s
sp_muldivrem_struct	deplib/ntl-main/include/NTL/sp_arith.h	/^   explicit sp_muldivrem_struct(unsigned long _bninv) : bninv(_bninv) { }$/;"	f	struct:sp_muldivrem_struct
sp_muldivrem_struct	deplib/ntl-main/include/NTL/sp_arith.h	/^struct sp_muldivrem_struct {$/;"	s
sp_reduce_struct	deplib/ntl-main/include/NTL/sp_arith.h	/^   sp_reduce_struct(unsigned long _ninv, long _sgn) : $/;"	f	struct:sp_reduce_struct
sp_reduce_struct	deplib/ntl-main/include/NTL/sp_arith.h	/^struct sp_reduce_struct { };$/;"	s
sp_reduce_struct	deplib/ntl-main/include/NTL/sp_arith.h	/^struct sp_reduce_struct {$/;"	s
special	deplib/ntl-main/include/NTL/ZZ.h	/^   bool special() const$/;"	f	class:ZZ_CRTStructAdapter
special	deplib/ntl-main/src/lip.cpp	/^bool _ntl_crt_struct_basic::special()  { return false; }$/;"	f	class:_ntl_crt_struct_basic
special	deplib/ntl-main/src/lip.cpp	/^bool _ntl_crt_struct_fast::special()   { return true; }$/;"	f	class:_ntl_crt_struct_fast
special	deplib/ntl-main/src/lip.cpp	/^bool _ntl_crt_struct_tbl::special()  { return false; }$/;"	f	class:_ntl_crt_struct_tbl
split	deplib/ntl-main/src/GF2EXFactoring.cpp	/^void split(GF2EX& f1, GF2EX& g1, GF2EX& f2, GF2EX& g2,$/;"	f	file:
split	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^void split(ZZ_pEX& f1, ZZ_pEX& g1, ZZ_pEX& f2, ZZ_pEX& g2,$/;"	f
split	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^void split(ZZ_pX& f1, ZZ_pX& g1, ZZ_pX& f2, ZZ_pX& g2,$/;"	f	file:
split	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^void split(zz_pEX& f1, zz_pEX& g1, zz_pEX& f2, zz_pEX& g2,$/;"	f
split	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^void split(zz_pX& f1, zz_pX& g1, zz_pX& f2, zz_pX& g2,$/;"	f	file:
sqr	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 sqr(GF2 a)$/;"	f
sqr	deplib/ntl-main/include/NTL/GF2.h	/^inline void sqr(GF2& x, GF2 a)$/;"	f
sqr	deplib/ntl-main/include/NTL/GF2.h	/^inline void sqr(ref_GF2 x, GF2 a)$/;"	f
sqr	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E sqr(const GF2E& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/GF2E.h	/^inline void sqr(GF2E& x, const GF2E& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX sqr(const GF2EX& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X sqr(const GF2X& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/RR.h	/^inline RR sqr(const RR& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ sqr(const ZZ& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/ZZ.h	/^inline void sqr(ZZ& x, const ZZ& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX sqr(const ZZX& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p sqr(const ZZ_p& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void sqr(ZZ_p& x, const ZZ_p& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE sqr(const ZZ_pE& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void sqr(ZZ_pE& x, const ZZ_pE& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX sqr(const ZZ_pEX& a) $/;"	f
sqr	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX sqr(const ZZ_pX& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void sqr(zz_p& x, zz_p a)$/;"	f
sqr	deplib/ntl-main/include/NTL/lzz_p.h	/^inline zz_p sqr(zz_p a)$/;"	f
sqr	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void sqr(zz_pE& x, const zz_pE& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE sqr(const zz_pE& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX sqr(const zz_pEX& a) $/;"	f
sqr	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX sqr(const zz_pX& a)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 sqr(const mat_GF2& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline void sqr(mat_GF2& X, const mat_GF2& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E sqr(const mat_GF2E& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline void sqr(mat_GF2E& X, const mat_GF2E& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR sqr(const mat_RR& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_RR.h	/^inline void sqr(mat_RR& X, const mat_RR& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ sqr(const mat_ZZ& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline void sqr(mat_ZZ& X, const mat_ZZ& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p sqr(const mat_ZZ_p& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline void sqr(mat_ZZ_p& X, const mat_ZZ_p& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE sqr(const mat_ZZ_pE& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline void sqr(mat_ZZ_pE& X, const mat_ZZ_pE& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p sqr(const mat_zz_p& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline void sqr(mat_zz_p& X, const mat_zz_p& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE sqr(const mat_zz_pE& A)$/;"	f
sqr	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline void sqr(mat_zz_pE& X, const mat_zz_pE& A)$/;"	f
sqr	deplib/ntl-main/src/GF2EX.cpp	/^void sqr(GF2EX& x, const GF2EX& a)$/;"	f
sqr	deplib/ntl-main/src/GF2X.cpp	/^void sqr(GF2X& c, const GF2X& a)$/;"	f
sqr	deplib/ntl-main/src/RR.cpp	/^void sqr(RR& z, const RR& a)$/;"	f
sqr	deplib/ntl-main/src/ZZX1.cpp	/^void sqr(ZZX& c, const ZZX& a)$/;"	f
sqr	deplib/ntl-main/src/ZZ_pEX.cpp	/^void sqr(ZZ_pEX& c, const ZZ_pEX& a)$/;"	f
sqr	deplib/ntl-main/src/ZZ_pX.cpp	/^void sqr(ZZ_pX& c, const ZZ_pX& a)$/;"	f
sqr	deplib/ntl-main/src/ZZ_pX.cpp	/^void sqr(ZZ_pX& x, const ZZ_pX& a)$/;"	f
sqr	deplib/ntl-main/src/lzz_pEX.cpp	/^void sqr(zz_pEX& c, const zz_pEX& a)$/;"	f
sqr	deplib/ntl-main/src/lzz_pX.cpp	/^void sqr(zz_pX& x, const zz_pX& a)$/;"	f
sqr1	deplib/ntl-main/src/GF2X.cpp	/^void sqr1(_ntl_ulong *c, _ntl_ulong a)$/;"	f	file:
sqrmodtest	deplib/ntl-main/src/ZZ_pXTest.cpp	/^void sqrmodtest()$/;"	f
sqrmodtest	deplib/ntl-main/src/lzz_pXTest.cpp	/^void sqrmodtest()$/;"	f
sqrt	deplib/ntl-main/include/NTL/RR.h	/^inline RR sqrt(const RR& a)$/;"	f
sqrt	deplib/ntl-main/src/quad_float1.cpp	/^quad_float sqrt(const quad_float& y)$/;"	f
sqrt	deplib/ntl-main/src/xdouble.cpp	/^xdouble sqrt(const xdouble& a)$/;"	f
sqrtab	deplib/ntl-main/src/GF2X.cpp	/^static const _ntl_ulong sqrtab[256] = {$/;"	v	file:
sqrtest	deplib/ntl-main/src/ZZ_pXTest.cpp	/^void sqrtest()$/;"	f
sqrtest	deplib/ntl-main/src/lzz_pXTest.cpp	/^void sqrtest()$/;"	f
stab	deplib/ntl-main/include/NTL/GF2X.h	/^   vec_GF2X stab;$/;"	m	class:GF2XModulus
stab1	deplib/ntl-main/include/NTL/GF2X.h	/^   UniqueArray<unsigned long> stab1;$/;"	m	class:GF2XModulus
stab_cnt	deplib/ntl-main/include/NTL/GF2X.h	/^   UniqueArray<long> stab_cnt;$/;"	m	class:GF2XModulus
stab_ptr	deplib/ntl-main/include/NTL/GF2X.h	/^   UniqueArray<unsigned long *> stab_ptr;$/;"	m	class:GF2XModulus
start	deplib/ntl-main/src/ZZ.cpp	/^void PrimeSeq::start()$/;"	f	class:PrimeSeq
start_last_level	deplib/ntl-main/src/ZZX1.cpp	/^   long start_last_level;   \/\/ index of first item in last level$/;"	m	struct:NewFastCRTHelper	file:
state	deplib/ntl-main/include/NTL/ZZ.h	/^   _ntl_uint32 state[16];$/;"	m	class:old_RandomStream
state	deplib/ntl-main/src/ZZ.cpp	/^   _ntl_uint32 state[16];$/;"	m	struct:RandomStream_impl	file:
state	deplib/ntl-main/src/ZZ.cpp	/^   _ntl_uint32 state[8];$/;"	m	struct:SHA256_CTX	file:
state_store	deplib/ntl-main/src/ZZ.cpp	/^   AlignedArray<unsigned char> state_store;$/;"	m	struct:RandomStream_impl	file:
stfle	deplib/ntl-main/include/NTL/linux_s390x.h	/^stfle(unsigned long flist[], unsigned long nmemb)$/;"	f
storage	deplib/ntl-main/include/NTL/GF2E.h	/^static long storage() { return WV_storage(GF2E::WordLength()); }$/;"	f	class:GF2E
storage	deplib/ntl-main/include/NTL/ZZ_p.h	/^static long storage() { return ZZ_storage(ZZ_pInfo->size); }$/;"	f	class:ZZ_p
storage	deplib/ntl-main/include/NTL/lzz_p.h	/^static long storage() { return sizeof(long); }$/;"	f	class:zz_p
store	deplib/ntl-main/include/NTL/PD.h	/^store(double *p, PD<2> a) $/;"	f
store	deplib/ntl-main/include/NTL/PD.h	/^store(double *p, PD<4> a) $/;"	f
store	deplib/ntl-main/include/NTL/PD.h	/^store(double *p, PD<8> a) $/;"	f
store	deplib/ntl-main/include/NTL/PD.h	/^store(long *p, PD<2> a)$/;"	f
store	deplib/ntl-main/include/NTL/PD.h	/^store(long *p, PD<4> a)$/;"	f
store	deplib/ntl-main/include/NTL/PD.h	/^store(long *p, PD<8> a)$/;"	f
stored_tmp_vec	deplib/ntl-main/src/lip.cpp	/^   UniquePtr<_ntl_tmp_vec_crt_fast> stored_tmp_vec;$/;"	m	class:_ntl_crt_struct_fast	file:
storeu	deplib/ntl-main/include/NTL/PD.h	/^storeu(double *p, PD<2> a) $/;"	f
storeu	deplib/ntl-main/include/NTL/PD.h	/^storeu(double *p, PD<4> a) $/;"	f
storeu	deplib/ntl-main/include/NTL/PD.h	/^storeu(double *p, PD<8> a) $/;"	f
storeu	deplib/ntl-main/include/NTL/PD.h	/^storeu(long *p, PD<2> a)$/;"	f
storeu	deplib/ntl-main/include/NTL/PD.h	/^storeu(long *p, PD<4> a)$/;"	f
storeu	deplib/ntl-main/include/NTL/PD.h	/^storeu(long *p, PD<8> a)$/;"	f
str	deplib/ntl-main/include/NTL/ZZ.h	/^   RandomStream *str;$/;"	m	struct:RandomBndGenerator
sub	deplib/ntl-main/include/NTL/GF2.h	/^inline void sub(GF2& x, GF2 a, GF2 b)$/;"	f
sub	deplib/ntl-main/include/NTL/GF2.h	/^inline void sub(GF2& x, GF2 a, long b)$/;"	f
sub	deplib/ntl-main/include/NTL/GF2.h	/^inline void sub(GF2& x, long a, GF2 b)$/;"	f
sub	deplib/ntl-main/include/NTL/GF2.h	/^inline void sub(ref_GF2 x, GF2 a, GF2 b)$/;"	f
sub	deplib/ntl-main/include/NTL/GF2.h	/^inline void sub(ref_GF2 x, GF2 a, long b)$/;"	f
sub	deplib/ntl-main/include/NTL/GF2.h	/^inline void sub(ref_GF2 x, long a, GF2 b)$/;"	f
sub	deplib/ntl-main/include/NTL/GF2E.h	/^inline void sub(GF2E& x, GF2 a, const GF2E& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2E.h	/^inline void sub(GF2E& x, const GF2E& a, GF2 b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2E.h	/^inline void sub(GF2E& x, const GF2E& a, const GF2E& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2E.h	/^inline void sub(GF2E& x, const GF2E& a, long b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2E.h	/^inline void sub(GF2E& x, long a, const GF2E& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, GF2 a, const GF2EX& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, const GF2E& a, const GF2EX& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, const GF2EX& a, GF2 b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, const GF2EX& a, const GF2E& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, const GF2EX& a, const GF2EX& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, const GF2EX& a, long b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void sub(GF2EX& x, long a, const GF2EX& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2X.h	/^inline void sub(GF2X& x, GF2 a, const GF2X& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2X.h	/^inline void sub(GF2X& x, const GF2X& a, GF2 b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2X.h	/^inline void sub(GF2X& x, const GF2X& a, const GF2X& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2X.h	/^inline void sub(GF2X& x, const GF2X& a, long b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/GF2X.h	/^inline void sub(GF2X& x, long a, const GF2X& b) { add(x, a, b); }$/;"	f
sub	deplib/ntl-main/include/NTL/ZZ.h	/^inline void sub(ZZ& x, const ZZ& a, const ZZ& b)$/;"	f
sub	deplib/ntl-main/include/NTL/ZZ.h	/^inline void sub(ZZ& x, const ZZ& a, long b)$/;"	f
sub	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void sub(ZZ_p& x, const ZZ_p& a, const ZZ_p& b)$/;"	f
sub	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void sub(ZZ_pE& x, const ZZ_p& a, const ZZ_pE& b)$/;"	f
sub	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void sub(ZZ_pE& x, const ZZ_pE& a, const ZZ_p& b)$/;"	f
sub	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void sub(ZZ_pE& x, const ZZ_pE& a, const ZZ_pE& b)$/;"	f
sub	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void sub(ZZ_pE& x, const ZZ_pE& a, long b)$/;"	f
sub	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void sub(ZZ_pE& x, long a, const ZZ_pE& b)$/;"	f
sub	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void sub(zz_p& x, long a, zz_p b) { sub(x, to_zz_p(a), b); }$/;"	f
sub	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void sub(zz_p& x, zz_p a, long b) { sub(x, a, to_zz_p(b)); }$/;"	f
sub	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void sub(zz_p& x, zz_p a, zz_p b)$/;"	f
sub	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void sub(zz_pE& x, const zz_p& a, const zz_pE& b)$/;"	f
sub	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void sub(zz_pE& x, const zz_pE& a, const zz_p& b)$/;"	f
sub	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void sub(zz_pE& x, const zz_pE& a, const zz_pE& b)$/;"	f
sub	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void sub(zz_pE& x, const zz_pE& a, long b)$/;"	f
sub	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void sub(zz_pE& x, long a, const zz_pE& b)$/;"	f
sub	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void sub(zz_pX& x, const zz_pX& a, long b) { sub(x, a, to_zz_p(b)); }$/;"	f
sub	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void sub(zz_pX& x, long a, const zz_pX& b) { sub(x, to_zz_p(a), b); }$/;"	f
sub	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline void sub(mat_GF2& X, const mat_GF2& A, const mat_GF2& B)$/;"	f
sub	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline void sub(mat_GF2E& X, const mat_GF2E& A, const mat_GF2E& B)$/;"	f
sub	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline void sub(vec_GF2& x, const vec_GF2& a, const vec_GF2& b)$/;"	f
sub	deplib/ntl-main/include/NTL/vec_GF2E.h	/^inline void sub(vec_GF2E& x, const vec_GF2E& a, const vec_GF2E& b)$/;"	f
sub	deplib/ntl-main/src/RR.cpp	/^void sub(RR& z, const RR& a, const RR& b)$/;"	f
sub	deplib/ntl-main/src/RR.cpp	/^void sub(RR& z, const RR& a, double b)$/;"	f
sub	deplib/ntl-main/src/RR.cpp	/^void sub(RR& z, double a, const RR& b)$/;"	f
sub	deplib/ntl-main/src/ZZ.cpp	/^void sub(ZZ& x, long a, const ZZ& b)$/;"	f
sub	deplib/ntl-main/src/ZZX.cpp	/^void sub(ZZX& x, const ZZ& b, const ZZX& a)$/;"	f
sub	deplib/ntl-main/src/ZZX.cpp	/^void sub(ZZX& x, const ZZX& a, const ZZ& b)$/;"	f
sub	deplib/ntl-main/src/ZZX.cpp	/^void sub(ZZX& x, const ZZX& a, const ZZX& b)$/;"	f
sub	deplib/ntl-main/src/ZZX.cpp	/^void sub(ZZX& x, const ZZX& a, long b)$/;"	f
sub	deplib/ntl-main/src/ZZX.cpp	/^void sub(ZZX& x, long a, const ZZX& b)$/;"	f
sub	deplib/ntl-main/src/ZZ_p.cpp	/^void sub(ZZ_p& x, const ZZ_p& a, long b)$/;"	f
sub	deplib/ntl-main/src/ZZ_p.cpp	/^void sub(ZZ_p& x, long a, const ZZ_p& b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pEX.cpp	/^void sub(ZZ_pEX& x, const ZZ_p& a, const ZZ_pEX& b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pEX.cpp	/^void sub(ZZ_pEX& x, const ZZ_pE& b, const ZZ_pEX& a)$/;"	f
sub	deplib/ntl-main/src/ZZ_pEX.cpp	/^void sub(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_p& b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pEX.cpp	/^void sub(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pE& b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pEX.cpp	/^void sub(ZZ_pEX& x, const ZZ_pEX& a, const ZZ_pEX& b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pEX.cpp	/^void sub(ZZ_pEX& x, const ZZ_pEX& a, long b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pEX.cpp	/^void sub(ZZ_pEX& x, long a, const ZZ_pEX& b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pX.cpp	/^NTL_TBDECL(sub)(FFTRep& z, const FFTRep& x, const FFTRep& y)$/;"	f
sub	deplib/ntl-main/src/ZZ_pX.cpp	/^void sub(FFTRep& z, const FFTRep& x, const FFTRep& y)$/;"	f
sub	deplib/ntl-main/src/ZZ_pX.cpp	/^void sub(ZZ_pX& x, const ZZ_p& a, const ZZ_pX& b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pX.cpp	/^void sub(ZZ_pX& x, const ZZ_pX& a, const ZZ_p& b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pX.cpp	/^void sub(ZZ_pX& x, const ZZ_pX& a, const ZZ_pX& b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pX.cpp	/^void sub(ZZ_pX& x, const ZZ_pX& a, long b)$/;"	f
sub	deplib/ntl-main/src/ZZ_pX.cpp	/^void sub(ZZ_pX& x, long a, const ZZ_pX& b)$/;"	f
sub	deplib/ntl-main/src/lzz_pEX.cpp	/^void sub(zz_pEX& x, const zz_p& a, const zz_pEX& b)$/;"	f
sub	deplib/ntl-main/src/lzz_pEX.cpp	/^void sub(zz_pEX& x, const zz_pE& b, const zz_pEX& a)$/;"	f
sub	deplib/ntl-main/src/lzz_pEX.cpp	/^void sub(zz_pEX& x, const zz_pEX& a, const zz_p& b)$/;"	f
sub	deplib/ntl-main/src/lzz_pEX.cpp	/^void sub(zz_pEX& x, const zz_pEX& a, const zz_pE& b)$/;"	f
sub	deplib/ntl-main/src/lzz_pEX.cpp	/^void sub(zz_pEX& x, const zz_pEX& a, const zz_pEX& b)$/;"	f
sub	deplib/ntl-main/src/lzz_pEX.cpp	/^void sub(zz_pEX& x, const zz_pEX& a, long b)$/;"	f
sub	deplib/ntl-main/src/lzz_pEX.cpp	/^void sub(zz_pEX& x, long a, const zz_pEX& b)$/;"	f
sub	deplib/ntl-main/src/lzz_pX.cpp	/^void sub(fftRep& z, const fftRep& x, const fftRep& y)$/;"	f
sub	deplib/ntl-main/src/lzz_pX.cpp	/^void sub(zz_pX& x, const zz_pX& a, const zz_pX& b)$/;"	f
sub	deplib/ntl-main/src/lzz_pX.cpp	/^void sub(zz_pX& x, const zz_pX& a, zz_p b)$/;"	f
sub	deplib/ntl-main/src/lzz_pX.cpp	/^void sub(zz_pX& x, zz_p a, const zz_pX& b)$/;"	f
sub	deplib/ntl-main/src/mat_RR.cpp	/^void sub(mat_RR& X, const mat_RR& A, const mat_RR& B)  $/;"	f
sub	deplib/ntl-main/src/mat_ZZ.cpp	/^void sub(mat_ZZ& X, const mat_ZZ& A, const mat_ZZ& B)  $/;"	f
sub	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void sub(mat_ZZ_p& X, const mat_ZZ_p& A, const mat_ZZ_p& B)  $/;"	f
sub	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void sub(mat_ZZ_pE& X, const mat_ZZ_pE& A, const mat_ZZ_pE& B)  $/;"	f
sub	deplib/ntl-main/src/mat_lzz_p.cpp	/^void sub(const mat_window_zz_p& X, $/;"	f
sub	deplib/ntl-main/src/mat_lzz_p.cpp	/^void sub(mat_zz_p& X, const mat_zz_p& A, const mat_zz_p& B)  $/;"	f
sub	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void sub(mat_zz_pE& X, const mat_zz_pE& A, const mat_zz_pE& B)  $/;"	f
sub	deplib/ntl-main/src/vec_RR.cpp	/^void sub(vec_RR& x, const vec_RR& a, const vec_RR& b)$/;"	f
sub	deplib/ntl-main/src/vec_ZZ.cpp	/^void sub(vec_ZZ& x, const vec_ZZ& a, const vec_ZZ& b)$/;"	f
sub	deplib/ntl-main/src/vec_ZZ_p.cpp	/^void sub(vec_ZZ_p& x, const vec_ZZ_p& a, const vec_ZZ_p& b)$/;"	f
sub	deplib/ntl-main/src/vec_ZZ_pE.cpp	/^void sub(vec_ZZ_pE& x, const vec_ZZ_pE& a, const vec_ZZ_pE& b)$/;"	f
sub	deplib/ntl-main/src/vec_lzz_p.cpp	/^void sub(vec_zz_p& x, const vec_zz_p& a, const vec_zz_p& b)$/;"	f
sub	deplib/ntl-main/src/vec_lzz_pE.cpp	/^void sub(vec_zz_pE& x, const vec_zz_pE& a, const vec_zz_pE& b)$/;"	f
subpool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   RecursiveThreadPool* subpool(long i) { return subpool_ptr[i]; } $/;"	f	struct:RecursiveThreadPoolHelper
subpool_ptr	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   RecursiveThreadPool *subpool_ptr[2];$/;"	m	struct:RecursiveThreadPoolHelper
subpool_stg	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   UniquePtr<RecursiveThreadPool> subpool_stg[2];$/;"	m	struct:RecursiveThreadPoolHelper
sum_double	deplib/ntl-main/src/MakeDescAux.cpp	/^double sum_double(double *x, long n)$/;"	f
swap	deplib/ntl-main/include/NTL/GF2.h	/^inline void swap(GF2& x, GF2& y) { x.swap(y); }$/;"	f
swap	deplib/ntl-main/include/NTL/GF2.h	/^inline void swap(ref_GF2 x, ref_GF2 y) { x.swap(y); }$/;"	f
swap	deplib/ntl-main/include/NTL/GF2.h	/^void swap(GF2& x) { GF2 t; t = *this; *this = x; x = t; }$/;"	f	class:GF2
swap	deplib/ntl-main/include/NTL/GF2.h	/^void swap(ref_GF2 x) { GF2 t; t = *this; *this = x; x = t; }$/;"	f	class:ref_GF2
swap	deplib/ntl-main/include/NTL/GF2E.h	/^inline void swap(GF2E& x, GF2E& y)$/;"	f
swap	deplib/ntl-main/include/NTL/GF2E.h	/^void swap(GF2E& y) { _GF2E__rep.swap(y._GF2E__rep); }$/;"	f	class:GF2E
swap	deplib/ntl-main/include/NTL/GF2EX.h	/^inline void swap(GF2EX& x, GF2EX& y)$/;"	f
swap	deplib/ntl-main/include/NTL/GF2EX.h	/^void swap(GF2EX& x) { rep.swap(x.rep); }$/;"	f	class:GF2EX
swap	deplib/ntl-main/include/NTL/GF2X.h	/^inline void swap(GF2X& a, GF2X& b) { a.swap(b); }$/;"	f
swap	deplib/ntl-main/include/NTL/GF2X.h	/^void swap(GF2X& x) { xrep.swap(x.xrep); }$/;"	f	class:GF2X
swap	deplib/ntl-main/include/NTL/GF2XVec.h	/^   void swap(GF2XVec& x)$/;"	f	class:GF2XVec
swap	deplib/ntl-main/include/NTL/GF2XVec.h	/^inline void swap(GF2XVec& x, GF2XVec& y) { x.swap(y); }$/;"	f
swap	deplib/ntl-main/include/NTL/RR.h	/^inline void swap(RR& a, RR& b) { a.swap(b); }$/;"	f
swap	deplib/ntl-main/include/NTL/RR.h	/^void swap(RR& z) { x.swap(z.x); _ntl_swap(e, z.e); }$/;"	f	class:RR
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void swap(AlignedArray& other)$/;"	f	class:AlignedArray
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void swap(CloneablePtr& other)$/;"	f	class:CloneablePtr
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void swap(CopiedPtr& other)$/;"	f	class:CopiedPtr
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void swap(OptionalVal& other) { dp.swap(other.dp); }$/;"	f	class:OptionalVal
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void swap(SmartPtr& other)$/;"	f	class:SmartPtr
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void swap(Unique2DArray& other)$/;"	f	class:Unique2DArray
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void swap(UniqueArray& other)$/;"	f	class:UniqueArray
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^   void swap(UniquePtr& other)$/;"	f	class:UniquePtr
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^void swap(AlignedArray<T,align>& p, AlignedArray<T,align>& q) { p.swap(q); }$/;"	f
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^void swap(CloneablePtr<T>& p, CloneablePtr<T>& q) { p.swap(q); }$/;"	f
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^void swap(CopiedPtr<T,P>& p, CopiedPtr<T,P>& q) { p.swap(q); }$/;"	f
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^void swap(OptionalVal<T>& p, OptionalVal<T>& q) { p.swap(q); }$/;"	f
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^void swap(SmartPtr<T>& p, SmartPtr<T>& q) { p.swap(q); }$/;"	f
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^void swap(Unique2DArray<T>& p, Unique2DArray<T>& q) { p.swap(q); }$/;"	f
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^void swap(UniqueArray<T>& p, UniqueArray<T>& q) { p.swap(q); }$/;"	f
swap	deplib/ntl-main/include/NTL/SmartPtr.h	/^void swap(UniquePtr<T,P>& p, UniquePtr<T,P>& q) { p.swap(q); }$/;"	f
swap	deplib/ntl-main/include/NTL/WordVector.h	/^inline void swap(WordVector& x, WordVector& y) $/;"	f
swap	deplib/ntl-main/include/NTL/ZZ.h	/^inline void swap(ZZ& x, ZZ& y)$/;"	f
swap	deplib/ntl-main/include/NTL/ZZ.h	/^void swap(ZZ& x)$/;"	f	class:ZZ
swap	deplib/ntl-main/include/NTL/ZZVec.h	/^   void swap(ZZVec& x)$/;"	f	class:ZZVec
swap	deplib/ntl-main/include/NTL/ZZVec.h	/^inline void swap(ZZVec& x, ZZVec& y) { x.swap(y); }$/;"	f
swap	deplib/ntl-main/include/NTL/ZZX.h	/^inline void swap(ZZX& x, ZZX& y)$/;"	f
swap	deplib/ntl-main/include/NTL/ZZX.h	/^void swap(ZZX& x) { rep.swap(x.rep); }$/;"	f	class:ZZX
swap	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline void swap(ZZ_p& x, ZZ_p& y)$/;"	f
swap	deplib/ntl-main/include/NTL/ZZ_p.h	/^void swap(ZZ_p& x)$/;"	f	class:ZZ_p
swap	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void swap(ZZ_pE& x, ZZ_pE& y)$/;"	f
swap	deplib/ntl-main/include/NTL/ZZ_pE.h	/^void swap(ZZ_pE& x) { _ZZ_pE__rep.swap(x._ZZ_pE__rep); }$/;"	f	class:ZZ_pE
swap	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline void swap(ZZ_pEX& x, ZZ_pEX& y)$/;"	f
swap	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^void swap(ZZ_pEX& x) { rep.swap(x.rep); }$/;"	f	class:ZZ_pEX
swap	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline void swap(ZZ_pX& x, ZZ_pX& y)$/;"	f
swap	deplib/ntl-main/include/NTL/ZZ_pX.h	/^void swap(ZZ_pX& x)$/;"	f	class:ZZ_pX
swap	deplib/ntl-main/include/NTL/lzz_p.h	/^inline void swap(zz_p& x, zz_p& y)$/;"	f
swap	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void swap(zz_pE& x, zz_pE& y)$/;"	f
swap	deplib/ntl-main/include/NTL/lzz_pE.h	/^void swap(zz_pE& x) { _zz_pE__rep.swap(x._zz_pE__rep); }$/;"	f	class:zz_pE
swap	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline void swap(zz_pEX& x, zz_pEX& y)$/;"	f
swap	deplib/ntl-main/include/NTL/lzz_pEX.h	/^void swap(zz_pEX& x) { rep.swap(x.rep); }$/;"	f	class:zz_pEX
swap	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline void swap(zz_pX& x, zz_pX& y)$/;"	f
swap	deplib/ntl-main/include/NTL/lzz_pX.h	/^void swap(zz_pX& x)$/;"	f	class:zz_pX
swap	deplib/ntl-main/include/NTL/matrix.h	/^   void swap(Mat& other)$/;"	f	class:Mat
swap	deplib/ntl-main/include/NTL/matrix.h	/^void swap(Mat<T>& X, Mat<T>& Y)  $/;"	f
swap	deplib/ntl-main/include/NTL/tools.h	/^   void swap(WrappedPtr& other) { _ntl_swap(rep, other.rep); }$/;"	f	class:WrappedPtr
swap	deplib/ntl-main/include/NTL/tools.h	/^inline void swap(int& a, int& b)  {  int t;  t = a; a = b; b = t; }$/;"	f
swap	deplib/ntl-main/include/NTL/tools.h	/^inline void swap(long& a, long& b)  {  long t;  t = a; a = b; b = t; }$/;"	f
swap	deplib/ntl-main/include/NTL/tools.h	/^void swap(WrappedPtr<T,Deleter>& x, WrappedPtr<T,Deleter>& y)$/;"	f
swap	deplib/ntl-main/include/NTL/vec_GF2.h	/^inline void swap(vec_GF2& x, vec_GF2& y) { x.swap(y); }$/;"	f
swap	deplib/ntl-main/include/NTL/vector.h	/^void Vec<T>::swap(Vec& y)  $/;"	f	class:Vec
swap	deplib/ntl-main/include/NTL/vector.h	/^void swap(Vec<T>& x, Vec<T>& y)  $/;"	f
swap	deplib/ntl-main/src/FacVec.cpp	/^void swap(IntFactor& x, IntFactor& y)$/;"	f	file:
swap	deplib/ntl-main/src/GF2X1.cpp	/^void swap(_ntl_ulong_ptr& a, _ntl_ulong_ptr& b)  $/;"	f	file:
swap	deplib/ntl-main/src/G_LLL_FP.cpp	/^void GivensCache_FP::swap()$/;"	f	class:GivensCache_FP
swap	deplib/ntl-main/src/G_LLL_FP.cpp	/^void GivensCache_FP::swap(long l)$/;"	f	class:GivensCache_FP
swap	deplib/ntl-main/src/G_LLL_QP.cpp	/^void GivensCache_QP::swap()$/;"	f	class:GivensCache_QP
swap	deplib/ntl-main/src/G_LLL_QP.cpp	/^void GivensCache_QP::swap(long l)$/;"	f	class:GivensCache_QP
swap	deplib/ntl-main/src/G_LLL_RR.cpp	/^void GivensCache_RR::swap()$/;"	f	class:GivensCache_RR
swap	deplib/ntl-main/src/G_LLL_RR.cpp	/^void GivensCache_RR::swap(long l)$/;"	f	class:GivensCache_RR
swap	deplib/ntl-main/src/G_LLL_XD.cpp	/^void GivensCache_XD::swap()$/;"	f	class:GivensCache_XD
swap	deplib/ntl-main/src/G_LLL_XD.cpp	/^void GivensCache_XD::swap(long l)$/;"	f	class:GivensCache_XD
swap	deplib/ntl-main/src/LLL.cpp	/^long swap(long k, mat_ZZ& B, vec_long& P, vec_ZZ& D, $/;"	f	file:
swap	deplib/ntl-main/src/WordVector.cpp	/^void WordVector::swap(WordVector& y)  $/;"	f	class:WordVector
swap	deplib/ntl-main/src/vec_GF2.cpp	/^void vec_GF2::swap(vec_GF2& y)$/;"	f	class:vec_GF2
swap2	deplib/ntl-main/include/NTL/PD.h	/^swap2(PD<4> a) $/;"	f
swap2	deplib/ntl-main/include/NTL/PD.h	/^swap2(PD<8> a) $/;"	f
swap4	deplib/ntl-main/include/NTL/PD.h	/^swap4(PD<8> a) $/;"	f
syntax	aes_tests.c	/^void syntax(const char* program_name) {$/;"	f
syntax	aes_whitebox_compiler.cc	/^void syntax() {$/;"	f	namespace:__anon4
sz	deplib/ntl-main/include/NTL/MatPrime.h	/^   long sz;$/;"	m	struct:MatPrime_crt_helper
sz	deplib/ntl-main/src/G_LLL_FP.cpp	/^   long sz;$/;"	m	class:GivensCache_FP	file:
sz	deplib/ntl-main/src/G_LLL_QP.cpp	/^   long sz;$/;"	m	class:GivensCache_QP	file:
sz	deplib/ntl-main/src/G_LLL_RR.cpp	/^   long sz;$/;"	m	class:GivensCache_RR	file:
sz	deplib/ntl-main/src/G_LLL_XD.cpp	/^   long sz;$/;"	m	class:GivensCache_XD	file:
sz	deplib/ntl-main/src/lip.cpp	/^   long sz;$/;"	m	class:_ntl_crt_struct_tbl	file:
t	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^      std::thread t;$/;"	m	struct:BasicThreadPool::AutomaticThread
t	deplib/ntl-main/include/NTL/MatPrime.h	/^   ZZ t;$/;"	m	struct:MatPrime_crt_helper_scratch
t	deplib/ntl-main/include/NTL/tools.h	/^   T t;$/;"	m	struct:details_pthread::DerivedNode
t	deplib/ntl-main/src/CheckThreads.cpp	/^   T t;$/;"	m	struct:details_pthread::DerivedNode	file:
task	deplib/ntl-main/src/CheckThreads.cpp	/^void task(long *v)$/;"	f
tbl	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   Unique2DArray<long> tbl;$/;"	m	class:FFTRep
tbl	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   Unique2DArray<long> tbl;$/;"	m	class:ZZ_pXModRep
tbl	deplib/ntl-main/include/NTL/lzz_pX.h	/^   UniqueArray<long> tbl[4];$/;"	m	class:fftRep
tbl	deplib/ntl-main/src/lip.cpp	/^   Unique2DArray<_ntl_limb_t> tbl;$/;"	m	class:_ntl_rem_struct_tbl	file:
tbl	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_limb_t> tbl;$/;"	m	struct:_ntl_general_rem_one_struct	file:
tbl_red_21	deplib/ntl-main/src/lip.cpp	/^long tbl_red_21(unsigned long hi, unsigned long lo, long d, unsigned long dinv)$/;"	f	file:
tbl_red_31	deplib/ntl-main/src/lip.cpp	/^unsigned long tbl_red_31(unsigned long x2, unsigned long x1, unsigned long x0,$/;"	f	file:
tbl_red_inv	deplib/ntl-main/src/lip.cpp	/^unsigned long tbl_red_inv(long d)$/;"	f	file:
temps	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_gbigint_wrapped> temps;$/;"	m	class:_ntl_tmp_vec_crt_fast	file:
term	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^      ConcurrentTaskTerminate term;$/;"	m	struct:BasicThreadPool::AutomaticThread
test	deplib/ntl-main/src/GF2EXDivCross.cpp	/^long test(long k)$/;"	f
test	deplib/ntl-main/src/GF2EXGCDCross.cpp	/^long test(long k)$/;"	f
test	deplib/ntl-main/src/GF2EXGCDTest.cpp	/^void test(GF2X& P, GF2EX& f, GF2EX& g, GF2EX& h, GF2EX& hx, GF2EX& s, GF2EX& t)$/;"	f
test	deplib/ntl-main/src/GF2EXKarCross.cpp	/^long test(long k)$/;"	f
test	deplib/ntl-main/src/GF2EXModCross.cpp	/^long test(long k)$/;"	f
test	deplib/ntl-main/src/ZZ_pEXGCDTest.cpp	/^void test(ZZ_pX& P, ZZ_pEX& f, ZZ_pEX& g, ZZ_pEX& h, ZZ_pEX& hx, ZZ_pEX& s, ZZ_pEX& t)$/;"	f
test	deplib/ntl-main/src/lzz_pEXGCDTest.cpp	/^void test(zz_pX& P, zz_pEX& f, zz_pEX& g, zz_pEX& h, zz_pEX& hx, zz_pEX& s, zz_pEX& t)$/;"	f
threadVec	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  Vec< UniquePtr<AutomaticThread> > threadVec;$/;"	m	class:BasicThreadPool
threadimpl	deplib/ntl-main/doc/tour-impl.html	/^<a name="threadimpl">$/;"	a
tmp1	deplib/ntl-main/src/ZZX1.cpp	/^   ZZ tmp1, tmp2, tmp3;$/;"	m	struct:NewFastCRTHelperScratch	file:
tmp2	deplib/ntl-main/src/ZZX1.cpp	/^   ZZ tmp1, tmp2, tmp3;$/;"	m	struct:NewFastCRTHelperScratch	file:
tmp3	deplib/ntl-main/src/ZZX1.cpp	/^   ZZ tmp1, tmp2, tmp3;$/;"	m	struct:NewFastCRTHelperScratch	file:
tmp_vec	deplib/ntl-main/src/ZZX1.cpp	/^   Vec<ZZ> tmp_vec;        \/\/ length == nlevels+1$/;"	m	struct:NewFastCRTHelperScratch	file:
to_GF2	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 to_GF2(const ZZ& a) $/;"	f
to_GF2	deplib/ntl-main/include/NTL/GF2.h	/^inline GF2 to_GF2(long a) $/;"	f
to_GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E to_GF2E(GF2 a)$/;"	f
to_GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E to_GF2E(const GF2X& a)$/;"	f
to_GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E to_GF2E(const ZZ& a)$/;"	f
to_GF2E	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2E to_GF2E(long a)$/;"	f
to_GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(GF2 a)$/;"	f
to_GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(const GF2E& a)$/;"	f
to_GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(const GF2X& a)$/;"	f
to_GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(const ZZ& a)$/;"	f
to_GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(const vec_GF2E& a)$/;"	f
to_GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX to_GF2EX(long a)$/;"	f
to_GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X to_GF2X(GF2 a)$/;"	f
to_GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X to_GF2X(const ZZ& a)$/;"	f
to_GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X to_GF2X(const vec_GF2& a)$/;"	f
to_GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X to_GF2X(long a)$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(const RR& a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(const ZZ& a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(const char *a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(const quad_float& a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(const xdouble& a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(double a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(float a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(int a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(long a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(unsigned int a) { return RR(INIT_VAL, a); }$/;"	f
to_RR	deplib/ntl-main/include/NTL/RR.h	/^inline RR to_RR(unsigned long a) { return RR(INIT_VAL, a); }$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/RR.h	/^inline ZZ to_ZZ(const RR& a)$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ to_ZZ(const ZZ& a) { return a; }$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ to_ZZ(const char *s) { return ZZ(INIT_VAL, s); }$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ to_ZZ(double a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ to_ZZ(float a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ to_ZZ(int a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ to_ZZ(long a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ to_ZZ(unsigned int a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ to_ZZ(unsigned long a) { return ZZ(INIT_VAL, a); }$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/quad_float.h	/^inline ZZ to_ZZ(const quad_float& a)$/;"	f
to_ZZ	deplib/ntl-main/include/NTL/xdouble.h	/^inline ZZ to_ZZ(const xdouble& a)$/;"	f
to_ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX to_ZZX(const ZZ& a)$/;"	f
to_ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX to_ZZX(const ZZ_pX& a)$/;"	f
to_ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX to_ZZX(const vec_ZZ& a)$/;"	f
to_ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX to_ZZX(const zz_pX& a)$/;"	f
to_ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX to_ZZX(long a)$/;"	f
to_ZZ_p	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p to_ZZ_p(const ZZ& a)$/;"	f
to_ZZ_p	deplib/ntl-main/include/NTL/ZZ_p.h	/^inline ZZ_p to_ZZ_p(long a)$/;"	f
to_ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE to_ZZ_pE(const ZZ& a) $/;"	f
to_ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE to_ZZ_pE(const ZZ_p& a) $/;"	f
to_ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE to_ZZ_pE(const ZZ_pX& a) $/;"	f
to_ZZ_pE	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_pE to_ZZ_pE(long a) $/;"	f
to_ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(const ZZ& a)$/;"	f
to_ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(const ZZ_p& a)$/;"	f
to_ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(const ZZ_pE& a)$/;"	f
to_ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(const ZZ_pX& a)$/;"	f
to_ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(const vec_ZZ_pE& a)$/;"	f
to_ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX to_ZZ_pEX(long a)$/;"	f
to_ZZ_pX	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZ_pX to_ZZ_pX(const ZZX& a)$/;"	f
to_ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX to_ZZ_pX(const ZZ& a)$/;"	f
to_ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX to_ZZ_pX(const ZZ_p& a)$/;"	f
to_ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX to_ZZ_pX(const vec_ZZ_p& a)$/;"	f
to_ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX to_ZZ_pX(long a)$/;"	f
to_double	deplib/ntl-main/include/NTL/RR.h	/^inline double to_double(const RR& a) { double z; conv(z, a); return z; }$/;"	f
to_double	deplib/ntl-main/include/NTL/ZZ.h	/^inline double to_double(const ZZ& a) { return _ntl_gdoub(a.rep); }$/;"	f
to_double	deplib/ntl-main/include/NTL/quad_float.h	/^inline double to_double(const quad_float& x) { return x.hi; }$/;"	f
to_double	deplib/ntl-main/include/NTL/tools.h	/^inline double to_double(double a) { return a; }$/;"	f
to_double	deplib/ntl-main/include/NTL/tools.h	/^inline double to_double(float a) { return double(a); }$/;"	f
to_double	deplib/ntl-main/include/NTL/tools.h	/^inline double to_double(int a) { return double(a); }$/;"	f
to_double	deplib/ntl-main/include/NTL/tools.h	/^inline double to_double(long a) { return double(a); }$/;"	f
to_double	deplib/ntl-main/include/NTL/tools.h	/^inline double to_double(unsigned a) { return double(a); }$/;"	f
to_double	deplib/ntl-main/include/NTL/tools.h	/^inline double to_double(unsigned long a) { return double(a); }$/;"	f
to_double	deplib/ntl-main/include/NTL/xdouble.h	/^inline double to_double(const xdouble& a)$/;"	f
to_float	deplib/ntl-main/include/NTL/RR.h	/^inline float to_float(const RR& a) { float z; conv(z, a); return z; }$/;"	f
to_float	deplib/ntl-main/include/NTL/ZZ.h	/^inline float to_float(const ZZ& a) { return float(_ntl_gdoub(a.rep)); }$/;"	f
to_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline float to_float(const quad_float& x) { return float(x.hi); }$/;"	f
to_float	deplib/ntl-main/include/NTL/tools.h	/^inline float to_float(double a) { return float(a); }$/;"	f
to_float	deplib/ntl-main/include/NTL/tools.h	/^inline float to_float(float a) { return a; }$/;"	f
to_float	deplib/ntl-main/include/NTL/tools.h	/^inline float to_float(int a) { return float(a); }$/;"	f
to_float	deplib/ntl-main/include/NTL/tools.h	/^inline float to_float(long a) { return float(a); }$/;"	f
to_float	deplib/ntl-main/include/NTL/tools.h	/^inline float to_float(unsigned a) { return float(a); }$/;"	f
to_float	deplib/ntl-main/include/NTL/tools.h	/^inline float to_float(unsigned long a) { return float(a); }$/;"	f
to_float	deplib/ntl-main/include/NTL/xdouble.h	/^inline float to_float(const xdouble& a)$/;"	f
to_int	deplib/ntl-main/include/NTL/RR.h	/^inline int to_int(const RR& a) { int z; conv(z, a); return z; }$/;"	f
to_int	deplib/ntl-main/include/NTL/ZZ.h	/^inline int to_int(const ZZ& a)  $/;"	f
to_int	deplib/ntl-main/include/NTL/quad_float.h	/^inline int to_int(const quad_float& x) { return to_int(to_long(x)); }$/;"	f
to_int	deplib/ntl-main/include/NTL/tools.h	/^inline int to_int(double a) { return int(NTL_SNS floor(a)); }$/;"	f
to_int	deplib/ntl-main/include/NTL/tools.h	/^inline int to_int(float a) { return int(NTL_SNS floor(double(a))); }$/;"	f
to_int	deplib/ntl-main/include/NTL/tools.h	/^inline int to_int(int a) { return a; }$/;"	f
to_int	deplib/ntl-main/include/NTL/tools.h	/^inline int to_int(long a) $/;"	f
to_int	deplib/ntl-main/include/NTL/tools.h	/^inline int to_int(unsigned a) $/;"	f
to_int	deplib/ntl-main/include/NTL/tools.h	/^inline int to_int(unsigned long a) $/;"	f
to_int	deplib/ntl-main/include/NTL/xdouble.h	/^inline int to_int(const xdouble& a)$/;"	f
to_long	deplib/ntl-main/include/NTL/RR.h	/^inline long to_long(const RR& a) { long z; conv(z, a); return z; }$/;"	f
to_long	deplib/ntl-main/include/NTL/ZZ.h	/^inline long to_long(const ZZ& a)  { return _ntl_gtoint(a.rep); }$/;"	f
to_long	deplib/ntl-main/include/NTL/tools.h	/^inline long to_long(double a) { return long(NTL_SNS floor(a)); }$/;"	f
to_long	deplib/ntl-main/include/NTL/tools.h	/^inline long to_long(float a) { return long(NTL_SNS floor(double(a))); }$/;"	f
to_long	deplib/ntl-main/include/NTL/tools.h	/^inline long to_long(int a) { return a; }$/;"	f
to_long	deplib/ntl-main/include/NTL/tools.h	/^inline long to_long(long a) { return a; }$/;"	f
to_long	deplib/ntl-main/include/NTL/tools.h	/^inline long to_long(unsigned a)$/;"	f
to_long	deplib/ntl-main/include/NTL/tools.h	/^inline long to_long(unsigned long a)$/;"	f
to_long	deplib/ntl-main/include/NTL/xdouble.h	/^inline long to_long(const xdouble& a)$/;"	f
to_long	deplib/ntl-main/src/quad_float1.cpp	/^long to_long(const quad_float& x)$/;"	f
to_mat_GF2	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 to_mat_GF2(const vec_vec_GF2& a) {$/;"	f
to_mat_ZZ_p	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ_p to_mat_ZZ_p(const mat_ZZ& a)$/;"	f
to_mat_ZZ_p_crt_rep	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void to_mat_ZZ_p_crt_rep(mat_ZZ_p_crt_rep& X, const mat_ZZ_p& A)$/;"	f
to_mat_zz_p	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_zz_p to_mat_zz_p(const mat_ZZ& a)$/;"	f
to_quad_float	deplib/ntl-main/include/NTL/RR.h	/^inline quad_float to_quad_float(const RR& a) $/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(const ZZ& x)$/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(const char *s)$/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(const quad_float& a)$/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(double x) $/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(float x) $/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(int n) $/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(int n) { return quad_float(n, 0); }$/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(long n) { return quad_float(n, 0); }$/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(unsigned int n) $/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(unsigned int n) { return quad_float(n, 0); }$/;"	f
to_quad_float	deplib/ntl-main/include/NTL/quad_float.h	/^inline quad_float to_quad_float(unsigned long n) { return quad_float(n, 0); }$/;"	f
to_quad_float	deplib/ntl-main/src/quad_float1.cpp	/^quad_float to_quad_float(long n)$/;"	f
to_quad_float	deplib/ntl-main/src/quad_float1.cpp	/^quad_float to_quad_float(unsigned long n)$/;"	f
to_scalar	aes_whitebox_compiler.cc	/^inline uint32_t to_scalar(const NTL::vec_GF2& in) {$/;"	f	namespace:__anon4
to_scalar	aes_whitebox_compiler.cc	/^inline uint8_t to_scalar(const NTL::vec_GF2& in) {$/;"	f	namespace:__anon4
to_uint	deplib/ntl-main/include/NTL/ZZ.h	/^inline unsigned int to_uint(const ZZ& a)  $/;"	f
to_ulong	deplib/ntl-main/include/NTL/ZZ.h	/^inline unsigned long to_ulong(const ZZ& a)  { return _ntl_gtouint(a.rep); }$/;"	f
to_vec_GF2	deplib/ntl-main/include/NTL/GF2X.h	/^inline vec_GF2 to_vec_GF2(const GF2X& a)$/;"	f
to_vec_ZZ	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ to_vec_ZZ(const vec_ZZ_p& a)$/;"	f
to_vec_ZZ	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_ZZ to_vec_ZZ(const vec_zz_p& a)$/;"	f
to_vec_ZZ_p	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^inline vec_ZZ_p to_vec_ZZ_p(const vec_ZZ& a)$/;"	f
to_vec_zz_p	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^inline vec_zz_p to_vec_zz_p(const vec_ZZ& a)$/;"	f
to_xdouble	deplib/ntl-main/include/NTL/RR.h	/^inline xdouble to_xdouble(const RR& a) $/;"	f
to_xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble to_xdouble(const char *a) $/;"	f
to_xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble to_xdouble(const xdouble& a)$/;"	f
to_xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble to_xdouble(float a) { return to_xdouble(double(a)); }$/;"	f
to_xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble to_xdouble(int a) { return xdouble(a, 0); }$/;"	f
to_xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble to_xdouble(long a) { return xdouble(a, 0); }$/;"	f
to_xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble to_xdouble(unsigned int a) { return xdouble(a, 0); }$/;"	f
to_xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^inline xdouble to_xdouble(unsigned long a) { return xdouble(a, 0); }$/;"	f
to_xdouble	deplib/ntl-main/src/xdouble.cpp	/^xdouble to_xdouble(const ZZ& a)$/;"	f
to_xdouble	deplib/ntl-main/src/xdouble.cpp	/^xdouble to_xdouble(double a)$/;"	f
to_zz_p	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_p to_zz_p(const ZZ& a)$/;"	f
to_zz_p	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_p to_zz_p(long a) $/;"	f
to_zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE to_zz_pE(const ZZ& a) $/;"	f
to_zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE to_zz_pE(const zz_p& a) $/;"	f
to_zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE to_zz_pE(const zz_pX& a) $/;"	f
to_zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_pE to_zz_pE(long a) $/;"	f
to_zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(const ZZ& a)$/;"	f
to_zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(const vec_zz_pE& a)$/;"	f
to_zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(const zz_p& a)$/;"	f
to_zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(const zz_pE& a)$/;"	f
to_zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(const zz_pX& a)$/;"	f
to_zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX to_zz_pEX(long a)$/;"	f
to_zz_pX	deplib/ntl-main/include/NTL/ZZX.h	/^inline zz_pX to_zz_pX(const ZZX& a)$/;"	f
to_zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX to_zz_pX(const ZZ& a)$/;"	f
to_zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX to_zz_pX(const vec_zz_p& a)$/;"	f
to_zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX to_zz_pX(long a)$/;"	f
to_zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX to_zz_pX(zz_p a)$/;"	f
top	deplib/ntl-main/src/ZZ.cpp	/^   long top;$/;"	m	struct:_ZZ_local_stack	file:
touch	deplib/ntl-main/src/G_LLL_FP.cpp	/^void GivensCache_FP::touch()$/;"	f	class:GivensCache_FP
touch	deplib/ntl-main/src/G_LLL_QP.cpp	/^void GivensCache_QP::touch()$/;"	f	class:GivensCache_QP
touch	deplib/ntl-main/src/G_LLL_RR.cpp	/^void GivensCache_RR::touch()$/;"	f	class:GivensCache_RR
touch	deplib/ntl-main/src/G_LLL_XD.cpp	/^void GivensCache_XD::touch()$/;"	f	class:GivensCache_XD
touch_double	deplib/ntl-main/src/CheckContractAux.cpp	/^void touch_double(double* x) {}$/;"	f
touch_double	deplib/ntl-main/src/MakeDescAux.cpp	/^void touch_double(double* x) {}$/;"	f
touch_int	deplib/ntl-main/src/MakeDescAux.cpp	/^void touch_int(int* x) {}$/;"	f
touch_ldouble	deplib/ntl-main/src/MakeDescAux.cpp	/^void touch_ldouble(long double* x) {}$/;"	f
touch_long	deplib/ntl-main/src/MakeDescAux.cpp	/^void touch_long(long* x) {}$/;"	f
touch_size_t	deplib/ntl-main/src/MakeDescAux.cpp	/^void touch_size_t(size_t* x) {}$/;"	f
touch_uint	deplib/ntl-main/src/MakeDescAux.cpp	/^void touch_uint(unsigned int* x) {}$/;"	f
touch_ulong	deplib/ntl-main/src/MakeDescAux.cpp	/^void touch_ulong(unsigned long* x) {}$/;"	f
trace	deplib/ntl-main/include/NTL/GF2E.h	/^inline GF2 trace(const GF2E& a)$/;"	f
trace	deplib/ntl-main/include/NTL/GF2E.h	/^inline void trace(ref_GF2 x, const GF2E& a)$/;"	f
trace	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline ZZ_p trace(const ZZ_pE& a)$/;"	f
trace	deplib/ntl-main/include/NTL/ZZ_pE.h	/^inline void trace(ZZ_p& x, const ZZ_pE& a)$/;"	f
trace	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline void trace(zz_p& x, const zz_pE& a)$/;"	f
trace	deplib/ntl-main/include/NTL/lzz_pE.h	/^inline zz_p trace(const zz_pE& a)$/;"	f
tracevec	deplib/ntl-main/include/NTL/GF2EX.h	/^   OptionalVal< Lazy<vec_GF2E> > tracevec;$/;"	m	class:GF2EXModulus
tracevec	deplib/ntl-main/include/NTL/GF2X.h	/^   OptionalVal< Lazy<vec_GF2> > tracevec;$/;"	m	class:GF2XModulus
tracevec	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   OptionalVal< Lazy<vec_ZZ_pE> > tracevec; $/;"	m	class:ZZ_pEXModulus
tracevec	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   OptionalVal< Lazy<vec_ZZ_p> > tracevec;$/;"	m	class:ZZ_pXModulus
tracevec	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   OptionalVal< Lazy<vec_zz_pE> > tracevec; $/;"	m	class:zz_pEXModulus
tracevec	deplib/ntl-main/include/NTL/lzz_pX.h	/^   OptionalVal< Lazy<vec_zz_p> > tracevec;  $/;"	m	class:zz_pXModulus
transpose	deplib/ntl-main/include/NTL/mat_GF2.h	/^inline mat_GF2 transpose(const mat_GF2 & a)$/;"	f
transpose	deplib/ntl-main/include/NTL/mat_GF2E.h	/^inline mat_GF2E transpose(const mat_GF2E& a)$/;"	f
transpose	deplib/ntl-main/include/NTL/mat_RR.h	/^inline mat_RR transpose(const mat_RR & a)$/;"	f
transpose	deplib/ntl-main/include/NTL/mat_ZZ.h	/^inline mat_ZZ transpose(const mat_ZZ& A)$/;"	f
transpose	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^inline mat_ZZ_p transpose(const mat_ZZ_p & a)$/;"	f
transpose	deplib/ntl-main/include/NTL/mat_ZZ_pE.h	/^inline mat_ZZ_pE transpose(const mat_ZZ_pE& A)$/;"	f
transpose	deplib/ntl-main/include/NTL/mat_lzz_p.h	/^inline mat_zz_p transpose(const mat_zz_p& a)$/;"	f
transpose	deplib/ntl-main/include/NTL/mat_lzz_pE.h	/^inline mat_zz_pE transpose(const mat_zz_pE& A)$/;"	f
transpose	deplib/ntl-main/src/mat_GF2.cpp	/^void transpose(mat_GF2& X, const mat_GF2& A)$/;"	f
transpose	deplib/ntl-main/src/mat_GF2E.cpp	/^void transpose(mat_GF2E& X, const mat_GF2E& A)$/;"	f
transpose	deplib/ntl-main/src/mat_RR.cpp	/^void transpose(mat_RR& X, const mat_RR& A)$/;"	f
transpose	deplib/ntl-main/src/mat_ZZ.cpp	/^void transpose(mat_ZZ& X, const mat_ZZ& A)$/;"	f
transpose	deplib/ntl-main/src/mat_ZZ_p.cpp	/^void transpose(mat_ZZ_p& X, const mat_ZZ_p& A)$/;"	f
transpose	deplib/ntl-main/src/mat_ZZ_pE.cpp	/^void transpose(mat_ZZ_pE& X, const mat_ZZ_pE& A)$/;"	f
transpose	deplib/ntl-main/src/mat_lzz_p.cpp	/^void transpose(mat_zz_p& X, const mat_zz_p& A)$/;"	f
transpose	deplib/ntl-main/src/mat_lzz_pE.cpp	/^void transpose(mat_zz_pE& X, const mat_zz_pE& A)$/;"	f
transpose_aux	deplib/ntl-main/src/mat_GF2.cpp	/^void transpose_aux(mat_GF2& X, const mat_GF2& A)$/;"	f
tri	deplib/ntl-main/src/mat_lzz_p.cpp	/^void tri(zz_p& d, const mat_zz_p& A, const vec_zz_p *bp, $/;"	f	file:
trunc	deplib/ntl-main/include/NTL/GF2EX.h	/^inline GF2EX trunc(const GF2EX& a, long m)$/;"	f
trunc	deplib/ntl-main/include/NTL/GF2X.h	/^inline GF2X trunc(const GF2X& a, long m)$/;"	f
trunc	deplib/ntl-main/include/NTL/RR.h	/^inline RR trunc(const RR& a)$/;"	f
trunc	deplib/ntl-main/include/NTL/ZZ.h	/^inline void trunc(ZZ& x, const ZZ& a, long k)$/;"	f
trunc	deplib/ntl-main/include/NTL/ZZX.h	/^inline ZZX trunc(const ZZX& a, long m)$/;"	f
trunc	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^inline ZZ_pEX trunc(const ZZ_pEX& a, long m)$/;"	f
trunc	deplib/ntl-main/include/NTL/ZZ_pX.h	/^inline ZZ_pX trunc(const ZZ_pX& a, long m)$/;"	f
trunc	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX trunc(const zz_pEX& a, long m)$/;"	f
trunc	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX trunc(const zz_pX& a, long m)$/;"	f
trunc	deplib/ntl-main/src/GF2EX.cpp	/^void trunc(GF2EX& x, const GF2EX& a, long m)$/;"	f
trunc	deplib/ntl-main/src/GF2X.cpp	/^void trunc(GF2X& x, const GF2X& a, long m)$/;"	f
trunc	deplib/ntl-main/src/RR.cpp	/^void trunc(RR& z, const RR& a)$/;"	f
trunc	deplib/ntl-main/src/ZZX1.cpp	/^void trunc(ZZX& x, const ZZX& a, long m)$/;"	f
trunc	deplib/ntl-main/src/ZZ_pEX.cpp	/^void trunc(ZZ_pEX& x, const ZZ_pEX& a, long m)$/;"	f
trunc	deplib/ntl-main/src/ZZ_pX.cpp	/^void trunc(ZZ_pX& x, const ZZ_pX& a, long m)$/;"	f
trunc	deplib/ntl-main/src/lzz_pEX.cpp	/^void trunc(zz_pEX& x, const zz_pEX& a, long m)$/;"	f
trunc	deplib/ntl-main/src/lzz_pX.cpp	/^void trunc(zz_pX& x, const zz_pX& a, long m)$/;"	f
trunc	deplib/ntl-main/src/quad_float1.cpp	/^quad_float trunc(const quad_float& x) { $/;"	f
trunc	deplib/ntl-main/src/xdouble.cpp	/^xdouble trunc(const xdouble& a)$/;"	f
trunc_ZZ	deplib/ntl-main/include/NTL/ZZ.h	/^inline ZZ trunc_ZZ(const ZZ& a, long k)$/;"	f
trunc_long	deplib/ntl-main/include/NTL/ZZ.h	/^inline long trunc_long(const ZZ& a, long k)$/;"	f
type	deplib/ntl-main/include/NTL/ctools.h	/^  typedef T type;$/;"	t	struct:_ntl_enable_if
type	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^     typedef out type;$/;"	t	struct:Relocate_aux_Failable	file:
u	deplib/ntl-main/include/NTL/MatPrime.h	/^   Vec<long> u;  \/\/ u[i] = (M\/q[i])^{-1} mod q[i]$/;"	m	struct:MatPrime_crt_helper
u	deplib/ntl-main/include/NTL/ZZ_p.h	/^   Vec<long> u;  \/\/ u[i] = (M\/q[i])^{-1} mod q[i]$/;"	m	class:ZZ_pFFTInfoT
u	deplib/ntl-main/include/NTL/lzz_p.h	/^   Vec<long> u;                 \/\/ u, as above$/;"	m	class:zz_pInfoT
u32	deplib/ntl-main/src/ZZ.cpp	/^typedef uint32_t u32;$/;"	t	file:
u8	deplib/ntl-main/src/ZZ.cpp	/^typedef uint8_t u8;$/;"	t	file:
uhlong	deplib/ntl-main/src/mat_lzz_p.cpp	/^typedef unsigned int uhlong;$/;"	t	file:
uhlong	deplib/ntl-main/src/mat_lzz_p.cpp	/^typedef unsigned long uhlong;$/;"	t	file:
umint_t	deplib/ntl-main/src/FFT.cpp	/^typedef long umint_t;$/;"	t	file:
umint_t	deplib/ntl-main/src/FFT.cpp	/^typedef unsigned long umint_t;$/;"	t	file:
unpack	deplib/ntl-main/src/ZZXFactoring.cpp	/^void unpack(vec_long& x, const ZZ& a, long n)$/;"	f	file:
unpinned_move	deplib/ntl-main/include/NTL/WordVector.h	/^   void unpinned_move(WordVector& other)$/;"	f	class:WordVector
unpinned_swap	deplib/ntl-main/include/NTL/WordVector.h	/^   void unpinned_swap(WordVector& other)$/;"	f	class:WordVector
updatetest	deplib/ntl-main/src/ZZ_pXTest.cpp	/^void updatetest()$/;"	f
updatetest	deplib/ntl-main/src/lzz_pXTest.cpp	/^void updatetest()$/;"	f
uqinv	deplib/ntl-main/include/NTL/MatPrime.h	/^   Vec<mulmod_precon_t> uqinv;$/;"	m	struct:MatPrime_crt_helper
uqinv	deplib/ntl-main/include/NTL/ZZ_p.h	/^   Vec<mulmod_precon_t> uqinv;$/;"	m	class:ZZ_pFFTInfoT
uqinv	deplib/ntl-main/include/NTL/lzz_p.h	/^   Vec<mulmod_precon_t> uqinv;  \/\/ MulModPrecon for u$/;"	m	class:zz_pInfoT
use_files	deplib/ntl-main/src/GF2EXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL long use_files;$/;"	v	file:
use_files	deplib/ntl-main/src/ZZ_pEXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL long use_files;$/;"	v	file:
use_files	deplib/ntl-main/src/ZZ_pXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL long use_files;$/;"	v	file:
use_files	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^static NTL_CHEAP_THREAD_LOCAL long use_files;$/;"	v	file:
v	deplib/ntl-main/include/NTL/GF2XVec.h	/^   GF2X* v;$/;"	m	class:GF2XVec
v	deplib/ntl-main/include/NTL/ZZVec.h	/^   ZZ* v;$/;"	m	class:ZZVec
v	deplib/ntl-main/src/lip.cpp	/^   Unique2DArray<_ntl_limb_t> v;$/;"	m	class:_ntl_crt_struct_tbl	file:
v	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<_ntl_gbigint_wrapped> v;$/;"	m	class:_ntl_crt_struct_basic	file:
val	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     T val; $/;"	m	class:BasicThreadPool::CompositeSignal
val	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     T val; $/;"	m	class:BasicThreadPool::SimpleSignal
val	deplib/ntl-main/include/NTL/FacVec.h	/^   long val;$/;"	m	struct:IntFactor
val	deplib/ntl-main/include/NTL/GF2EX.h	/^   const GF2EX& val() const { return f; }$/;"	f	class:GF2EXModulus
val	deplib/ntl-main/include/NTL/GF2X.h	/^   const GF2X& val() const { return f; }$/;"	f	class:GF2XModulus
val	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T& val() const { return *dp; }$/;"	f	class:OptionalVal
val	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^   const ZZ_pEX& val() const { return f; }$/;"	f	class:ZZ_pEXModulus
val	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   const ZZ_pX& val() const { return b; }$/;"	f	class:ZZ_pXMultiplier
val	deplib/ntl-main/include/NTL/ZZ_pX.h	/^   const ZZ_pX& val() const { return f; }$/;"	f	class:ZZ_pXModulus
val	deplib/ntl-main/include/NTL/lzz_pEX.h	/^   const zz_pEX& val() const { return f; }$/;"	f	class:zz_pEXModulus
val	deplib/ntl-main/include/NTL/lzz_pX.h	/^   const zz_pX& val() const { return b; }$/;"	f	class:zz_pXMultiplier
val	deplib/ntl-main/include/NTL/lzz_pX.h	/^   const zz_pX& val() const { return f; }$/;"	f	class:zz_pXModulus
val1	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     T1 val1;$/;"	m	class:BasicThreadPool::CompositeSignal
val_double	deplib/ntl-main/src/CheckContractAux.cpp	/^double val_double(double x) { return x; }$/;"	f
val_double	deplib/ntl-main/src/MakeDescAux.cpp	/^double val_double(double x) { return x; }$/;"	f
val_int	deplib/ntl-main/src/MakeDescAux.cpp	/^int val_int(int x) { return x; }$/;"	f
val_ldouble	deplib/ntl-main/src/MakeDescAux.cpp	/^long double val_ldouble(double x) { return x; }$/;"	f
val_long	deplib/ntl-main/src/MakeDescAux.cpp	/^long val_long(long x) { return x; }$/;"	f
val_size_t	deplib/ntl-main/src/MakeDescAux.cpp	/^size_t val_size_t(size_t x) { return x; }$/;"	f
val_uint	deplib/ntl-main/src/MakeDescAux.cpp	/^unsigned int val_uint(unsigned int x) { return x; }$/;"	f
val_ulong	deplib/ntl-main/src/MakeDescAux.cpp	/^unsigned long val_ulong(unsigned long x) { return x; }$/;"	f
val_vec	deplib/ntl-main/src/lip.cpp	/^   UniqueArray<long> val_vec;$/;"	m	class:_ntl_tmp_vec_crt_fast	file:
validate	deplib/ntl-main/include/NTL/ZZ.h	/^long validate() { return _ntl_gvalidate(rep); }$/;"	f	class:ZZ
value	deplib/ntl-main/include/NTL/ctools.h	/^ enum {value = false};$/;"	e	enum:_ntl_is_char_pointer::__anon9
value	deplib/ntl-main/include/NTL/ctools.h	/^ enum {value = true};$/;"	e	enum:_ntl_is_char_pointer::__anon10
value	deplib/ntl-main/include/NTL/ctools.h	/^ enum {value = true};$/;"	e	enum:_ntl_is_char_pointer::__anon11
value	deplib/ntl-main/include/NTL/tools.h	/^     enum { value =  sizeof( copy<T>(0) )  == 1 };$/;"	e	enum:Relocate_aux_has_copy::__anon12
value	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^     constexpr static bool value = decltype( copy<T>(0) )::value;$/;"	m	struct:Relocate_aux_has_copy	file:
value_type	deplib/ntl-main/include/NTL/matrix.h	/^   typedef typename Vec<T>::value_type value_type;$/;"	t	class:Mat
value_type	deplib/ntl-main/include/NTL/vec_GF2.h	/^   typedef GF2 value_type;$/;"	t	class:Vec
value_type	deplib/ntl-main/include/NTL/vector.h	/^   typedef T value_type;$/;"	t	class:Vec
van_hoeij_card_thresh	deplib/ntl-main/src/ZZXFactoring.cpp	/^const long van_hoeij_card_thresh = 3;$/;"	v
van_hoeij_size_thresh	deplib/ntl-main/src/ZZXFactoring.cpp	/^const long van_hoeij_size_thresh = 12; $/;"	v
vec_GF2	deplib/ntl-main/include/NTL/vec_GF2.h	/^typedef Vec<GF2> vec_GF2;$/;"	t
vec_GF2E	deplib/ntl-main/include/NTL/vec_GF2E.h	/^typedef Vec<GF2E> vec_GF2E;$/;"	t
vec_GF2EX	deplib/ntl-main/include/NTL/GF2EX.h	/^typedef Vec<GF2EX> vec_GF2EX;$/;"	t
vec_GF2X	deplib/ntl-main/include/NTL/GF2X.h	/^typedef Vec<GF2X> vec_GF2X;$/;"	t
vec_GF2XVec	deplib/ntl-main/include/NTL/vec_GF2XVec.h	/^typedef Vec<GF2XVec> vec_GF2XVec;$/;"	t
vec_IntFactor	deplib/ntl-main/include/NTL/FacVec.h	/^typedef Vec<IntFactor> vec_IntFactor;$/;"	t
vec_RR	deplib/ntl-main/include/NTL/vec_RR.h	/^typedef Vec<RR> vec_RR;$/;"	t
vec_ZZ	deplib/ntl-main/include/NTL/vec_ZZ.h	/^typedef Vec<ZZ> vec_ZZ;$/;"	t
vec_ZZVec	deplib/ntl-main/include/NTL/vec_ZZVec.h	/^typedef Vec<ZZVec> vec_ZZVec;$/;"	t
vec_ZZX	deplib/ntl-main/include/NTL/ZZX.h	/^typedef Vec<ZZX> vec_ZZX;$/;"	t
vec_ZZ_p	deplib/ntl-main/include/NTL/vec_ZZ_p.h	/^typedef Vec<ZZ_p> vec_ZZ_p;$/;"	t
vec_ZZ_pE	deplib/ntl-main/include/NTL/vec_ZZ_pE.h	/^typedef Vec<ZZ_pE> vec_ZZ_pE;$/;"	t
vec_ZZ_pEX	deplib/ntl-main/include/NTL/ZZ_pEX.h	/^typedef Vec<ZZ_pEX> vec_ZZ_pEX;$/;"	t
vec_ZZ_pX	deplib/ntl-main/include/NTL/ZZ_pX.h	/^typedef Vec<ZZ_pX> vec_ZZ_pX;$/;"	t
vec_double	deplib/ntl-main/include/NTL/vec_double.h	/^typedef Vec<double> vec_double;$/;"	t
vec_long	deplib/ntl-main/include/NTL/vec_long.h	/^typedef Vec<long> vec_long;$/;"	t
vec_pair_GF2EX_long	deplib/ntl-main/include/NTL/pair_GF2EX_long.h	/^typedef Vec<pair_GF2EX_long> vec_pair_GF2EX_long;$/;"	t
vec_pair_GF2X_long	deplib/ntl-main/include/NTL/pair_GF2X_long.h	/^typedef Vec<pair_GF2X_long> vec_pair_GF2X_long;$/;"	t
vec_pair_ZZX_long	deplib/ntl-main/include/NTL/pair_ZZX_long.h	/^typedef Vec<pair_ZZX_long> vec_pair_ZZX_long;$/;"	t
vec_pair_ZZ_pEX_long	deplib/ntl-main/include/NTL/pair_ZZ_pEX_long.h	/^typedef Vec<pair_ZZ_pEX_long> vec_pair_ZZ_pEX_long;$/;"	t
vec_pair_ZZ_pX_long	deplib/ntl-main/include/NTL/pair_ZZ_pX_long.h	/^typedef Vec<pair_ZZ_pX_long> vec_pair_ZZ_pX_long;$/;"	t
vec_pair_zz_pEX_long	deplib/ntl-main/include/NTL/pair_lzz_pEX_long.h	/^typedef Vec<pair_zz_pEX_long> vec_pair_zz_pEX_long;$/;"	t
vec_pair_zz_pX_long	deplib/ntl-main/include/NTL/pair_lzz_pX_long.h	/^typedef Vec<pair_zz_pX_long> vec_pair_zz_pX_long;$/;"	t
vec_quad_float	deplib/ntl-main/include/NTL/vec_quad_float.h	/^typedef Vec<quad_float> vec_quad_float;$/;"	t
vec_ulong	deplib/ntl-main/include/NTL/vec_ulong.h	/^typedef Vec<unsigned long> vec_ulong;$/;"	t
vec_vec_GF2	deplib/ntl-main/include/NTL/vec_vec_GF2.h	/^typedef Vec< Vec<GF2> > vec_vec_GF2;$/;"	t
vec_vec_GF2E	deplib/ntl-main/include/NTL/vec_vec_GF2E.h	/^typedef Vec< Vec<GF2E> > vec_vec_GF2E;$/;"	t
vec_vec_RR	deplib/ntl-main/include/NTL/vec_vec_RR.h	/^typedef Vec< Vec<RR> > vec_vec_RR;$/;"	t
vec_vec_ZZ	deplib/ntl-main/include/NTL/vec_vec_ZZ.h	/^typedef Vec< Vec<ZZ> > vec_vec_ZZ;$/;"	t
vec_vec_ZZ_p	deplib/ntl-main/include/NTL/vec_vec_ZZ_p.h	/^typedef Vec< Vec<ZZ_p> > vec_vec_ZZ_p;$/;"	t
vec_vec_ZZ_pE	deplib/ntl-main/include/NTL/vec_vec_ZZ_pE.h	/^typedef Vec< Vec<ZZ_pE> > vec_vec_ZZ_pE;$/;"	t
vec_vec_long	deplib/ntl-main/include/NTL/vec_vec_long.h	/^typedef Vec< Vec<long> > vec_vec_long;$/;"	t
vec_vec_ulong	deplib/ntl-main/include/NTL/vec_vec_ulong.h	/^typedef Vec< Vec<unsigned long> > vec_vec_ulong;$/;"	t
vec_vec_zz_p	deplib/ntl-main/include/NTL/vec_vec_lzz_p.h	/^typedef Vec< Vec<zz_p> > vec_vec_zz_p;$/;"	t
vec_vec_zz_pE	deplib/ntl-main/include/NTL/vec_vec_lzz_pE.h	/^typedef Vec< Vec<zz_pE> > vec_vec_zz_pE;$/;"	t
vec_xdouble	deplib/ntl-main/include/NTL/vec_xdouble.h	/^typedef Vec<xdouble> vec_xdouble;$/;"	t
vec_zz_p	deplib/ntl-main/include/NTL/vec_lzz_p.h	/^typedef Vec<zz_p> vec_zz_p;$/;"	t
vec_zz_pE	deplib/ntl-main/include/NTL/vec_lzz_pE.h	/^typedef Vec<zz_pE> vec_zz_pE;$/;"	t
vec_zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^typedef Vec<zz_pEX> vec_zz_pEX;$/;"	t
vec_zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^typedef Vec<zz_pX> vec_zz_pX;$/;"	t
veclen	deplib/ntl-main/src/ZZX1.cpp	/^   long veclen;$/;"	m	struct:NewFastCRTHelper	file:
verbose	deplib/ntl-main/src/G_LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL long verbose = 0;$/;"	v	file:
verbose	deplib/ntl-main/src/G_LLL_QP.cpp	/^static NTL_CHEAP_THREAD_LOCAL long verbose = 0;$/;"	v	file:
verbose	deplib/ntl-main/src/G_LLL_RR.cpp	/^static NTL_CHEAP_THREAD_LOCAL long verbose = 0;$/;"	v	file:
verbose	deplib/ntl-main/src/G_LLL_XD.cpp	/^static NTL_CHEAP_THREAD_LOCAL long verbose = 0;$/;"	v	file:
verbose	deplib/ntl-main/src/LLL_FP.cpp	/^static NTL_CHEAP_THREAD_LOCAL long verbose = 0;$/;"	v	file:
verbose	deplib/ntl-main/src/LLL_QP.cpp	/^static NTL_CHEAP_THREAD_LOCAL long verbose = 0;$/;"	v	file:
verbose	deplib/ntl-main/src/LLL_RR.cpp	/^static NTL_CHEAP_THREAD_LOCAL long verbose = 0;$/;"	v	file:
verbose	deplib/ntl-main/src/LLL_XD.cpp	/^static NTL_CHEAP_THREAD_LOCAL long verbose = 0;$/;"	v	file:
wait	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     T wait() $/;"	f	class:BasicThreadPool::SimpleSignal
wait	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^     T wait(T1& _val1) $/;"	f	class:BasicThreadPool::CompositeSignal
watched	deplib/ntl-main/include/NTL/GF2X.h	/^   GF2X& watched;$/;"	m	class:GF2XWatcher
watched	deplib/ntl-main/include/NTL/WordVector.h	/^   WordVector& watched;$/;"	m	class:WordVectorWatcher
watched	deplib/ntl-main/include/NTL/ZZ.h	/^   ZZ& watched;$/;"	m	class:ZZWatcher
watched	deplib/ntl-main/include/NTL/ZZ_p.h	/^   ZZ_p& watched;$/;"	m	class:ZZ_pWatcher
watched	deplib/ntl-main/include/NTL/vector.h	/^      Vec& watched;$/;"	m	class:Vec::Watcher
watched	deplib/ntl-main/src/lip.cpp	/^   _ntl_gbigint *watched;$/;"	m	class:_ntl_gbigint_watcher	file:
wd	deplib/ntl-main/src/GF2XTest.cpp	/^   wd(int x) { amt = x; } $/;"	f	struct:wd
wd	deplib/ntl-main/src/GF2XTest.cpp	/^struct wd {$/;"	s	file:
weight	deplib/ntl-main/include/NTL/ZZ.h	/^inline long weight(const ZZ& a)$/;"	f
weight	deplib/ntl-main/include/NTL/ZZ.h	/^inline long weight(long a)$/;"	f
weight	deplib/ntl-main/src/GF2X1.cpp	/^long weight(const GF2X& a)$/;"	f
weight	deplib/ntl-main/src/vec_GF2.cpp	/^long weight(const vec_GF2& a)$/;"	f
weight1	deplib/ntl-main/src/GF2X1.cpp	/^long weight1(_ntl_ulong a)$/;"	f	file:
weight1	deplib/ntl-main/src/vec_GF2.cpp	/^long weight1(_ntl_ulong a)$/;"	f	file:
wide_double	deplib/ntl-main/include/NTL/sp_arith.h	/^   explicit wide_double(const T& x) : data(x) { }$/;"	f	class:wide_double
wide_double	deplib/ntl-main/include/NTL/sp_arith.h	/^   wide_double() { }$/;"	f	class:wide_double
wide_double	deplib/ntl-main/include/NTL/sp_arith.h	/^   wide_double(const wide_double& x) : data(x.data) { }$/;"	f	class:wide_double
wide_double	deplib/ntl-main/include/NTL/sp_arith.h	/^class wide_double {$/;"	c
wide_double	deplib/ntl-main/include/NTL/sp_arith.h	/^typedef double wide_double;$/;"	t
wide_double_impl_t	deplib/ntl-main/include/NTL/sp_arith.h	/^typedef double wide_double_impl_t;$/;"	t
wide_double_impl_t	deplib/ntl-main/include/NTL/sp_arith.h	/^typedef long double wide_double_impl_t;$/;"	t
worker	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   static void worker(CompositeSignal< ConcurrentTask *, long > *localSignal)$/;"	f	class:BasicThreadPool
wqinvtab	deplib/ntl-main/include/NTL/pd_FFT.h	/^   const double **wqinvtab;$/;"	m	struct:pd_mod_t
wqinvtab	deplib/ntl-main/src/FFT.cpp	/^   const mulmod_precon_t **wqinvtab;$/;"	m	struct:new_mod_t	file:
wqinvtab1	deplib/ntl-main/include/NTL/pd_FFT.h	/^   const double **wqinvtab1;$/;"	m	struct:pd_mod_t
wqinvtab_precomp	deplib/ntl-main/src/FFT.cpp	/^   AlignedArray<double> wqinvtab_precomp;$/;"	m	class:pd_FFTVectorPair	file:
wqinvtab_precomp	deplib/ntl-main/src/FFT.cpp	/^   Vec<mulmod_precon_t> wqinvtab_precomp;$/;"	m	class:FFTVectorPair	file:
wrapped_mpz	deplib/ntl-main/src/lip.cpp	/^   wrapped_mpz() { mpz_init(body); }$/;"	f	struct:wrapped_mpz
wrapped_mpz	deplib/ntl-main/src/lip.cpp	/^struct wrapped_mpz {$/;"	s	file:
wtab	deplib/ntl-main/include/NTL/pd_FFT.h	/^   const double **wtab;$/;"	m	struct:pd_mod_t
wtab	deplib/ntl-main/src/FFT.cpp	/^   const mint_t **wtab;$/;"	m	struct:new_mod_t	file:
wtab1	deplib/ntl-main/include/NTL/pd_FFT.h	/^   const double **wtab1;$/;"	m	struct:pd_mod_t
wtab_precomp	deplib/ntl-main/src/FFT.cpp	/^   AlignedArray<double> wtab_precomp;$/;"	m	class:pd_FFTVectorPair	file:
wtab_precomp	deplib/ntl-main/src/FFT.cpp	/^   Vec<long> wtab_precomp;$/;"	m	class:FFTVectorPair	file:
x	deplib/ntl-main/include/NTL/RR.h	/^ZZ x;$/;"	m	class:RR
x	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T& x;$/;"	m	class:ConstReferenceWrapper
x	deplib/ntl-main/include/NTL/SmartPtr.h	/^   T& x;$/;"	m	class:ReferenceWrapper
x	deplib/ntl-main/include/NTL/lzz_p.h	/^   Vec<double> x;               \/\/ u\/q, where u = (M\/q)^{-1} mod q$/;"	m	class:zz_pInfoT
x	deplib/ntl-main/include/NTL/xdouble.h	/^double x;$/;"	m	class:xdouble
x	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct X { int x; };$/;"	m	struct:X	file:
x	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct XX { private: X x; };$/;"	m	struct:XX	file:
x	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct X { int x; };$/;"	m	struct:X	file:
x	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct XX { private: X x; };$/;"	m	struct:XX	file:
x1	deplib/ntl-main/include/NTL/vector.h	/^   double x1;$/;"	m	union:_ntl_AlignedVectorHeader
x2	deplib/ntl-main/include/NTL/vector.h	/^   long x2;$/;"	m	union:_ntl_AlignedVectorHeader
x3	deplib/ntl-main/include/NTL/vector.h	/^   char *x3;$/;"	m	union:_ntl_AlignedVectorHeader
x4	deplib/ntl-main/include/NTL/vector.h	/^   long double x4;$/;"	m	union:_ntl_AlignedVectorHeader
xcopy	deplib/ntl-main/src/RR.cpp	/^void xcopy(RR& x, const RR& a)$/;"	f	file:
xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^class xdouble {$/;"	c
xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^explicit xdouble(double a) : x(0), e(0) { *this = a; }$/;"	f	class:xdouble
xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^xdouble() : x(0), e(0) { }$/;"	f	class:xdouble
xdouble	deplib/ntl-main/include/NTL/xdouble.h	/^xdouble(double xx, long ee) : x(xx), e(ee) { } \/\/ internal use only$/;"	f	class:xdouble
xexp	deplib/ntl-main/src/xdouble.cpp	/^xdouble xexp(double x)$/;"	f
xrep	deplib/ntl-main/include/NTL/GF2X.h	/^WordVector xrep;$/;"	m	class:GF2X
yn_vec	deplib/ntl-main/src/MakeDesc.cpp	/^const char *yn_vec[2] = { "no", "yes" }; $/;"	v
zero	deplib/ntl-main/include/NTL/GF2.h	/^static GF2 zero() { return GF2(); }$/;"	f	class:GF2
zero	deplib/ntl-main/include/NTL/lzz_p.h	/^static zz_p zero() { return zz_p(); }$/;"	f	class:zz_p
zero	deplib/ntl-main/src/GF2E.cpp	/^const GF2E& GF2E::zero()$/;"	f	class:GF2E
zero	deplib/ntl-main/src/GF2EX.cpp	/^const GF2EX& GF2EX::zero()$/;"	f	class:GF2EX
zero	deplib/ntl-main/src/GF2X.cpp	/^const GF2X& GF2X::zero()$/;"	f	class:GF2X
zero	deplib/ntl-main/src/ZZ.cpp	/^const ZZ& ZZ::zero()$/;"	f	class:ZZ
zero	deplib/ntl-main/src/ZZX.cpp	/^const ZZX& ZZX::zero()$/;"	f	class:ZZX
zero	deplib/ntl-main/src/ZZ_p.cpp	/^const ZZ_p& ZZ_p::zero()$/;"	f	class:ZZ_p
zero	deplib/ntl-main/src/ZZ_pE.cpp	/^const ZZ_pE& ZZ_pE::zero()$/;"	f	class:ZZ_pE
zero	deplib/ntl-main/src/ZZ_pEX.cpp	/^const ZZ_pEX& ZZ_pEX::zero()$/;"	f	class:ZZ_pEX
zero	deplib/ntl-main/src/ZZ_pX.cpp	/^const ZZ_pX& ZZ_pX::zero()$/;"	f	class:ZZ_pX
zero	deplib/ntl-main/src/lzz_pE.cpp	/^const zz_pE& zz_pE::zero()$/;"	f	class:zz_pE
zero	deplib/ntl-main/src/lzz_pEX.cpp	/^const zz_pEX& zz_pEX::zero()$/;"	f	class:zz_pEX
zero	deplib/ntl-main/src/lzz_pX.cpp	/^const zz_pX& zz_pX::zero()$/;"	f	class:zz_pX
zz_p	deplib/ntl-main/include/NTL/lzz_p.h	/^class zz_p {$/;"	c
zz_p	deplib/ntl-main/include/NTL/lzz_p.h	/^explicit zz_p(long a) : _zz_p__rep(0) { *this = a;  }$/;"	f	class:zz_p
zz_p	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_p() : _zz_p__rep(0) {  }$/;"	f	class:zz_p
zz_p	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_p(INIT_ALLOC_TYPE) : _zz_p__rep(0) { } $/;"	f	class:zz_p
zz_p	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_p(INIT_NO_ALLOC_TYPE) : _zz_p__rep(0) { } $/;"	f	class:zz_p
zz_p	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_p(const zz_p& a) : _zz_p__rep(a._zz_p__rep) { }  $/;"	f	class:zz_p
zz_p	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_p(long a, INIT_LOOP_HOLE_TYPE) { _zz_p__rep = a; }$/;"	f	class:zz_p
zz_pBak	deplib/ntl-main/include/NTL/lzz_p.h	/^class zz_pBak {$/;"	c
zz_pBak	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_pBak() : MustRestore(false) { }$/;"	f	class:zz_pBak
zz_pContext	deplib/ntl-main/include/NTL/lzz_p.h	/^class zz_pContext {$/;"	c
zz_pContext	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_pContext() { }$/;"	f	class:zz_pContext
zz_pContext	deplib/ntl-main/src/lzz_p.cpp	/^zz_pContext::zz_pContext(INIT_FFT_TYPE, long index)$/;"	f	class:zz_pContext
zz_pContext	deplib/ntl-main/src/lzz_p.cpp	/^zz_pContext::zz_pContext(INIT_USER_FFT_TYPE, long q) :$/;"	f	class:zz_pContext
zz_pContext	deplib/ntl-main/src/lzz_p.cpp	/^zz_pContext::zz_pContext(long p, long maxroot) : $/;"	f	class:zz_pContext
zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^class zz_pE {$/;"	c
zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^explicit zz_pE(const zz_p& a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:zz_pE
zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^explicit zz_pE(long a) { *this = a;  } \/\/ NO_ALLOC$/;"	f	class:zz_pE
zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pE() {  } \/\/ NO_ALLOC$/;"	f	class:zz_pE
zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pE(INIT_ALLOC_TYPE) {  _zz_pE__rep.rep.SetMaxLength(zz_pE::degree()); }  \/\/ allocates space$/;"	f	class:zz_pE
zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pE(INIT_NO_ALLOC_TYPE) { }  \/\/ allocates no space$/;"	f	class:zz_pE
zz_pE	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pE(zz_pE& x, INIT_TRANS_TYPE) : _zz_pE__rep(x._zz_pE__rep, INIT_TRANS) { }$/;"	f	class:zz_pE
zz_pEBak	deplib/ntl-main/include/NTL/lzz_pE.h	/^class zz_pEBak {$/;"	c
zz_pEBak	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pEBak() : MustRestore(false) {  }$/;"	f	class:zz_pEBak
zz_pEContext	deplib/ntl-main/include/NTL/lzz_pE.h	/^class zz_pEContext {$/;"	c
zz_pEContext	deplib/ntl-main/include/NTL/lzz_pE.h	/^explicit zz_pEContext(const zz_pX& p) : ptr(MakeSmart<zz_pEInfoT>(p)) { }$/;"	f	class:zz_pEContext
zz_pEContext	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pEContext() { }$/;"	f	class:zz_pEContext
zz_pEInfo	deplib/ntl-main/src/lzz_pE.cpp	/^NTL_CHEAP_THREAD_LOCAL zz_pEInfoT *zz_pEInfo = 0; $/;"	v
zz_pEInfoT	deplib/ntl-main/include/NTL/lzz_pE.h	/^class zz_pEInfoT {$/;"	c
zz_pEInfoT	deplib/ntl-main/src/lzz_pE.cpp	/^zz_pEInfoT::zz_pEInfoT(const zz_pX& NewP)$/;"	f	class:zz_pEInfoT
zz_pEPush	deplib/ntl-main/include/NTL/lzz_pE.h	/^class zz_pEPush {$/;"	c
zz_pEPush	deplib/ntl-main/include/NTL/lzz_pE.h	/^explicit zz_pEPush(const zz_pEContext& context) { bak.save(); context.restore(); }$/;"	f	class:zz_pEPush
zz_pEPush	deplib/ntl-main/include/NTL/lzz_pE.h	/^explicit zz_pEPush(const zz_pX& p) { bak.save(); zz_pEContext c(p); c.restore(); }$/;"	f	class:zz_pEPush
zz_pEPush	deplib/ntl-main/include/NTL/lzz_pE.h	/^zz_pEPush() { bak.save(); }$/;"	f	class:zz_pEPush
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^class zz_pEX {$/;"	c
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^explicit zz_pEX(const zz_p& a) { *this = a; }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^explicit zz_pEX(const zz_pE& a) { *this = a; }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^explicit zz_pEX(long a) { *this = a; }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(INIT_MONO_TYPE, long i, const zz_p& a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(INIT_MONO_TYPE, long i, const zz_pE& a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(long i, const zz_p& a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(long i, const zz_pE& a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^inline zz_pEX::zz_pEX(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^zz_pEX() { }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^zz_pEX(INIT_SIZE_TYPE, long n) { rep.SetMaxLength(n); }$/;"	f	class:zz_pEX
zz_pEX	deplib/ntl-main/include/NTL/lzz_pEX.h	/^zz_pEX(zz_pEX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:zz_pEX
zz_pEXArgBound	deplib/ntl-main/src/lzz_pEX.cpp	/^NTL_CHEAP_THREAD_LOCAL long zz_pEXArgBound = 0;$/;"	v
zz_pEXArgument	deplib/ntl-main/include/NTL/lzz_pEX.h	/^struct zz_pEXArgument {$/;"	s
zz_pEXFileThresh	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL double zz_pEXFileThresh = NTL_FILE_THRESH;$/;"	v
zz_pEXModulus	deplib/ntl-main/include/NTL/lzz_pEX.h	/^class zz_pEXModulus {$/;"	c
zz_pEXModulus	deplib/ntl-main/src/lzz_pEX.cpp	/^zz_pEXModulus::zz_pEXModulus()$/;"	f	class:zz_pEXModulus
zz_pEXModulus	deplib/ntl-main/src/lzz_pEX.cpp	/^zz_pEXModulus::zz_pEXModulus(const zz_pEX& ff)$/;"	f	class:zz_pEXModulus
zz_pEXTransMultiplier	deplib/ntl-main/include/NTL/lzz_pEX.h	/^struct zz_pEXTransMultiplier {$/;"	s
zz_pEX_BlockingFactor	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long zz_pEX_BlockingFactor = 10;$/;"	v
zz_pEX_GCDTableSize	deplib/ntl-main/src/lzz_pEXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long zz_pEX_GCDTableSize = 4;$/;"	v
zz_pEX_MOD_MUL	deplib/ntl-main/src/lzz_pEX.cpp	/^const long zz_pEX_MOD_MUL = 1;$/;"	v
zz_pEX_MOD_PLAIN	deplib/ntl-main/src/lzz_pEX.cpp	/^const long zz_pEX_MOD_PLAIN = 0;$/;"	v
zz_pE_SizeInWords	deplib/ntl-main/src/mat_lzz_pE.cpp	/^zz_pE_SizeInWords()$/;"	f	file:
zz_pInfo	deplib/ntl-main/src/lzz_p.cpp	/^NTL_CHEAP_THREAD_LOCAL zz_pInfoT *zz_pInfo = 0;$/;"	v
zz_pInfoT	deplib/ntl-main/include/NTL/lzz_p.h	/^class zz_pInfoT {$/;"	c
zz_pInfoT	deplib/ntl-main/src/lzz_p.cpp	/^zz_pInfoT::zz_pInfoT(INIT_FFT_TYPE, FFTPrimeInfo *info)$/;"	f	class:zz_pInfoT
zz_pInfoT	deplib/ntl-main/src/lzz_p.cpp	/^zz_pInfoT::zz_pInfoT(INIT_USER_FFT_TYPE, long q)$/;"	f	class:zz_pInfoT
zz_pInfoT	deplib/ntl-main/src/lzz_p.cpp	/^zz_pInfoT::zz_pInfoT(long NewP, long maxroot)$/;"	f	class:zz_pInfoT
zz_pPush	deplib/ntl-main/include/NTL/lzz_p.h	/^class zz_pPush {$/;"	c
zz_pPush	deplib/ntl-main/include/NTL/lzz_p.h	/^explicit zz_pPush(const zz_pContext& context) { bak.save(); context.restore(); }$/;"	f	class:zz_pPush
zz_pPush	deplib/ntl-main/include/NTL/lzz_p.h	/^explicit zz_pPush(long p, long maxroot=NTL_FFTMaxRoot) $/;"	f	class:zz_pPush
zz_pPush	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_pPush() { bak.save(); }$/;"	f	class:zz_pPush
zz_pPush	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_pPush(INIT_FFT_TYPE, long index) $/;"	f	class:zz_pPush
zz_pPush	deplib/ntl-main/include/NTL/lzz_p.h	/^zz_pPush(INIT_USER_FFT_TYPE, long q)$/;"	f	class:zz_pPush
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^class zz_pX {$/;"	c
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^explicit zz_pX(long a) { *this = a; }$/;"	f	class:zz_pX
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^explicit zz_pX(zz_p a) { *this = a; }$/;"	f	class:zz_pX
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX::zz_pX(INIT_MONO_TYPE, long i) { SetCoeff(*this, i); }$/;"	f	class:zz_pX
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX::zz_pX(INIT_MONO_TYPE, long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pX
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX::zz_pX(INIT_MONO_TYPE, long i, zz_p a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pX
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX::zz_pX(long i, long a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pX
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^inline zz_pX::zz_pX(long i, zz_p a) { SetCoeff(*this, i, a); }$/;"	f	class:zz_pX
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^zz_pX() {}$/;"	f	class:zz_pX
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^zz_pX(INIT_SIZE_TYPE, long n) { rep.SetMaxLength(n); }$/;"	f	class:zz_pX
zz_pX	deplib/ntl-main/include/NTL/lzz_pX.h	/^zz_pX(zz_pX& x, INIT_TRANS_TYPE) : rep(x.rep, INIT_TRANS) { }$/;"	f	class:zz_pX
zz_pXArgBound	deplib/ntl-main/src/lzz_pX1.cpp	/^NTL_CHEAP_THREAD_LOCAL long zz_pXArgBound = 0;$/;"	v
zz_pXArgument	deplib/ntl-main/include/NTL/lzz_pX.h	/^struct zz_pXArgument {$/;"	s
zz_pXMatrix	deplib/ntl-main/include/NTL/lzz_pX.h	/^   zz_pXMatrix() { }$/;"	f	class:zz_pXMatrix
zz_pXMatrix	deplib/ntl-main/include/NTL/lzz_pX.h	/^class zz_pXMatrix {$/;"	c
zz_pXModulus	deplib/ntl-main/include/NTL/lzz_pX.h	/^   zz_pXModulus() : UseFFT(0), n(-1)  { }$/;"	f	class:zz_pXModulus
zz_pXModulus	deplib/ntl-main/include/NTL/lzz_pX.h	/^class zz_pXModulus {$/;"	c
zz_pXModulus	deplib/ntl-main/src/lzz_pX.cpp	/^zz_pXModulus::zz_pXModulus(const zz_pX& ff)$/;"	f	class:zz_pXModulus
zz_pXMultiplier	deplib/ntl-main/include/NTL/lzz_pX.h	/^   zz_pXMultiplier() : UseFFT(0)  { }$/;"	f	class:zz_pXMultiplier
zz_pXMultiplier	deplib/ntl-main/include/NTL/lzz_pX.h	/^class zz_pXMultiplier {$/;"	c
zz_pXMultiplier	deplib/ntl-main/src/lzz_pX.cpp	/^zz_pXMultiplier::zz_pXMultiplier(const zz_pX& b, const zz_pXModulus& F)$/;"	f	class:zz_pXMultiplier
zz_pXNewArgument	deplib/ntl-main/include/NTL/lzz_pX.h	/^struct zz_pXNewArgument {$/;"	s
zz_pXTransMultiplier	deplib/ntl-main/src/lzz_pXTest.cpp	/^struct zz_pXTransMultiplier {$/;"	s	file:
zz_pX_BlockingFactor	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long zz_pX_BlockingFactor = 10;$/;"	v
zz_pX_GCDTableSize	deplib/ntl-main/src/lzz_pXFactoring.cpp	/^NTL_CHEAP_THREAD_LOCAL long zz_pX_GCDTableSize = 4;$/;"	v
zz_pX_bermass_crossover	deplib/ntl-main/src/lzz_pX.cpp	/^const long zz_pX_bermass_crossover[5] = {400, 480, 900, 1600, 1600};$/;"	v
zz_pX_div_crossover	deplib/ntl-main/src/lzz_pX.cpp	/^const long zz_pX_div_crossover[5] = {180, 180, 350, 750, 750};$/;"	v
zz_pX_gcd_crossover	deplib/ntl-main/src/lzz_pX.cpp	/^const long zz_pX_gcd_crossover[5] = {400, 400, 800, 1400, 1400};$/;"	v
zz_pX_halfgcd_crossover	deplib/ntl-main/src/lzz_pX.cpp	/^const long zz_pX_halfgcd_crossover[5] = {90, 90, 180, 350, 350};$/;"	v
zz_pX_mod_crossover	deplib/ntl-main/src/lzz_pX.cpp	/^const long zz_pX_mod_crossover[5] = {45, 45, 90, 180, 180};$/;"	v
zz_pX_mul_crossover	deplib/ntl-main/src/lzz_pX.cpp	/^const long zz_pX_mul_crossover[5] = {150, 150, 300, 500, 500};$/;"	v
zz_pX_newton_crossover	deplib/ntl-main/src/lzz_pX.cpp	/^const long zz_pX_newton_crossover[5] = {150, 150, 300, 700, 700};$/;"	v
zz_pX_trace_crossover	deplib/ntl-main/src/lzz_pX.cpp	/^const long zz_pX_trace_crossover[5] = {200, 350, 450, 800, 800};$/;"	v
zz_p_context	deplib/ntl-main/include/NTL/FFT.h	/^   SmartPtr<zz_pInfoT> zz_p_context; $/;"	m	struct:FFTPrimeInfo
~AlignedArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   ~AlignedArray() { NTL_SNS free(sp); }$/;"	f	class:AlignedArray
~AutomaticThread	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^      ~AutomaticThread()$/;"	f	struct:BasicThreadPool::AutomaticThread
~B	deplib/ntl-main/src/CheckCOPY_TRAITS1.cpp	/^struct B { ~B() {} };$/;"	f	struct:B
~B	deplib/ntl-main/src/CheckCOPY_TRAITS2.cpp	/^struct B { ~B() {} };$/;"	f	struct:B
~BasicThreadPool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^  ~BasicThreadPool() $/;"	f	class:BasicThreadPool
~Builder	deplib/ntl-main/include/NTL/Lazy.h	/^      ~Builder() { if (moved) ref.initialized = true; }$/;"	f	class:Lazy::Builder
~Builder	deplib/ntl-main/include/NTL/LazyTable.h	/^      ~Builder() { if (amount) ref.len = curlen; }$/;"	f	class:LazyTable::Builder
~CSRPush	deplib/ntl-main/src/pd_FFT.cpp	/^CSRPush::~CSRPush()$/;"	f	class:CSRPush
~CloneablePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   ~CloneablePtr() {$/;"	f	class:CloneablePtr
~CopiedPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   ~CopiedPtr() { P::deleter(dp); }$/;"	f	class:CopiedPtr
~DummyScopeGuard	deplib/ntl-main/include/NTL/tools.h	/^   ~DummyScopeGuard() { if (active) TerminalError("unexpected exception"); }$/;"	f	class:DummyScopeGuard
~FileList	deplib/ntl-main/src/fileio.cpp	/^FileList::~FileList()$/;"	f	class:FileList
~GF2EBak	deplib/ntl-main/src/GF2E.cpp	/^GF2EBak::~GF2EBak()$/;"	f	class:GF2EBak
~GF2XHexOutputPush	deplib/ntl-main/include/NTL/GF2X.h	/^   ~GF2XHexOutputPush() { GF2X::HexOutput = OldHexOutput; }$/;"	f	class:GF2XHexOutputPush
~GF2XVec	deplib/ntl-main/include/NTL/GF2XVec.h	/^   ~GF2XVec() { kill(); };$/;"	f	class:GF2XVec
~GF2XWatcher	deplib/ntl-main/include/NTL/GF2X.h	/^   ~GF2XWatcher() { watched.KillBig(); } $/;"	f	class:GF2XWatcher
~Node	deplib/ntl-main/include/NTL/tools.h	/^   virtual ~Node() { }$/;"	f	struct:details_pthread::Node
~Node	deplib/ntl-main/src/CheckThreads.cpp	/^   virtual ~Node() { }$/;"	f	struct:details_pthread::Node
~RROutputPush	deplib/ntl-main/include/NTL/RR.h	/^   ~RROutputPush() { RR::oprec = old_p; } $/;"	f	class:RROutputPush
~RRPush	deplib/ntl-main/include/NTL/RR.h	/^   ~RRPush() { RR::prec = old_p; } $/;"	f	class:RRPush
~RandomStreamPush	deplib/ntl-main/include/NTL/ZZ.h	/^   ~RandomStreamPush() { SetSeed(saved); } $/;"	f	class:RandomStreamPush
~RecursiveThreadPool	deplib/ntl-main/include/NTL/BasicThreadPool.h	/^   ~RecursiveThreadPool() $/;"	f	struct:RecursiveThreadPool
~SmartPtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   ~SmartPtr() {$/;"	f	class:SmartPtr
~SmartPtrControl	deplib/ntl-main/include/NTL/SmartPtr.h	/^   virtual ~SmartPtrControl() { }$/;"	f	class:SmartPtrControl
~SmartPtrControlDerived	deplib/ntl-main/include/NTL/SmartPtr.h	/^   ~SmartPtrControlDerived() $/;"	f	class:SmartPtrControlDerived
~Unique2DArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   ~Unique2DArray()$/;"	f	class:Unique2DArray
~UniqueArray	deplib/ntl-main/include/NTL/SmartPtr.h	/^   ~UniqueArray() { delete[] dp; }$/;"	f	class:UniqueArray
~UniquePtr	deplib/ntl-main/include/NTL/SmartPtr.h	/^   ~UniquePtr() { P::deleter(dp); }$/;"	f	class:UniquePtr
~Vec	deplib/ntl-main/include/NTL/vec_GF2.h	/^   ~Vec() {}$/;"	f	class:Vec
~Vec	deplib/ntl-main/include/NTL/vector.h	/^   ~Vec()$/;"	f	class:Vec
~Watcher	deplib/ntl-main/include/NTL/vector.h	/^      ~Watcher() $/;"	f	class:Vec::Watcher
~WordVector	deplib/ntl-main/src/WordVector.cpp	/^WordVector::~WordVector()  $/;"	f	class:WordVector
~WordVectorWatcher	deplib/ntl-main/include/NTL/WordVector.h	/^   ~WordVectorWatcher() { watched.KillBig(); }$/;"	f	class:WordVectorWatcher
~WrappedPtr	deplib/ntl-main/include/NTL/tools.h	/^   ~WrappedPtr() { if (rep) Deleter::apply(rep); } $/;"	f	class:WrappedPtr
~X	deplib/ntl-main/src/CheckThreads.cpp	/^   ~X() { count_des++; }$/;"	f	struct:X
~ZZVec	deplib/ntl-main/include/NTL/ZZVec.h	/^   ~ZZVec() { kill(); };$/;"	f	class:ZZVec
~ZZWatcher	deplib/ntl-main/include/NTL/ZZ.h	/^   ~ZZWatcher() { watched.KillBig(); }$/;"	f	class:ZZWatcher
~ZZ_pBak	deplib/ntl-main/src/ZZ_p.cpp	/^ZZ_pBak::~ZZ_pBak()$/;"	f	class:ZZ_pBak
~ZZ_pEBak	deplib/ntl-main/src/ZZ_pE.cpp	/^ZZ_pEBak::~ZZ_pEBak()$/;"	f	class:ZZ_pEBak
~ZZ_pEXModulus	deplib/ntl-main/src/ZZ_pEX.cpp	/^ZZ_pEXModulus::~ZZ_pEXModulus() $/;"	f	class:ZZ_pEXModulus
~ZZ_pWatcher	deplib/ntl-main/include/NTL/ZZ_p.h	/^   ~ZZ_pWatcher() { watched.KillBig(); }$/;"	f	class:ZZ_pWatcher
~_NTL_GF2EXMatrix	deplib/ntl-main/src/GF2EX.cpp	/^   ~_NTL_GF2EXMatrix() { }$/;"	f	class:_NTL_GF2EXMatrix
~_NTL_GF2XMatrix	deplib/ntl-main/src/GF2X1.cpp	/^   ~_NTL_GF2XMatrix() { }$/;"	f	class:_NTL_GF2XMatrix
~_NTL_ZZ_pEXMatrix	deplib/ntl-main/src/ZZ_pEX.cpp	/^   ~_NTL_ZZ_pEXMatrix() { }$/;"	f	class:_NTL_ZZ_pEXMatrix
~_NTL_zz_pEXMatrix	deplib/ntl-main/src/lzz_pEX.cpp	/^   ~_NTL_zz_pEXMatrix() { }$/;"	f	class:_NTL_zz_pEXMatrix
~_ntl_crt_struct	deplib/ntl-main/include/NTL/lip.h	/^   virtual ~_ntl_crt_struct() { }$/;"	f	class:_ntl_crt_struct
~_ntl_gbigint_watcher	deplib/ntl-main/src/lip.cpp	/^   ~_ntl_gbigint_watcher() $/;"	f	class:_ntl_gbigint_watcher
~_ntl_reduce_struct	deplib/ntl-main/include/NTL/lip.h	/^   virtual ~_ntl_reduce_struct() { }$/;"	f	class:_ntl_reduce_struct
~_ntl_rem_struct	deplib/ntl-main/include/NTL/lip.h	/^   virtual ~_ntl_rem_struct() { }$/;"	f	class:_ntl_rem_struct
~_ntl_tmp_vec	deplib/ntl-main/include/NTL/lip.h	/^   virtual ~_ntl_tmp_vec() { }$/;"	f	class:_ntl_tmp_vec
~mat_ZZ_p_opaque_body	deplib/ntl-main/include/NTL/mat_ZZ_p.h	/^   virtual ~mat_ZZ_p_opaque_body() { }$/;"	f	struct:mat_ZZ_p_opaque_body
~scope_guard	deplib/ntl-main/include/NTL/tools.h	/^    ~scope_guard() {$/;"	f	class:scope_guard
~wrapped_mpz	deplib/ntl-main/src/lip.cpp	/^   ~wrapped_mpz() { mpz_clear(body); }$/;"	f	struct:wrapped_mpz
~zz_pBak	deplib/ntl-main/src/lzz_p.cpp	/^zz_pBak::~zz_pBak()$/;"	f	class:zz_pBak
~zz_pEBak	deplib/ntl-main/src/lzz_pE.cpp	/^zz_pEBak::~zz_pEBak()$/;"	f	class:zz_pEBak
~zz_pEXModulus	deplib/ntl-main/src/lzz_pEX.cpp	/^zz_pEXModulus::~zz_pEXModulus() $/;"	f	class:zz_pEXModulus
